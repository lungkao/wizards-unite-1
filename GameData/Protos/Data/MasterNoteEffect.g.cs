// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/MasterNoteEffect.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/MasterNoteEffect.proto</summary>
  public static partial class MasterNoteEffectReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/MasterNoteEffect.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MasterNoteEffectReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRXVVByb3Rvcy9EYXRhL01hc3Rlck5vdGVFZmZlY3QucHJvdG8SDVdVUHJv",
            "dG9zLkRhdGEi4QEKEE1hc3Rlck5vdGVFZmZlY3QSCgoCaWQYASABKAkSSQoL",
            "ZWZmZWN0X3R5cGUYAiABKA4yNC5XVVByb3Rvcy5EYXRhLk1hc3Rlck5vdGVF",
            "ZmZlY3QuTWFzdGVyTm90ZUVmZmVjdFR5cGUSDQoFcG93ZXIYAyABKAMiZwoU",
            "TWFzdGVyTm90ZUVmZmVjdFR5cGUSCQoFVU5TRVQQABIVChFCUkVXX1NQRUVE",
            "X1NUQVRJQxABEhYKEkJSRVdfU1BFRURfUEVSQ0VOVBACEhUKEUJSRVdfWUlF",
            "TERfU1RBVElDEANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.MasterNoteEffect), global::WUProtos.Data.MasterNoteEffect.Parser, new[]{ "Id", "EffectType", "Power" }, null, new[]{ typeof(global::WUProtos.Data.MasterNoteEffect.Types.MasterNoteEffectType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MasterNoteEffect : pb::IMessage<MasterNoteEffect> {
    private static readonly pb::MessageParser<MasterNoteEffect> _parser = new pb::MessageParser<MasterNoteEffect>(() => new MasterNoteEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MasterNoteEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.MasterNoteEffectReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterNoteEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterNoteEffect(MasterNoteEffect other) : this() {
      id_ = other.id_;
      effectType_ = other.effectType_;
      power_ = other.power_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterNoteEffect Clone() {
      return new MasterNoteEffect(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "effect_type" field.</summary>
    public const int EffectTypeFieldNumber = 2;
    private global::WUProtos.Data.MasterNoteEffect.Types.MasterNoteEffectType effectType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.MasterNoteEffect.Types.MasterNoteEffectType EffectType {
      get { return effectType_; }
      set {
        effectType_ = value;
      }
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 3;
    private long power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MasterNoteEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MasterNoteEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EffectType != other.EffectType) return false;
      if (Power != other.Power) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (EffectType != 0) hash ^= EffectType.GetHashCode();
      if (Power != 0L) hash ^= Power.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (EffectType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EffectType);
      }
      if (Power != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Power);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (EffectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectType);
      }
      if (Power != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Power);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MasterNoteEffect other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.EffectType != 0) {
        EffectType = other.EffectType;
      }
      if (other.Power != 0L) {
        Power = other.Power;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            EffectType = (global::WUProtos.Data.MasterNoteEffect.Types.MasterNoteEffectType) input.ReadEnum();
            break;
          }
          case 24: {
            Power = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MasterNoteEffect message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MasterNoteEffectType {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("BREW_SPEED_STATIC")] BrewSpeedStatic = 1,
        [pbr::OriginalName("BREW_SPEED_PERCENT")] BrewSpeedPercent = 2,
        [pbr::OriginalName("BREW_YIELD_STATIC")] BrewYieldStatic = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
