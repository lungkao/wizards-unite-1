// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/PerformanceSnapshot.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/PerformanceSnapshot.proto</summary>
  public static partial class PerformanceSnapshotReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/PerformanceSnapshot.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PerformanceSnapshotReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidXVVByb3Rvcy9EYXRhL1BlcmZvcm1hbmNlU25hcHNob3QucHJvdG8SDVdV",
            "UHJvdG9zLkRhdGEaH1dVUHJvdG9zL0RhdGEvRG91YmxlUmFuZ2UucHJvdG8i",
            "qQEKE1BlcmZvcm1hbmNlU25hcHNob3QSNwoTZnJhbWVfbWV0cmljX3Jhbmdl",
            "cxgBIAMoCzIaLldVUHJvdG9zLkRhdGEuRG91YmxlUmFuZ2USGQoRb25fZGVt",
            "YW5kX21ldHJpY3MYAiADKAESFAoMZnJhbWVfbnVtYmVyGAMgASgDEhkKEXJl",
            "YWxfdGltZV9zZWNvbmRzGAQgASgCEg0KBWxhYmVsGAUgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.DoubleRangeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.PerformanceSnapshot), global::WUProtos.Data.PerformanceSnapshot.Parser, new[]{ "FrameMetricRanges", "OnDemandMetrics", "FrameNumber", "RealTimeSeconds", "Label" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PerformanceSnapshot : pb::IMessage<PerformanceSnapshot> {
    private static readonly pb::MessageParser<PerformanceSnapshot> _parser = new pb::MessageParser<PerformanceSnapshot>(() => new PerformanceSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerformanceSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.PerformanceSnapshotReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformanceSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformanceSnapshot(PerformanceSnapshot other) : this() {
      frameMetricRanges_ = other.frameMetricRanges_.Clone();
      onDemandMetrics_ = other.onDemandMetrics_.Clone();
      frameNumber_ = other.frameNumber_;
      realTimeSeconds_ = other.realTimeSeconds_;
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformanceSnapshot Clone() {
      return new PerformanceSnapshot(this);
    }

    /// <summary>Field number for the "frame_metric_ranges" field.</summary>
    public const int FrameMetricRangesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::WUProtos.Data.DoubleRange> _repeated_frameMetricRanges_codec
        = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.DoubleRange.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.DoubleRange> frameMetricRanges_ = new pbc::RepeatedField<global::WUProtos.Data.DoubleRange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.DoubleRange> FrameMetricRanges {
      get { return frameMetricRanges_; }
    }

    /// <summary>Field number for the "on_demand_metrics" field.</summary>
    public const int OnDemandMetricsFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_onDemandMetrics_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> onDemandMetrics_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> OnDemandMetrics {
      get { return onDemandMetrics_; }
    }

    /// <summary>Field number for the "frame_number" field.</summary>
    public const int FrameNumberFieldNumber = 3;
    private long frameNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrameNumber {
      get { return frameNumber_; }
      set {
        frameNumber_ = value;
      }
    }

    /// <summary>Field number for the "real_time_seconds" field.</summary>
    public const int RealTimeSecondsFieldNumber = 4;
    private float realTimeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RealTimeSeconds {
      get { return realTimeSeconds_; }
      set {
        realTimeSeconds_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 5;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerformanceSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerformanceSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!frameMetricRanges_.Equals(other.frameMetricRanges_)) return false;
      if(!onDemandMetrics_.Equals(other.onDemandMetrics_)) return false;
      if (FrameNumber != other.FrameNumber) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RealTimeSeconds, other.RealTimeSeconds)) return false;
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= frameMetricRanges_.GetHashCode();
      hash ^= onDemandMetrics_.GetHashCode();
      if (FrameNumber != 0L) hash ^= FrameNumber.GetHashCode();
      if (RealTimeSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RealTimeSeconds);
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      frameMetricRanges_.WriteTo(output, _repeated_frameMetricRanges_codec);
      onDemandMetrics_.WriteTo(output, _repeated_onDemandMetrics_codec);
      if (FrameNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FrameNumber);
      }
      if (RealTimeSeconds != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RealTimeSeconds);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frameMetricRanges_.CalculateSize(_repeated_frameMetricRanges_codec);
      size += onDemandMetrics_.CalculateSize(_repeated_onDemandMetrics_codec);
      if (FrameNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrameNumber);
      }
      if (RealTimeSeconds != 0F) {
        size += 1 + 4;
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerformanceSnapshot other) {
      if (other == null) {
        return;
      }
      frameMetricRanges_.Add(other.frameMetricRanges_);
      onDemandMetrics_.Add(other.onDemandMetrics_);
      if (other.FrameNumber != 0L) {
        FrameNumber = other.FrameNumber;
      }
      if (other.RealTimeSeconds != 0F) {
        RealTimeSeconds = other.RealTimeSeconds;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            frameMetricRanges_.AddEntriesFrom(input, _repeated_frameMetricRanges_codec);
            break;
          }
          case 18:
          case 17: {
            onDemandMetrics_.AddEntriesFrom(input, _repeated_onDemandMetrics_codec);
            break;
          }
          case 24: {
            FrameNumber = input.ReadInt64();
            break;
          }
          case 37: {
            RealTimeSeconds = input.ReadFloat();
            break;
          }
          case 42: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
