// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Encounter/EncounterInteractSwishStageOptions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Encounter {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Encounter/EncounterInteractSwishStageOptions.proto</summary>
  public static partial class EncounterInteractSwishStageOptionsReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Encounter/EncounterInteractSwishStageOptions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EncounterInteractSwishStageOptionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkBXVVByb3Rvcy9EYXRhL0VuY291bnRlci9FbmNvdW50ZXJJbnRlcmFjdFN3",
            "aXNoU3RhZ2VPcHRpb25zLnByb3RvEhdXVVByb3Rvcy5EYXRhLkVuY291bnRl",
            "ciL6AQoiRW5jb3VudGVySW50ZXJhY3RTd2lzaFN0YWdlT3B0aW9ucxIVCg1l",
            "bmVyZ3lfZ210X2lkGAEgAygJEhUKDWlzX2NsaWVudF9oaXQYAiABKAgSFgoO",
            "YWNjdXJhY3lfYm9udXMYAyABKAISHQoVcHJvZmVzc2lvbnNfcnBzX21hdGNo",
            "GAQgASgCEiAKGGNvZXJjZV9zcGVsbGNhc3Rfc3VjY2VzcxhkIAEoCBIgChhj",
            "b2VyY2Vfc3BlbGxjYXN0X2ZhaWx1cmUYZSABKAgSEwoLY29lcmNlX2ZsZWUY",
            "ZiABKAgSFgoOY29lcmNlX25vX2ZsZWUYZyABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Encounter.EncounterInteractSwishStageOptions), global::WUProtos.Data.Encounter.EncounterInteractSwishStageOptions.Parser, new[]{ "EnergyGmtId", "IsClientHit", "AccuracyBonus", "ProfessionsRpsMatch", "CoerceSpellcastSuccess", "CoerceSpellcastFailure", "CoerceFlee", "CoerceNoFlee" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EncounterInteractSwishStageOptions : pb::IMessage<EncounterInteractSwishStageOptions> {
    private static readonly pb::MessageParser<EncounterInteractSwishStageOptions> _parser = new pb::MessageParser<EncounterInteractSwishStageOptions>(() => new EncounterInteractSwishStageOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncounterInteractSwishStageOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Encounter.EncounterInteractSwishStageOptionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterInteractSwishStageOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterInteractSwishStageOptions(EncounterInteractSwishStageOptions other) : this() {
      energyGmtId_ = other.energyGmtId_.Clone();
      isClientHit_ = other.isClientHit_;
      accuracyBonus_ = other.accuracyBonus_;
      professionsRpsMatch_ = other.professionsRpsMatch_;
      coerceSpellcastSuccess_ = other.coerceSpellcastSuccess_;
      coerceSpellcastFailure_ = other.coerceSpellcastFailure_;
      coerceFlee_ = other.coerceFlee_;
      coerceNoFlee_ = other.coerceNoFlee_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterInteractSwishStageOptions Clone() {
      return new EncounterInteractSwishStageOptions(this);
    }

    /// <summary>Field number for the "energy_gmt_id" field.</summary>
    public const int EnergyGmtIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_energyGmtId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> energyGmtId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> EnergyGmtId {
      get { return energyGmtId_; }
    }

    /// <summary>Field number for the "is_client_hit" field.</summary>
    public const int IsClientHitFieldNumber = 2;
    private bool isClientHit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClientHit {
      get { return isClientHit_; }
      set {
        isClientHit_ = value;
      }
    }

    /// <summary>Field number for the "accuracy_bonus" field.</summary>
    public const int AccuracyBonusFieldNumber = 3;
    private float accuracyBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AccuracyBonus {
      get { return accuracyBonus_; }
      set {
        accuracyBonus_ = value;
      }
    }

    /// <summary>Field number for the "professions_rps_match" field.</summary>
    public const int ProfessionsRpsMatchFieldNumber = 4;
    private float professionsRpsMatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ProfessionsRpsMatch {
      get { return professionsRpsMatch_; }
      set {
        professionsRpsMatch_ = value;
      }
    }

    /// <summary>Field number for the "coerce_spellcast_success" field.</summary>
    public const int CoerceSpellcastSuccessFieldNumber = 100;
    private bool coerceSpellcastSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CoerceSpellcastSuccess {
      get { return coerceSpellcastSuccess_; }
      set {
        coerceSpellcastSuccess_ = value;
      }
    }

    /// <summary>Field number for the "coerce_spellcast_failure" field.</summary>
    public const int CoerceSpellcastFailureFieldNumber = 101;
    private bool coerceSpellcastFailure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CoerceSpellcastFailure {
      get { return coerceSpellcastFailure_; }
      set {
        coerceSpellcastFailure_ = value;
      }
    }

    /// <summary>Field number for the "coerce_flee" field.</summary>
    public const int CoerceFleeFieldNumber = 102;
    private bool coerceFlee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CoerceFlee {
      get { return coerceFlee_; }
      set {
        coerceFlee_ = value;
      }
    }

    /// <summary>Field number for the "coerce_no_flee" field.</summary>
    public const int CoerceNoFleeFieldNumber = 103;
    private bool coerceNoFlee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CoerceNoFlee {
      get { return coerceNoFlee_; }
      set {
        coerceNoFlee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncounterInteractSwishStageOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncounterInteractSwishStageOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!energyGmtId_.Equals(other.energyGmtId_)) return false;
      if (IsClientHit != other.IsClientHit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccuracyBonus, other.AccuracyBonus)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ProfessionsRpsMatch, other.ProfessionsRpsMatch)) return false;
      if (CoerceSpellcastSuccess != other.CoerceSpellcastSuccess) return false;
      if (CoerceSpellcastFailure != other.CoerceSpellcastFailure) return false;
      if (CoerceFlee != other.CoerceFlee) return false;
      if (CoerceNoFlee != other.CoerceNoFlee) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= energyGmtId_.GetHashCode();
      if (IsClientHit != false) hash ^= IsClientHit.GetHashCode();
      if (AccuracyBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccuracyBonus);
      if (ProfessionsRpsMatch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ProfessionsRpsMatch);
      if (CoerceSpellcastSuccess != false) hash ^= CoerceSpellcastSuccess.GetHashCode();
      if (CoerceSpellcastFailure != false) hash ^= CoerceSpellcastFailure.GetHashCode();
      if (CoerceFlee != false) hash ^= CoerceFlee.GetHashCode();
      if (CoerceNoFlee != false) hash ^= CoerceNoFlee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      energyGmtId_.WriteTo(output, _repeated_energyGmtId_codec);
      if (IsClientHit != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsClientHit);
      }
      if (AccuracyBonus != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AccuracyBonus);
      }
      if (ProfessionsRpsMatch != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ProfessionsRpsMatch);
      }
      if (CoerceSpellcastSuccess != false) {
        output.WriteRawTag(160, 6);
        output.WriteBool(CoerceSpellcastSuccess);
      }
      if (CoerceSpellcastFailure != false) {
        output.WriteRawTag(168, 6);
        output.WriteBool(CoerceSpellcastFailure);
      }
      if (CoerceFlee != false) {
        output.WriteRawTag(176, 6);
        output.WriteBool(CoerceFlee);
      }
      if (CoerceNoFlee != false) {
        output.WriteRawTag(184, 6);
        output.WriteBool(CoerceNoFlee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += energyGmtId_.CalculateSize(_repeated_energyGmtId_codec);
      if (IsClientHit != false) {
        size += 1 + 1;
      }
      if (AccuracyBonus != 0F) {
        size += 1 + 4;
      }
      if (ProfessionsRpsMatch != 0F) {
        size += 1 + 4;
      }
      if (CoerceSpellcastSuccess != false) {
        size += 2 + 1;
      }
      if (CoerceSpellcastFailure != false) {
        size += 2 + 1;
      }
      if (CoerceFlee != false) {
        size += 2 + 1;
      }
      if (CoerceNoFlee != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncounterInteractSwishStageOptions other) {
      if (other == null) {
        return;
      }
      energyGmtId_.Add(other.energyGmtId_);
      if (other.IsClientHit != false) {
        IsClientHit = other.IsClientHit;
      }
      if (other.AccuracyBonus != 0F) {
        AccuracyBonus = other.AccuracyBonus;
      }
      if (other.ProfessionsRpsMatch != 0F) {
        ProfessionsRpsMatch = other.ProfessionsRpsMatch;
      }
      if (other.CoerceSpellcastSuccess != false) {
        CoerceSpellcastSuccess = other.CoerceSpellcastSuccess;
      }
      if (other.CoerceSpellcastFailure != false) {
        CoerceSpellcastFailure = other.CoerceSpellcastFailure;
      }
      if (other.CoerceFlee != false) {
        CoerceFlee = other.CoerceFlee;
      }
      if (other.CoerceNoFlee != false) {
        CoerceNoFlee = other.CoerceNoFlee;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            energyGmtId_.AddEntriesFrom(input, _repeated_energyGmtId_codec);
            break;
          }
          case 16: {
            IsClientHit = input.ReadBool();
            break;
          }
          case 29: {
            AccuracyBonus = input.ReadFloat();
            break;
          }
          case 37: {
            ProfessionsRpsMatch = input.ReadFloat();
            break;
          }
          case 800: {
            CoerceSpellcastSuccess = input.ReadBool();
            break;
          }
          case 808: {
            CoerceSpellcastFailure = input.ReadBool();
            break;
          }
          case 816: {
            CoerceFlee = input.ReadBool();
            break;
          }
          case 824: {
            CoerceNoFlee = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
