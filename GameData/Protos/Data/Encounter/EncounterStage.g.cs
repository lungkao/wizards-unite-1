// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Encounter/EncounterStage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Encounter {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Encounter/EncounterStage.proto</summary>
  public static partial class EncounterStageReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Encounter/EncounterStage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EncounterStageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixXVVByb3Rvcy9EYXRhL0VuY291bnRlci9FbmNvdW50ZXJTdGFnZS5wcm90",
            "bxIXV1VQcm90b3MuRGF0YS5FbmNvdW50ZXIaMVdVUHJvdG9zL0RhdGEvRW5j",
            "b3VudGVyL0VuY291bnRlclN0YWdlU3dpc2gucHJvdG8aLVdVUHJvdG9zL0Rh",
            "dGEvQ2xpZW50L0NsaWVudFNlcXVlbmNlRGF0YS5wcm90bxoyV1VQcm90b3Mv",
            "RGF0YS9FbmNvdW50ZXIvRW5jb3VudGVyU3RhZ2VDb21iYXQucHJvdG8aLFdV",
            "UHJvdG9zL0RhdGEvQ2xpZW50L0NsaWVudENvbWJhdFN0YXRlLnByb3RvGjNX",
            "VVByb3Rvcy9EYXRhL0VuY291bnRlci9FbmNvdW50ZXJTdGFnZVBvcnRrZXku",
            "cHJvdG8aM1dVUHJvdG9zL0RhdGEvRW5jb3VudGVyL0VuY291bnRlclN0YWdl",
            "UGljdHVyZS5wcm90bxoxV1VQcm90b3MvRGF0YS9DbGllbnQvQ2xpZW50Q29t",
            "YmF0RW5lbXlUcmFpdC5wcm90bxouV1VQcm90b3MvRGF0YS9DbGllbnQvQ2xp",
            "ZW50RW5jb3VudGVyVHlwZS5wcm90byLUBQoORW5jb3VudGVyU3RhZ2USPQoF",
            "c3dpc2gYASABKAsyLC5XVVByb3Rvcy5EYXRhLkVuY291bnRlci5FbmNvdW50",
            "ZXJTdGFnZVN3aXNoSAASPwoGY29tYmF0GAIgASgLMi0uV1VQcm90b3MuRGF0",
            "YS5FbmNvdW50ZXIuRW5jb3VudGVyU3RhZ2VDb21iYXRIABJBCgdwb3J0a2V5",
            "GAMgASgLMi4uV1VQcm90b3MuRGF0YS5FbmNvdW50ZXIuRW5jb3VudGVyU3Rh",
            "Z2VQb3J0a2V5SAASQQoHcGljdHVyZRgEIAEoCzIuLldVUHJvdG9zLkRhdGEu",
            "RW5jb3VudGVyLkVuY291bnRlclN0YWdlUGljdHVyZUgAEhkKEWNvbWJhdF9z",
            "cGVsbF9saXN0GAUgAygJEkYKFHN0YWdlX3NldHVwX3NlcXVlbmNlGAYgAygL",
            "MiguV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50U2VxdWVuY2VEYXRhEksK",
            "GXN0YWdlX2NvbXBsZXRpb25fc2VxdWVuY2UYByADKAsyKC5XVVByb3Rvcy5E",
            "YXRhLkNsaWVudC5DbGllbnRTZXF1ZW5jZURhdGESGwoTaWRsZV9sb29wX3Rp",
            "bWVsaW5lcxgIIAMoCRJCChFzdGF0ZV9ncmFwaF9ub2RlcxgJIAMoCzInLldV",
            "UHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudENvbWJhdFN0YXRlEhQKDHNwZWxs",
            "X2dtdF9pZBgKIAEoCRJJChNjb21iYXRfZW5lbXlfdHJhaXRzGAsgAygLMiwu",
            "V1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50Q29tYmF0RW5lbXlUcmFpdBJC",
            "Cg9lbmVteV9yYW5rX3RhZ3MYDCADKAsyKS5XVVByb3Rvcy5EYXRhLkNsaWVu",
            "dC5DbGllbnRFbmNvdW50ZXJUeXBlQgYKBFR5cGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Encounter.EncounterStageSwishReflection.Descriptor, global::WUProtos.Data.Client.ClientSequenceDataReflection.Descriptor, global::WUProtos.Data.Encounter.EncounterStageCombatReflection.Descriptor, global::WUProtos.Data.Client.ClientCombatStateReflection.Descriptor, global::WUProtos.Data.Encounter.EncounterStagePortkeyReflection.Descriptor, global::WUProtos.Data.Encounter.EncounterStagePictureReflection.Descriptor, global::WUProtos.Data.Client.ClientCombatEnemyTraitReflection.Descriptor, global::WUProtos.Data.Client.ClientEncounterTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Encounter.EncounterStage), global::WUProtos.Data.Encounter.EncounterStage.Parser, new[]{ "Swish", "Combat", "Portkey", "Picture", "CombatSpellList", "StageSetupSequence", "StageCompletionSequence", "IdleLoopTimelines", "StateGraphNodes", "SpellGmtId", "CombatEnemyTraits", "EnemyRankTags" }, new[]{ "Type" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EncounterStage : pb::IMessage<EncounterStage> {
    private static readonly pb::MessageParser<EncounterStage> _parser = new pb::MessageParser<EncounterStage>(() => new EncounterStage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncounterStage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Encounter.EncounterStageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterStage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterStage(EncounterStage other) : this() {
      combatSpellList_ = other.combatSpellList_.Clone();
      stageSetupSequence_ = other.stageSetupSequence_.Clone();
      stageCompletionSequence_ = other.stageCompletionSequence_.Clone();
      idleLoopTimelines_ = other.idleLoopTimelines_.Clone();
      stateGraphNodes_ = other.stateGraphNodes_.Clone();
      spellGmtId_ = other.spellGmtId_;
      combatEnemyTraits_ = other.combatEnemyTraits_.Clone();
      enemyRankTags_ = other.enemyRankTags_.Clone();
      switch (other.TypeCase) {
        case TypeOneofCase.Swish:
          Swish = other.Swish.Clone();
          break;
        case TypeOneofCase.Combat:
          Combat = other.Combat.Clone();
          break;
        case TypeOneofCase.Portkey:
          Portkey = other.Portkey.Clone();
          break;
        case TypeOneofCase.Picture:
          Picture = other.Picture.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterStage Clone() {
      return new EncounterStage(this);
    }

    /// <summary>Field number for the "swish" field.</summary>
    public const int SwishFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Encounter.EncounterStageSwish Swish {
      get { return typeCase_ == TypeOneofCase.Swish ? (global::WUProtos.Data.Encounter.EncounterStageSwish) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Swish;
      }
    }

    /// <summary>Field number for the "combat" field.</summary>
    public const int CombatFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Encounter.EncounterStageCombat Combat {
      get { return typeCase_ == TypeOneofCase.Combat ? (global::WUProtos.Data.Encounter.EncounterStageCombat) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Combat;
      }
    }

    /// <summary>Field number for the "portkey" field.</summary>
    public const int PortkeyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Encounter.EncounterStagePortkey Portkey {
      get { return typeCase_ == TypeOneofCase.Portkey ? (global::WUProtos.Data.Encounter.EncounterStagePortkey) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Portkey;
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Encounter.EncounterStagePicture Picture {
      get { return typeCase_ == TypeOneofCase.Picture ? (global::WUProtos.Data.Encounter.EncounterStagePicture) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Picture;
      }
    }

    /// <summary>Field number for the "combat_spell_list" field.</summary>
    public const int CombatSpellListFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_combatSpellList_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> combatSpellList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CombatSpellList {
      get { return combatSpellList_; }
    }

    /// <summary>Field number for the "stage_setup_sequence" field.</summary>
    public const int StageSetupSequenceFieldNumber = 6;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientSequenceData> _repeated_stageSetupSequence_codec
        = pb::FieldCodec.ForMessage(50, global::WUProtos.Data.Client.ClientSequenceData.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientSequenceData> stageSetupSequence_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientSequenceData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientSequenceData> StageSetupSequence {
      get { return stageSetupSequence_; }
    }

    /// <summary>Field number for the "stage_completion_sequence" field.</summary>
    public const int StageCompletionSequenceFieldNumber = 7;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientSequenceData> _repeated_stageCompletionSequence_codec
        = pb::FieldCodec.ForMessage(58, global::WUProtos.Data.Client.ClientSequenceData.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientSequenceData> stageCompletionSequence_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientSequenceData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientSequenceData> StageCompletionSequence {
      get { return stageCompletionSequence_; }
    }

    /// <summary>Field number for the "idle_loop_timelines" field.</summary>
    public const int IdleLoopTimelinesFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_idleLoopTimelines_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> idleLoopTimelines_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IdleLoopTimelines {
      get { return idleLoopTimelines_; }
    }

    /// <summary>Field number for the "state_graph_nodes" field.</summary>
    public const int StateGraphNodesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientCombatState> _repeated_stateGraphNodes_codec
        = pb::FieldCodec.ForMessage(74, global::WUProtos.Data.Client.ClientCombatState.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientCombatState> stateGraphNodes_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientCombatState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientCombatState> StateGraphNodes {
      get { return stateGraphNodes_; }
    }

    /// <summary>Field number for the "spell_gmt_id" field.</summary>
    public const int SpellGmtIdFieldNumber = 10;
    private string spellGmtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpellGmtId {
      get { return spellGmtId_; }
      set {
        spellGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "combat_enemy_traits" field.</summary>
    public const int CombatEnemyTraitsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientCombatEnemyTrait> _repeated_combatEnemyTraits_codec
        = pb::FieldCodec.ForMessage(90, global::WUProtos.Data.Client.ClientCombatEnemyTrait.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientCombatEnemyTrait> combatEnemyTraits_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientCombatEnemyTrait>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientCombatEnemyTrait> CombatEnemyTraits {
      get { return combatEnemyTraits_; }
    }

    /// <summary>Field number for the "enemy_rank_tags" field.</summary>
    public const int EnemyRankTagsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientEncounterType> _repeated_enemyRankTags_codec
        = pb::FieldCodec.ForMessage(98, global::WUProtos.Data.Client.ClientEncounterType.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientEncounterType> enemyRankTags_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientEncounterType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientEncounterType> EnemyRankTags {
      get { return enemyRankTags_; }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Swish = 1,
      Combat = 2,
      Portkey = 3,
      Picture = 4,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncounterStage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncounterStage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Swish, other.Swish)) return false;
      if (!object.Equals(Combat, other.Combat)) return false;
      if (!object.Equals(Portkey, other.Portkey)) return false;
      if (!object.Equals(Picture, other.Picture)) return false;
      if(!combatSpellList_.Equals(other.combatSpellList_)) return false;
      if(!stageSetupSequence_.Equals(other.stageSetupSequence_)) return false;
      if(!stageCompletionSequence_.Equals(other.stageCompletionSequence_)) return false;
      if(!idleLoopTimelines_.Equals(other.idleLoopTimelines_)) return false;
      if(!stateGraphNodes_.Equals(other.stateGraphNodes_)) return false;
      if (SpellGmtId != other.SpellGmtId) return false;
      if(!combatEnemyTraits_.Equals(other.combatEnemyTraits_)) return false;
      if(!enemyRankTags_.Equals(other.enemyRankTags_)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Swish) hash ^= Swish.GetHashCode();
      if (typeCase_ == TypeOneofCase.Combat) hash ^= Combat.GetHashCode();
      if (typeCase_ == TypeOneofCase.Portkey) hash ^= Portkey.GetHashCode();
      if (typeCase_ == TypeOneofCase.Picture) hash ^= Picture.GetHashCode();
      hash ^= combatSpellList_.GetHashCode();
      hash ^= stageSetupSequence_.GetHashCode();
      hash ^= stageCompletionSequence_.GetHashCode();
      hash ^= idleLoopTimelines_.GetHashCode();
      hash ^= stateGraphNodes_.GetHashCode();
      if (SpellGmtId.Length != 0) hash ^= SpellGmtId.GetHashCode();
      hash ^= combatEnemyTraits_.GetHashCode();
      hash ^= enemyRankTags_.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Swish) {
        output.WriteRawTag(10);
        output.WriteMessage(Swish);
      }
      if (typeCase_ == TypeOneofCase.Combat) {
        output.WriteRawTag(18);
        output.WriteMessage(Combat);
      }
      if (typeCase_ == TypeOneofCase.Portkey) {
        output.WriteRawTag(26);
        output.WriteMessage(Portkey);
      }
      if (typeCase_ == TypeOneofCase.Picture) {
        output.WriteRawTag(34);
        output.WriteMessage(Picture);
      }
      combatSpellList_.WriteTo(output, _repeated_combatSpellList_codec);
      stageSetupSequence_.WriteTo(output, _repeated_stageSetupSequence_codec);
      stageCompletionSequence_.WriteTo(output, _repeated_stageCompletionSequence_codec);
      idleLoopTimelines_.WriteTo(output, _repeated_idleLoopTimelines_codec);
      stateGraphNodes_.WriteTo(output, _repeated_stateGraphNodes_codec);
      if (SpellGmtId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SpellGmtId);
      }
      combatEnemyTraits_.WriteTo(output, _repeated_combatEnemyTraits_codec);
      enemyRankTags_.WriteTo(output, _repeated_enemyRankTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Swish) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Swish);
      }
      if (typeCase_ == TypeOneofCase.Combat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Combat);
      }
      if (typeCase_ == TypeOneofCase.Portkey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Portkey);
      }
      if (typeCase_ == TypeOneofCase.Picture) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Picture);
      }
      size += combatSpellList_.CalculateSize(_repeated_combatSpellList_codec);
      size += stageSetupSequence_.CalculateSize(_repeated_stageSetupSequence_codec);
      size += stageCompletionSequence_.CalculateSize(_repeated_stageCompletionSequence_codec);
      size += idleLoopTimelines_.CalculateSize(_repeated_idleLoopTimelines_codec);
      size += stateGraphNodes_.CalculateSize(_repeated_stateGraphNodes_codec);
      if (SpellGmtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellGmtId);
      }
      size += combatEnemyTraits_.CalculateSize(_repeated_combatEnemyTraits_codec);
      size += enemyRankTags_.CalculateSize(_repeated_enemyRankTags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncounterStage other) {
      if (other == null) {
        return;
      }
      combatSpellList_.Add(other.combatSpellList_);
      stageSetupSequence_.Add(other.stageSetupSequence_);
      stageCompletionSequence_.Add(other.stageCompletionSequence_);
      idleLoopTimelines_.Add(other.idleLoopTimelines_);
      stateGraphNodes_.Add(other.stateGraphNodes_);
      if (other.SpellGmtId.Length != 0) {
        SpellGmtId = other.SpellGmtId;
      }
      combatEnemyTraits_.Add(other.combatEnemyTraits_);
      enemyRankTags_.Add(other.enemyRankTags_);
      switch (other.TypeCase) {
        case TypeOneofCase.Swish:
          if (Swish == null) {
            Swish = new global::WUProtos.Data.Encounter.EncounterStageSwish();
          }
          Swish.MergeFrom(other.Swish);
          break;
        case TypeOneofCase.Combat:
          if (Combat == null) {
            Combat = new global::WUProtos.Data.Encounter.EncounterStageCombat();
          }
          Combat.MergeFrom(other.Combat);
          break;
        case TypeOneofCase.Portkey:
          if (Portkey == null) {
            Portkey = new global::WUProtos.Data.Encounter.EncounterStagePortkey();
          }
          Portkey.MergeFrom(other.Portkey);
          break;
        case TypeOneofCase.Picture:
          if (Picture == null) {
            Picture = new global::WUProtos.Data.Encounter.EncounterStagePicture();
          }
          Picture.MergeFrom(other.Picture);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.Encounter.EncounterStageSwish subBuilder = new global::WUProtos.Data.Encounter.EncounterStageSwish();
            if (typeCase_ == TypeOneofCase.Swish) {
              subBuilder.MergeFrom(Swish);
            }
            input.ReadMessage(subBuilder);
            Swish = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.Encounter.EncounterStageCombat subBuilder = new global::WUProtos.Data.Encounter.EncounterStageCombat();
            if (typeCase_ == TypeOneofCase.Combat) {
              subBuilder.MergeFrom(Combat);
            }
            input.ReadMessage(subBuilder);
            Combat = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Encounter.EncounterStagePortkey subBuilder = new global::WUProtos.Data.Encounter.EncounterStagePortkey();
            if (typeCase_ == TypeOneofCase.Portkey) {
              subBuilder.MergeFrom(Portkey);
            }
            input.ReadMessage(subBuilder);
            Portkey = subBuilder;
            break;
          }
          case 34: {
            global::WUProtos.Data.Encounter.EncounterStagePicture subBuilder = new global::WUProtos.Data.Encounter.EncounterStagePicture();
            if (typeCase_ == TypeOneofCase.Picture) {
              subBuilder.MergeFrom(Picture);
            }
            input.ReadMessage(subBuilder);
            Picture = subBuilder;
            break;
          }
          case 42: {
            combatSpellList_.AddEntriesFrom(input, _repeated_combatSpellList_codec);
            break;
          }
          case 50: {
            stageSetupSequence_.AddEntriesFrom(input, _repeated_stageSetupSequence_codec);
            break;
          }
          case 58: {
            stageCompletionSequence_.AddEntriesFrom(input, _repeated_stageCompletionSequence_codec);
            break;
          }
          case 66: {
            idleLoopTimelines_.AddEntriesFrom(input, _repeated_idleLoopTimelines_codec);
            break;
          }
          case 74: {
            stateGraphNodes_.AddEntriesFrom(input, _repeated_stateGraphNodes_codec);
            break;
          }
          case 82: {
            SpellGmtId = input.ReadString();
            break;
          }
          case 90: {
            combatEnemyTraits_.AddEntriesFrom(input, _repeated_combatEnemyTraits_codec);
            break;
          }
          case 98: {
            enemyRankTags_.AddEntriesFrom(input, _repeated_enemyRankTags_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
