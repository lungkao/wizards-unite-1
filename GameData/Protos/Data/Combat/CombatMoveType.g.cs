// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Combat/CombatMoveType.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Combat {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Combat/CombatMoveType.proto</summary>
  public static partial class CombatMoveTypeReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Combat/CombatMoveType.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CombatMoveTypeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilXVVByb3Rvcy9EYXRhL0NvbWJhdC9Db21iYXRNb3ZlVHlwZS5wcm90bxIU",
            "V1VQcm90b3MuRGF0YS5Db21iYXQaLVdVUHJvdG9zL0RhdGEvQ29tYmF0L0Nv",
            "bWJhdFBsYXllckF0dGFjay5wcm90bxotV1VQcm90b3MvRGF0YS9Db21iYXQv",
            "Q29tYmF0UGxheWVyRGVmZW5kLnByb3RvGjJXVVByb3Rvcy9EYXRhL0NvbWJh",
            "dC9Db21iYXRQbGF5ZXJBdXRvQWR2YW5jZS5wcm90byLyAQoOQ29tYmF0TW92",
            "ZVR5cGUSQQoNcGxheWVyX2F0dGFjaxgBIAEoCzIoLldVUHJvdG9zLkRhdGEu",
            "Q29tYmF0LkNvbWJhdFBsYXllckF0dGFja0gAEkEKDXBsYXllcl9kZWZlbmQY",
            "AiABKAsyKC5XVVByb3Rvcy5EYXRhLkNvbWJhdC5Db21iYXRQbGF5ZXJEZWZl",
            "bmRIABJMChNwbGF5ZXJfYXV0b19hZHZhbmNlGAMgASgLMi0uV1VQcm90b3Mu",
            "RGF0YS5Db21iYXQuQ29tYmF0UGxheWVyQXV0b0FkdmFuY2VIAEIMCgpDb21i",
            "YXRNb3ZlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Combat.CombatPlayerAttackReflection.Descriptor, global::WUProtos.Data.Combat.CombatPlayerDefendReflection.Descriptor, global::WUProtos.Data.Combat.CombatPlayerAutoAdvanceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Combat.CombatMoveType), global::WUProtos.Data.Combat.CombatMoveType.Parser, new[]{ "PlayerAttack", "PlayerDefend", "PlayerAutoAdvance" }, new[]{ "CombatMove" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CombatMoveType : pb::IMessage<CombatMoveType> {
    private static readonly pb::MessageParser<CombatMoveType> _parser = new pb::MessageParser<CombatMoveType>(() => new CombatMoveType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CombatMoveType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Combat.CombatMoveTypeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CombatMoveType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CombatMoveType(CombatMoveType other) : this() {
      switch (other.CombatMoveCase) {
        case CombatMoveOneofCase.PlayerAttack:
          PlayerAttack = other.PlayerAttack.Clone();
          break;
        case CombatMoveOneofCase.PlayerDefend:
          PlayerDefend = other.PlayerDefend.Clone();
          break;
        case CombatMoveOneofCase.PlayerAutoAdvance:
          PlayerAutoAdvance = other.PlayerAutoAdvance.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CombatMoveType Clone() {
      return new CombatMoveType(this);
    }

    /// <summary>Field number for the "player_attack" field.</summary>
    public const int PlayerAttackFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Combat.CombatPlayerAttack PlayerAttack {
      get { return combatMoveCase_ == CombatMoveOneofCase.PlayerAttack ? (global::WUProtos.Data.Combat.CombatPlayerAttack) combatMove_ : null; }
      set {
        combatMove_ = value;
        combatMoveCase_ = value == null ? CombatMoveOneofCase.None : CombatMoveOneofCase.PlayerAttack;
      }
    }

    /// <summary>Field number for the "player_defend" field.</summary>
    public const int PlayerDefendFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Combat.CombatPlayerDefend PlayerDefend {
      get { return combatMoveCase_ == CombatMoveOneofCase.PlayerDefend ? (global::WUProtos.Data.Combat.CombatPlayerDefend) combatMove_ : null; }
      set {
        combatMove_ = value;
        combatMoveCase_ = value == null ? CombatMoveOneofCase.None : CombatMoveOneofCase.PlayerDefend;
      }
    }

    /// <summary>Field number for the "player_auto_advance" field.</summary>
    public const int PlayerAutoAdvanceFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Combat.CombatPlayerAutoAdvance PlayerAutoAdvance {
      get { return combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance ? (global::WUProtos.Data.Combat.CombatPlayerAutoAdvance) combatMove_ : null; }
      set {
        combatMove_ = value;
        combatMoveCase_ = value == null ? CombatMoveOneofCase.None : CombatMoveOneofCase.PlayerAutoAdvance;
      }
    }

    private object combatMove_;
    /// <summary>Enum of possible cases for the "CombatMove" oneof.</summary>
    public enum CombatMoveOneofCase {
      None = 0,
      PlayerAttack = 1,
      PlayerDefend = 2,
      PlayerAutoAdvance = 3,
    }
    private CombatMoveOneofCase combatMoveCase_ = CombatMoveOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CombatMoveOneofCase CombatMoveCase {
      get { return combatMoveCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCombatMove() {
      combatMoveCase_ = CombatMoveOneofCase.None;
      combatMove_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CombatMoveType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CombatMoveType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerAttack, other.PlayerAttack)) return false;
      if (!object.Equals(PlayerDefend, other.PlayerDefend)) return false;
      if (!object.Equals(PlayerAutoAdvance, other.PlayerAutoAdvance)) return false;
      if (CombatMoveCase != other.CombatMoveCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) hash ^= PlayerAttack.GetHashCode();
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) hash ^= PlayerDefend.GetHashCode();
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) hash ^= PlayerAutoAdvance.GetHashCode();
      hash ^= (int) combatMoveCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerAttack);
      }
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerDefend);
      }
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerAutoAdvance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAttack);
      }
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerDefend);
      }
      if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAutoAdvance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CombatMoveType other) {
      if (other == null) {
        return;
      }
      switch (other.CombatMoveCase) {
        case CombatMoveOneofCase.PlayerAttack:
          if (PlayerAttack == null) {
            PlayerAttack = new global::WUProtos.Data.Combat.CombatPlayerAttack();
          }
          PlayerAttack.MergeFrom(other.PlayerAttack);
          break;
        case CombatMoveOneofCase.PlayerDefend:
          if (PlayerDefend == null) {
            PlayerDefend = new global::WUProtos.Data.Combat.CombatPlayerDefend();
          }
          PlayerDefend.MergeFrom(other.PlayerDefend);
          break;
        case CombatMoveOneofCase.PlayerAutoAdvance:
          if (PlayerAutoAdvance == null) {
            PlayerAutoAdvance = new global::WUProtos.Data.Combat.CombatPlayerAutoAdvance();
          }
          PlayerAutoAdvance.MergeFrom(other.PlayerAutoAdvance);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.Combat.CombatPlayerAttack subBuilder = new global::WUProtos.Data.Combat.CombatPlayerAttack();
            if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) {
              subBuilder.MergeFrom(PlayerAttack);
            }
            input.ReadMessage(subBuilder);
            PlayerAttack = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.Combat.CombatPlayerDefend subBuilder = new global::WUProtos.Data.Combat.CombatPlayerDefend();
            if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) {
              subBuilder.MergeFrom(PlayerDefend);
            }
            input.ReadMessage(subBuilder);
            PlayerDefend = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Combat.CombatPlayerAutoAdvance subBuilder = new global::WUProtos.Data.Combat.CombatPlayerAutoAdvance();
            if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) {
              subBuilder.MergeFrom(PlayerAutoAdvance);
            }
            input.ReadMessage(subBuilder);
            PlayerAutoAdvance = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
