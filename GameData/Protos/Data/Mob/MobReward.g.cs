// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Mob/MobReward.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Mob {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Mob/MobReward.proto</summary>
  public static partial class MobRewardReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Mob/MobReward.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MobRewardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFXVVByb3Rvcy9EYXRhL01vYi9Nb2JSZXdhcmQucHJvdG8SEVdVUHJvdG9z",
            "LkRhdGEuTW9iGiZXVVByb3Rvcy9EYXRhL01vYi9Nb2JSZXdhcmRGb2N1cy5w",
            "cm90bxolV1VQcm90b3MvRGF0YS9Nb2IvTW9iUmV3YXJkVGltZS5wcm90bxou",
            "V1VQcm90b3MvRGF0YS9Nb2IvTW9iUmV3YXJkVmljdG9yeVBvaW50cy5wcm90",
            "byLAAQoJTW9iUmV3YXJkEjIKBWZvY3VzGAEgASgLMiEuV1VQcm90b3MuRGF0",
            "YS5Nb2IuTW9iUmV3YXJkRm9jdXNIABIwCgR0aW1lGAIgASgLMiAuV1VQcm90",
            "b3MuRGF0YS5Nb2IuTW9iUmV3YXJkVGltZUgAEkMKDnZpY3RvcnlfcG9pbnRz",
            "GAMgASgLMikuV1VQcm90b3MuRGF0YS5Nb2IuTW9iUmV3YXJkVmljdG9yeVBv",
            "aW50c0gAQggKBlJld2FyZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Mob.MobRewardFocusReflection.Descriptor, global::WUProtos.Data.Mob.MobRewardTimeReflection.Descriptor, global::WUProtos.Data.Mob.MobRewardVictoryPointsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Mob.MobReward), global::WUProtos.Data.Mob.MobReward.Parser, new[]{ "Focus", "Time", "VictoryPoints" }, new[]{ "Reward" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MobReward : pb::IMessage<MobReward> {
    private static readonly pb::MessageParser<MobReward> _parser = new pb::MessageParser<MobReward>(() => new MobReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MobReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Mob.MobRewardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobReward(MobReward other) : this() {
      switch (other.RewardCase) {
        case RewardOneofCase.Focus:
          Focus = other.Focus.Clone();
          break;
        case RewardOneofCase.Time:
          Time = other.Time.Clone();
          break;
        case RewardOneofCase.VictoryPoints:
          VictoryPoints = other.VictoryPoints.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobReward Clone() {
      return new MobReward(this);
    }

    /// <summary>Field number for the "focus" field.</summary>
    public const int FocusFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Mob.MobRewardFocus Focus {
      get { return rewardCase_ == RewardOneofCase.Focus ? (global::WUProtos.Data.Mob.MobRewardFocus) reward_ : null; }
      set {
        reward_ = value;
        rewardCase_ = value == null ? RewardOneofCase.None : RewardOneofCase.Focus;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Mob.MobRewardTime Time {
      get { return rewardCase_ == RewardOneofCase.Time ? (global::WUProtos.Data.Mob.MobRewardTime) reward_ : null; }
      set {
        reward_ = value;
        rewardCase_ = value == null ? RewardOneofCase.None : RewardOneofCase.Time;
      }
    }

    /// <summary>Field number for the "victory_points" field.</summary>
    public const int VictoryPointsFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Mob.MobRewardVictoryPoints VictoryPoints {
      get { return rewardCase_ == RewardOneofCase.VictoryPoints ? (global::WUProtos.Data.Mob.MobRewardVictoryPoints) reward_ : null; }
      set {
        reward_ = value;
        rewardCase_ = value == null ? RewardOneofCase.None : RewardOneofCase.VictoryPoints;
      }
    }

    private object reward_;
    /// <summary>Enum of possible cases for the "Reward" oneof.</summary>
    public enum RewardOneofCase {
      None = 0,
      Focus = 1,
      Time = 2,
      VictoryPoints = 3,
    }
    private RewardOneofCase rewardCase_ = RewardOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardOneofCase RewardCase {
      get { return rewardCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReward() {
      rewardCase_ = RewardOneofCase.None;
      reward_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MobReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MobReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Focus, other.Focus)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(VictoryPoints, other.VictoryPoints)) return false;
      if (RewardCase != other.RewardCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rewardCase_ == RewardOneofCase.Focus) hash ^= Focus.GetHashCode();
      if (rewardCase_ == RewardOneofCase.Time) hash ^= Time.GetHashCode();
      if (rewardCase_ == RewardOneofCase.VictoryPoints) hash ^= VictoryPoints.GetHashCode();
      hash ^= (int) rewardCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rewardCase_ == RewardOneofCase.Focus) {
        output.WriteRawTag(10);
        output.WriteMessage(Focus);
      }
      if (rewardCase_ == RewardOneofCase.Time) {
        output.WriteRawTag(18);
        output.WriteMessage(Time);
      }
      if (rewardCase_ == RewardOneofCase.VictoryPoints) {
        output.WriteRawTag(26);
        output.WriteMessage(VictoryPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rewardCase_ == RewardOneofCase.Focus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Focus);
      }
      if (rewardCase_ == RewardOneofCase.Time) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (rewardCase_ == RewardOneofCase.VictoryPoints) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VictoryPoints);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MobReward other) {
      if (other == null) {
        return;
      }
      switch (other.RewardCase) {
        case RewardOneofCase.Focus:
          if (Focus == null) {
            Focus = new global::WUProtos.Data.Mob.MobRewardFocus();
          }
          Focus.MergeFrom(other.Focus);
          break;
        case RewardOneofCase.Time:
          if (Time == null) {
            Time = new global::WUProtos.Data.Mob.MobRewardTime();
          }
          Time.MergeFrom(other.Time);
          break;
        case RewardOneofCase.VictoryPoints:
          if (VictoryPoints == null) {
            VictoryPoints = new global::WUProtos.Data.Mob.MobRewardVictoryPoints();
          }
          VictoryPoints.MergeFrom(other.VictoryPoints);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.Mob.MobRewardFocus subBuilder = new global::WUProtos.Data.Mob.MobRewardFocus();
            if (rewardCase_ == RewardOneofCase.Focus) {
              subBuilder.MergeFrom(Focus);
            }
            input.ReadMessage(subBuilder);
            Focus = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.Mob.MobRewardTime subBuilder = new global::WUProtos.Data.Mob.MobRewardTime();
            if (rewardCase_ == RewardOneofCase.Time) {
              subBuilder.MergeFrom(Time);
            }
            input.ReadMessage(subBuilder);
            Time = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Mob.MobRewardVictoryPoints subBuilder = new global::WUProtos.Data.Mob.MobRewardVictoryPoints();
            if (rewardCase_ == RewardOneofCase.VictoryPoints) {
              subBuilder.MergeFrom(VictoryPoints);
            }
            input.ReadMessage(subBuilder);
            VictoryPoints = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
