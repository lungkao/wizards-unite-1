// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Event/AnalyticsEvent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Event {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Event/AnalyticsEvent.proto</summary>
  public static partial class AnalyticsEventReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Event/AnalyticsEvent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnalyticsEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihXVVByb3Rvcy9EYXRhL0V2ZW50L0FuYWx5dGljc0V2ZW50LnByb3RvEhNX",
            "VVByb3Rvcy5EYXRhLkV2ZW50Ij0KDkFuYWx5dGljc0V2ZW50EhIKCmV2ZW50",
            "X25hbWUYASABKAkSFwoPZXZlbnRfdGltZXN0YW1wGAIgASgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Event.AnalyticsEvent), global::WUProtos.Data.Event.AnalyticsEvent.Parser, new[]{ "EventName", "EventTimestamp" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AnalyticsEvent : pb::IMessage<AnalyticsEvent> {
    private static readonly pb::MessageParser<AnalyticsEvent> _parser = new pb::MessageParser<AnalyticsEvent>(() => new AnalyticsEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnalyticsEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Event.AnalyticsEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyticsEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyticsEvent(AnalyticsEvent other) : this() {
      eventName_ = other.eventName_;
      eventTimestamp_ = other.eventTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyticsEvent Clone() {
      return new AnalyticsEvent(this);
    }

    /// <summary>Field number for the "event_name" field.</summary>
    public const int EventNameFieldNumber = 1;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_timestamp" field.</summary>
    public const int EventTimestampFieldNumber = 2;
    private long eventTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventTimestamp {
      get { return eventTimestamp_; }
      set {
        eventTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnalyticsEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventName != other.EventName) return false;
      if (EventTimestamp != other.EventTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (EventTimestamp != 0L) hash ^= EventTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventName);
      }
      if (EventTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EventTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (EventTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EventTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnalyticsEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.EventTimestamp != 0L) {
        EventTimestamp = other.EventTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventName = input.ReadString();
            break;
          }
          case 16: {
            EventTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
