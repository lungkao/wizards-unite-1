// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/FlooNetworkConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/FlooNetworkConfig.proto</summary>
  public static partial class FlooNetworkConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/FlooNetworkConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FlooNetworkConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVXVVByb3Rvcy9EYXRhL0Zsb29OZXR3b3JrQ29uZmlnLnByb3RvEg1XVVBy",
            "b3Rvcy5EYXRhIooCChFGbG9vTmV0d29ya0NvbmZpZxJlCh9lbGVjdG9yYWxf",
            "dm90ZXNfcGVyX2Zsb29fcG9pbnRzGAEgAygLMjwuV1VQcm90b3MuRGF0YS5G",
            "bG9vTmV0d29ya0NvbmZpZy5FbGVjdG9yYWxWb3Rlc1BlckZsb29Qb2ludHMS",
            "HgoWcG9pbnRzX3Blcl9kZWNheV9jeWNsZRgCIAEoBRIdChVkZWNheV9jeWNs",
            "ZV9sZW5ndGhfbXMYAyABKAMaTwobRWxlY3RvcmFsVm90ZXNQZXJGbG9vUG9p",
            "bnRzEhcKD21pbl9mbG9vX3BvaW50cxgBIAEoAxIXCg9lbGVjdG9yYWxfdm90",
            "ZXMYAiABKANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.FlooNetworkConfig), global::WUProtos.Data.FlooNetworkConfig.Parser, new[]{ "ElectoralVotesPerFlooPoints", "PointsPerDecayCycle", "DecayCycleLengthMs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.FlooNetworkConfig.Types.ElectoralVotesPerFlooPoints), global::WUProtos.Data.FlooNetworkConfig.Types.ElectoralVotesPerFlooPoints.Parser, new[]{ "MinFlooPoints", "ElectoralVotes" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FlooNetworkConfig : pb::IMessage<FlooNetworkConfig> {
    private static readonly pb::MessageParser<FlooNetworkConfig> _parser = new pb::MessageParser<FlooNetworkConfig>(() => new FlooNetworkConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlooNetworkConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.FlooNetworkConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlooNetworkConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlooNetworkConfig(FlooNetworkConfig other) : this() {
      electoralVotesPerFlooPoints_ = other.electoralVotesPerFlooPoints_.Clone();
      pointsPerDecayCycle_ = other.pointsPerDecayCycle_;
      decayCycleLengthMs_ = other.decayCycleLengthMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlooNetworkConfig Clone() {
      return new FlooNetworkConfig(this);
    }

    /// <summary>Field number for the "electoral_votes_per_floo_points" field.</summary>
    public const int ElectoralVotesPerFlooPointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::WUProtos.Data.FlooNetworkConfig.Types.ElectoralVotesPerFlooPoints> _repeated_electoralVotesPerFlooPoints_codec
        = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.FlooNetworkConfig.Types.ElectoralVotesPerFlooPoints.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.FlooNetworkConfig.Types.ElectoralVotesPerFlooPoints> electoralVotesPerFlooPoints_ = new pbc::RepeatedField<global::WUProtos.Data.FlooNetworkConfig.Types.ElectoralVotesPerFlooPoints>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.FlooNetworkConfig.Types.ElectoralVotesPerFlooPoints> ElectoralVotesPerFlooPoints {
      get { return electoralVotesPerFlooPoints_; }
    }

    /// <summary>Field number for the "points_per_decay_cycle" field.</summary>
    public const int PointsPerDecayCycleFieldNumber = 2;
    private int pointsPerDecayCycle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PointsPerDecayCycle {
      get { return pointsPerDecayCycle_; }
      set {
        pointsPerDecayCycle_ = value;
      }
    }

    /// <summary>Field number for the "decay_cycle_length_ms" field.</summary>
    public const int DecayCycleLengthMsFieldNumber = 3;
    private long decayCycleLengthMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DecayCycleLengthMs {
      get { return decayCycleLengthMs_; }
      set {
        decayCycleLengthMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlooNetworkConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlooNetworkConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!electoralVotesPerFlooPoints_.Equals(other.electoralVotesPerFlooPoints_)) return false;
      if (PointsPerDecayCycle != other.PointsPerDecayCycle) return false;
      if (DecayCycleLengthMs != other.DecayCycleLengthMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= electoralVotesPerFlooPoints_.GetHashCode();
      if (PointsPerDecayCycle != 0) hash ^= PointsPerDecayCycle.GetHashCode();
      if (DecayCycleLengthMs != 0L) hash ^= DecayCycleLengthMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      electoralVotesPerFlooPoints_.WriteTo(output, _repeated_electoralVotesPerFlooPoints_codec);
      if (PointsPerDecayCycle != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PointsPerDecayCycle);
      }
      if (DecayCycleLengthMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DecayCycleLengthMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += electoralVotesPerFlooPoints_.CalculateSize(_repeated_electoralVotesPerFlooPoints_codec);
      if (PointsPerDecayCycle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PointsPerDecayCycle);
      }
      if (DecayCycleLengthMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DecayCycleLengthMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlooNetworkConfig other) {
      if (other == null) {
        return;
      }
      electoralVotesPerFlooPoints_.Add(other.electoralVotesPerFlooPoints_);
      if (other.PointsPerDecayCycle != 0) {
        PointsPerDecayCycle = other.PointsPerDecayCycle;
      }
      if (other.DecayCycleLengthMs != 0L) {
        DecayCycleLengthMs = other.DecayCycleLengthMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            electoralVotesPerFlooPoints_.AddEntriesFrom(input, _repeated_electoralVotesPerFlooPoints_codec);
            break;
          }
          case 16: {
            PointsPerDecayCycle = input.ReadInt32();
            break;
          }
          case 24: {
            DecayCycleLengthMs = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FlooNetworkConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ElectoralVotesPerFlooPoints : pb::IMessage<ElectoralVotesPerFlooPoints> {
        private static readonly pb::MessageParser<ElectoralVotesPerFlooPoints> _parser = new pb::MessageParser<ElectoralVotesPerFlooPoints>(() => new ElectoralVotesPerFlooPoints());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ElectoralVotesPerFlooPoints> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.FlooNetworkConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ElectoralVotesPerFlooPoints() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ElectoralVotesPerFlooPoints(ElectoralVotesPerFlooPoints other) : this() {
          minFlooPoints_ = other.minFlooPoints_;
          electoralVotes_ = other.electoralVotes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ElectoralVotesPerFlooPoints Clone() {
          return new ElectoralVotesPerFlooPoints(this);
        }

        /// <summary>Field number for the "min_floo_points" field.</summary>
        public const int MinFlooPointsFieldNumber = 1;
        private long minFlooPoints_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinFlooPoints {
          get { return minFlooPoints_; }
          set {
            minFlooPoints_ = value;
          }
        }

        /// <summary>Field number for the "electoral_votes" field.</summary>
        public const int ElectoralVotesFieldNumber = 2;
        private long electoralVotes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ElectoralVotes {
          get { return electoralVotes_; }
          set {
            electoralVotes_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ElectoralVotesPerFlooPoints);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ElectoralVotesPerFlooPoints other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MinFlooPoints != other.MinFlooPoints) return false;
          if (ElectoralVotes != other.ElectoralVotes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MinFlooPoints != 0L) hash ^= MinFlooPoints.GetHashCode();
          if (ElectoralVotes != 0L) hash ^= ElectoralVotes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MinFlooPoints != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MinFlooPoints);
          }
          if (ElectoralVotes != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ElectoralVotes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MinFlooPoints != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinFlooPoints);
          }
          if (ElectoralVotes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElectoralVotes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ElectoralVotesPerFlooPoints other) {
          if (other == null) {
            return;
          }
          if (other.MinFlooPoints != 0L) {
            MinFlooPoints = other.MinFlooPoints;
          }
          if (other.ElectoralVotes != 0L) {
            ElectoralVotes = other.ElectoralVotes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MinFlooPoints = input.ReadInt64();
                break;
              }
              case 16: {
                ElectoralVotes = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
