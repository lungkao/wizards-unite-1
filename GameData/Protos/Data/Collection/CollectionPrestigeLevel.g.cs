// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Collection/CollectionPrestigeLevel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Collection {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Collection/CollectionPrestigeLevel.proto</summary>
  public static partial class CollectionPrestigeLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Collection/CollectionPrestigeLevel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CollectionPrestigeLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZXVVByb3Rvcy9EYXRhL0NvbGxlY3Rpb24vQ29sbGVjdGlvblByZXN0aWdl",
            "TGV2ZWwucHJvdG8SGFdVUHJvdG9zLkRhdGEuQ29sbGVjdGlvbhoZV1VQcm90",
            "b3MvRGF0YS9Db2xvci5wcm90byLGAQoXQ29sbGVjdGlvblByZXN0aWdlTGV2",
            "ZWwSFAoMYm9yZGVyX2ltYWdlGAEgASgJEgwKBG5hbWUYAiABKAkSIwoFY29s",
            "b3IYAyABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEhMKC2lzX21ldGFsbGlj",
            "GAQgASgIEhIKCmZyYW1lX21lc2gYBSABKAkSEgoKbm9ybWFsX21hcBgGIAEo",
            "CRISCgphbGJlZG9fbWFwGAcgASgJEhEKCXJvdWdobmVzcxgIIAEoAmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Collection.CollectionPrestigeLevel), global::WUProtos.Data.Collection.CollectionPrestigeLevel.Parser, new[]{ "BorderImage", "Name", "Color", "IsMetallic", "FrameMesh", "NormalMap", "AlbedoMap", "Roughness" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CollectionPrestigeLevel : pb::IMessage<CollectionPrestigeLevel> {
    private static readonly pb::MessageParser<CollectionPrestigeLevel> _parser = new pb::MessageParser<CollectionPrestigeLevel>(() => new CollectionPrestigeLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionPrestigeLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Collection.CollectionPrestigeLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPrestigeLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPrestigeLevel(CollectionPrestigeLevel other) : this() {
      borderImage_ = other.borderImage_;
      name_ = other.name_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      isMetallic_ = other.isMetallic_;
      frameMesh_ = other.frameMesh_;
      normalMap_ = other.normalMap_;
      albedoMap_ = other.albedoMap_;
      roughness_ = other.roughness_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPrestigeLevel Clone() {
      return new CollectionPrestigeLevel(this);
    }

    /// <summary>Field number for the "border_image" field.</summary>
    public const int BorderImageFieldNumber = 1;
    private string borderImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BorderImage {
      get { return borderImage_; }
      set {
        borderImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private global::WUProtos.Data.Color color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "is_metallic" field.</summary>
    public const int IsMetallicFieldNumber = 4;
    private bool isMetallic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMetallic {
      get { return isMetallic_; }
      set {
        isMetallic_ = value;
      }
    }

    /// <summary>Field number for the "frame_mesh" field.</summary>
    public const int FrameMeshFieldNumber = 5;
    private string frameMesh_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FrameMesh {
      get { return frameMesh_; }
      set {
        frameMesh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "normal_map" field.</summary>
    public const int NormalMapFieldNumber = 6;
    private string normalMap_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NormalMap {
      get { return normalMap_; }
      set {
        normalMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "albedo_map" field.</summary>
    public const int AlbedoMapFieldNumber = 7;
    private string albedoMap_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlbedoMap {
      get { return albedoMap_; }
      set {
        albedoMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roughness" field.</summary>
    public const int RoughnessFieldNumber = 8;
    private float roughness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Roughness {
      get { return roughness_; }
      set {
        roughness_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionPrestigeLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionPrestigeLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BorderImage != other.BorderImage) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (IsMetallic != other.IsMetallic) return false;
      if (FrameMesh != other.FrameMesh) return false;
      if (NormalMap != other.NormalMap) return false;
      if (AlbedoMap != other.AlbedoMap) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Roughness, other.Roughness)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BorderImage.Length != 0) hash ^= BorderImage.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (IsMetallic != false) hash ^= IsMetallic.GetHashCode();
      if (FrameMesh.Length != 0) hash ^= FrameMesh.GetHashCode();
      if (NormalMap.Length != 0) hash ^= NormalMap.GetHashCode();
      if (AlbedoMap.Length != 0) hash ^= AlbedoMap.GetHashCode();
      if (Roughness != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Roughness);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BorderImage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BorderImage);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (color_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Color);
      }
      if (IsMetallic != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsMetallic);
      }
      if (FrameMesh.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FrameMesh);
      }
      if (NormalMap.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NormalMap);
      }
      if (AlbedoMap.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AlbedoMap);
      }
      if (Roughness != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Roughness);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BorderImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BorderImage);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (IsMetallic != false) {
        size += 1 + 1;
      }
      if (FrameMesh.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameMesh);
      }
      if (NormalMap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NormalMap);
      }
      if (AlbedoMap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbedoMap);
      }
      if (Roughness != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionPrestigeLevel other) {
      if (other == null) {
        return;
      }
      if (other.BorderImage.Length != 0) {
        BorderImage = other.BorderImage;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::WUProtos.Data.Color();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.IsMetallic != false) {
        IsMetallic = other.IsMetallic;
      }
      if (other.FrameMesh.Length != 0) {
        FrameMesh = other.FrameMesh;
      }
      if (other.NormalMap.Length != 0) {
        NormalMap = other.NormalMap;
      }
      if (other.AlbedoMap.Length != 0) {
        AlbedoMap = other.AlbedoMap;
      }
      if (other.Roughness != 0F) {
        Roughness = other.Roughness;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BorderImage = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (color_ == null) {
              Color = new global::WUProtos.Data.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 32: {
            IsMetallic = input.ReadBool();
            break;
          }
          case 42: {
            FrameMesh = input.ReadString();
            break;
          }
          case 50: {
            NormalMap = input.ReadString();
            break;
          }
          case 58: {
            AlbedoMap = input.ReadString();
            break;
          }
          case 69: {
            Roughness = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
