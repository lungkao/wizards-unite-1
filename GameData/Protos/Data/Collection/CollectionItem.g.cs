// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Collection/CollectionItem.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Collection {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Collection/CollectionItem.proto</summary>
  public static partial class CollectionItemReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Collection/CollectionItem.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CollectionItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1XVVByb3Rvcy9EYXRhL0NvbGxlY3Rpb24vQ29sbGVjdGlvbkl0ZW0ucHJv",
            "dG8SGFdVUHJvdG9zLkRhdGEuQ29sbGVjdGlvbhonV1VQcm90b3MvRGF0YS9M",
            "b290L0xvb3RDb2xsZWN0aW9uLnByb3RvGiBXVVByb3Rvcy9EYXRhL1JlcXVp",
            "cmVtZW50cy5wcm90byKNAgoOQ29sbGVjdGlvbkl0ZW0SCgoCaWQYASABKAkS",
            "EQoJZmFtaWx5X2lkGAIgASgJEhMKC3NoYXJkX2NvdW50GAMgASgFEg4KBnJh",
            "cml0eRgEIAEoBRI8ChBvbmVfdGltZV9yZXdhcmRzGAUgASgLMiIuV1VQcm90",
            "b3MuRGF0YS5Mb290Lkxvb3RDb2xsZWN0aW9uEg8KB3BhZ2VfaWQYBiABKAkS",
            "OAoTdW5sb2NrX3JlcXVpcmVtZW50cxgHIAEoCzIbLldVUHJvdG9zLkRhdGEu",
            "UmVxdWlyZW1lbnRzEhQKDHNoYXJkX2NvdW50cxgIIAMoBRIYChBzdGlja2Vy",
            "X2Rpc2FibGVkGAogASgIYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Loot.LootCollectionReflection.Descriptor, global::WUProtos.Data.RequirementsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Collection.CollectionItem), global::WUProtos.Data.Collection.CollectionItem.Parser, new[]{ "Id", "FamilyId", "ShardCount", "Rarity", "OneTimeRewards", "PageId", "UnlockRequirements", "ShardCounts", "StickerDisabled" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CollectionItem : pb::IMessage<CollectionItem> {
    private static readonly pb::MessageParser<CollectionItem> _parser = new pb::MessageParser<CollectionItem>(() => new CollectionItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Collection.CollectionItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionItem(CollectionItem other) : this() {
      id_ = other.id_;
      familyId_ = other.familyId_;
      shardCount_ = other.shardCount_;
      rarity_ = other.rarity_;
      oneTimeRewards_ = other.oneTimeRewards_ != null ? other.oneTimeRewards_.Clone() : null;
      pageId_ = other.pageId_;
      unlockRequirements_ = other.unlockRequirements_ != null ? other.unlockRequirements_.Clone() : null;
      shardCounts_ = other.shardCounts_.Clone();
      stickerDisabled_ = other.stickerDisabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionItem Clone() {
      return new CollectionItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_id" field.</summary>
    public const int FamilyIdFieldNumber = 2;
    private string familyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FamilyId {
      get { return familyId_; }
      set {
        familyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shard_count" field.</summary>
    public const int ShardCountFieldNumber = 3;
    private int shardCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShardCount {
      get { return shardCount_; }
      set {
        shardCount_ = value;
      }
    }

    /// <summary>Field number for the "rarity" field.</summary>
    public const int RarityFieldNumber = 4;
    private int rarity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rarity {
      get { return rarity_; }
      set {
        rarity_ = value;
      }
    }

    /// <summary>Field number for the "one_time_rewards" field.</summary>
    public const int OneTimeRewardsFieldNumber = 5;
    private global::WUProtos.Data.Loot.LootCollection oneTimeRewards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Loot.LootCollection OneTimeRewards {
      get { return oneTimeRewards_; }
      set {
        oneTimeRewards_ = value;
      }
    }

    /// <summary>Field number for the "page_id" field.</summary>
    public const int PageIdFieldNumber = 6;
    private string pageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageId {
      get { return pageId_; }
      set {
        pageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unlock_requirements" field.</summary>
    public const int UnlockRequirementsFieldNumber = 7;
    private global::WUProtos.Data.Requirements unlockRequirements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Requirements UnlockRequirements {
      get { return unlockRequirements_; }
      set {
        unlockRequirements_ = value;
      }
    }

    /// <summary>Field number for the "shard_counts" field.</summary>
    public const int ShardCountsFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_shardCounts_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> shardCounts_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ShardCounts {
      get { return shardCounts_; }
    }

    /// <summary>Field number for the "sticker_disabled" field.</summary>
    public const int StickerDisabledFieldNumber = 10;
    private bool stickerDisabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StickerDisabled {
      get { return stickerDisabled_; }
      set {
        stickerDisabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FamilyId != other.FamilyId) return false;
      if (ShardCount != other.ShardCount) return false;
      if (Rarity != other.Rarity) return false;
      if (!object.Equals(OneTimeRewards, other.OneTimeRewards)) return false;
      if (PageId != other.PageId) return false;
      if (!object.Equals(UnlockRequirements, other.UnlockRequirements)) return false;
      if(!shardCounts_.Equals(other.shardCounts_)) return false;
      if (StickerDisabled != other.StickerDisabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FamilyId.Length != 0) hash ^= FamilyId.GetHashCode();
      if (ShardCount != 0) hash ^= ShardCount.GetHashCode();
      if (Rarity != 0) hash ^= Rarity.GetHashCode();
      if (oneTimeRewards_ != null) hash ^= OneTimeRewards.GetHashCode();
      if (PageId.Length != 0) hash ^= PageId.GetHashCode();
      if (unlockRequirements_ != null) hash ^= UnlockRequirements.GetHashCode();
      hash ^= shardCounts_.GetHashCode();
      if (StickerDisabled != false) hash ^= StickerDisabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FamilyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FamilyId);
      }
      if (ShardCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ShardCount);
      }
      if (Rarity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rarity);
      }
      if (oneTimeRewards_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OneTimeRewards);
      }
      if (PageId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PageId);
      }
      if (unlockRequirements_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UnlockRequirements);
      }
      shardCounts_.WriteTo(output, _repeated_shardCounts_codec);
      if (StickerDisabled != false) {
        output.WriteRawTag(80);
        output.WriteBool(StickerDisabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FamilyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyId);
      }
      if (ShardCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShardCount);
      }
      if (Rarity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rarity);
      }
      if (oneTimeRewards_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OneTimeRewards);
      }
      if (PageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageId);
      }
      if (unlockRequirements_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockRequirements);
      }
      size += shardCounts_.CalculateSize(_repeated_shardCounts_codec);
      if (StickerDisabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionItem other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FamilyId.Length != 0) {
        FamilyId = other.FamilyId;
      }
      if (other.ShardCount != 0) {
        ShardCount = other.ShardCount;
      }
      if (other.Rarity != 0) {
        Rarity = other.Rarity;
      }
      if (other.oneTimeRewards_ != null) {
        if (oneTimeRewards_ == null) {
          OneTimeRewards = new global::WUProtos.Data.Loot.LootCollection();
        }
        OneTimeRewards.MergeFrom(other.OneTimeRewards);
      }
      if (other.PageId.Length != 0) {
        PageId = other.PageId;
      }
      if (other.unlockRequirements_ != null) {
        if (unlockRequirements_ == null) {
          UnlockRequirements = new global::WUProtos.Data.Requirements();
        }
        UnlockRequirements.MergeFrom(other.UnlockRequirements);
      }
      shardCounts_.Add(other.shardCounts_);
      if (other.StickerDisabled != false) {
        StickerDisabled = other.StickerDisabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FamilyId = input.ReadString();
            break;
          }
          case 24: {
            ShardCount = input.ReadInt32();
            break;
          }
          case 32: {
            Rarity = input.ReadInt32();
            break;
          }
          case 42: {
            if (oneTimeRewards_ == null) {
              OneTimeRewards = new global::WUProtos.Data.Loot.LootCollection();
            }
            input.ReadMessage(OneTimeRewards);
            break;
          }
          case 50: {
            PageId = input.ReadString();
            break;
          }
          case 58: {
            if (unlockRequirements_ == null) {
              UnlockRequirements = new global::WUProtos.Data.Requirements();
            }
            input.ReadMessage(UnlockRequirements);
            break;
          }
          case 66:
          case 64: {
            shardCounts_.AddEntriesFrom(input, _repeated_shardCounts_codec);
            break;
          }
          case 80: {
            StickerDisabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
