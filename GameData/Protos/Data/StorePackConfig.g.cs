// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/StorePackConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/StorePackConfig.proto</summary>
  public static partial class StorePackConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/StorePackConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StorePackConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNXVVByb3Rvcy9EYXRhL1N0b3JlUGFja0NvbmZpZy5wcm90bxINV1VQcm90",
            "b3MuRGF0YRooV1VQcm90b3MvRW51bXMvU3RvcmVQYWNrQ29uZmlnU2l6ZS5w",
            "cm90byLVAwoPU3RvcmVQYWNrQ29uZmlnEhAKCHByaW9yaXR5GAEgASgFEhYK",
            "DnN1YmNhdGVnb3J5X2lkGAIgASgJEhEKCWljb25fcGF0aBgDIAEoCRIcChRz",
            "aG93X3F1YW50aXR5X2Jhbm5lchgEIAEoCBIZChFxdWFudGl0eV9vdmVycmlk",
            "ZRgFIAEoCRITCgtwcmVmYWJfcGF0aBgGIAEoCRIWCg5tYXJrZXRpbmdfdGV4",
            "dBgHIAEoCRIYChBkZXNjcmlwdGlvbl90ZXh0GAggASgJEhIKCnNob3dfYmFk",
            "Z2UYCSABKAgSEwoLYm9udXNfdmFsdWUYCiABKAUSEQoJcmFyaXR5X2lkGAsg",
            "ASgJEjYKCXBhY2tfc2l6ZRgMIAEoDjIjLldVUHJvdG9zLkVudW1zLlN0b3Jl",
            "UGFja0NvbmZpZ1NpemUSEwoLc2hvd19pbl9odWQYDSABKAgSFAoMaHVkX3By",
            "aW9yaXR5GA4gASgFEhUKDWh1ZF9pY29uX3BhdGgYDyABKAkSEgoKaWNvbjJf",
            "cGF0aBgQIAEoCRIcChRwb3B1cF9pbWFnZV9vdmVycmlkZRgRIAEoCRIdChVo",
            "aWRlX3BhY2tfb25fc29sZF9vdXQYEiABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Enums.StorePackConfigSizeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.StorePackConfig), global::WUProtos.Data.StorePackConfig.Parser, new[]{ "Priority", "SubcategoryId", "IconPath", "ShowQuantityBanner", "QuantityOverride", "PrefabPath", "MarketingText", "DescriptionText", "ShowBadge", "BonusValue", "RarityId", "PackSize", "ShowInHud", "HudPriority", "HudIconPath", "Icon2Path", "PopupImageOverride", "HidePackOnSoldOut" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StorePackConfig : pb::IMessage<StorePackConfig> {
    private static readonly pb::MessageParser<StorePackConfig> _parser = new pb::MessageParser<StorePackConfig>(() => new StorePackConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorePackConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.StorePackConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorePackConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorePackConfig(StorePackConfig other) : this() {
      priority_ = other.priority_;
      subcategoryId_ = other.subcategoryId_;
      iconPath_ = other.iconPath_;
      showQuantityBanner_ = other.showQuantityBanner_;
      quantityOverride_ = other.quantityOverride_;
      prefabPath_ = other.prefabPath_;
      marketingText_ = other.marketingText_;
      descriptionText_ = other.descriptionText_;
      showBadge_ = other.showBadge_;
      bonusValue_ = other.bonusValue_;
      rarityId_ = other.rarityId_;
      packSize_ = other.packSize_;
      showInHud_ = other.showInHud_;
      hudPriority_ = other.hudPriority_;
      hudIconPath_ = other.hudIconPath_;
      icon2Path_ = other.icon2Path_;
      popupImageOverride_ = other.popupImageOverride_;
      hidePackOnSoldOut_ = other.hidePackOnSoldOut_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorePackConfig Clone() {
      return new StorePackConfig(this);
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 1;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "subcategory_id" field.</summary>
    public const int SubcategoryIdFieldNumber = 2;
    private string subcategoryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubcategoryId {
      get { return subcategoryId_; }
      set {
        subcategoryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_path" field.</summary>
    public const int IconPathFieldNumber = 3;
    private string iconPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconPath {
      get { return iconPath_; }
      set {
        iconPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "show_quantity_banner" field.</summary>
    public const int ShowQuantityBannerFieldNumber = 4;
    private bool showQuantityBanner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowQuantityBanner {
      get { return showQuantityBanner_; }
      set {
        showQuantityBanner_ = value;
      }
    }

    /// <summary>Field number for the "quantity_override" field.</summary>
    public const int QuantityOverrideFieldNumber = 5;
    private string quantityOverride_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuantityOverride {
      get { return quantityOverride_; }
      set {
        quantityOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prefab_path" field.</summary>
    public const int PrefabPathFieldNumber = 6;
    private string prefabPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrefabPath {
      get { return prefabPath_; }
      set {
        prefabPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "marketing_text" field.</summary>
    public const int MarketingTextFieldNumber = 7;
    private string marketingText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketingText {
      get { return marketingText_; }
      set {
        marketingText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_text" field.</summary>
    public const int DescriptionTextFieldNumber = 8;
    private string descriptionText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionText {
      get { return descriptionText_; }
      set {
        descriptionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "show_badge" field.</summary>
    public const int ShowBadgeFieldNumber = 9;
    private bool showBadge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowBadge {
      get { return showBadge_; }
      set {
        showBadge_ = value;
      }
    }

    /// <summary>Field number for the "bonus_value" field.</summary>
    public const int BonusValueFieldNumber = 10;
    private int bonusValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BonusValue {
      get { return bonusValue_; }
      set {
        bonusValue_ = value;
      }
    }

    /// <summary>Field number for the "rarity_id" field.</summary>
    public const int RarityIdFieldNumber = 11;
    private string rarityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RarityId {
      get { return rarityId_; }
      set {
        rarityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pack_size" field.</summary>
    public const int PackSizeFieldNumber = 12;
    private global::WUProtos.Enums.StorePackConfigSize packSize_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.StorePackConfigSize PackSize {
      get { return packSize_; }
      set {
        packSize_ = value;
      }
    }

    /// <summary>Field number for the "show_in_hud" field.</summary>
    public const int ShowInHudFieldNumber = 13;
    private bool showInHud_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowInHud {
      get { return showInHud_; }
      set {
        showInHud_ = value;
      }
    }

    /// <summary>Field number for the "hud_priority" field.</summary>
    public const int HudPriorityFieldNumber = 14;
    private int hudPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HudPriority {
      get { return hudPriority_; }
      set {
        hudPriority_ = value;
      }
    }

    /// <summary>Field number for the "hud_icon_path" field.</summary>
    public const int HudIconPathFieldNumber = 15;
    private string hudIconPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HudIconPath {
      get { return hudIconPath_; }
      set {
        hudIconPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon2_path" field.</summary>
    public const int Icon2PathFieldNumber = 16;
    private string icon2Path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon2Path {
      get { return icon2Path_; }
      set {
        icon2Path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "popup_image_override" field.</summary>
    public const int PopupImageOverrideFieldNumber = 17;
    private string popupImageOverride_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PopupImageOverride {
      get { return popupImageOverride_; }
      set {
        popupImageOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hide_pack_on_sold_out" field.</summary>
    public const int HidePackOnSoldOutFieldNumber = 18;
    private bool hidePackOnSoldOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HidePackOnSoldOut {
      get { return hidePackOnSoldOut_; }
      set {
        hidePackOnSoldOut_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorePackConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorePackConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Priority != other.Priority) return false;
      if (SubcategoryId != other.SubcategoryId) return false;
      if (IconPath != other.IconPath) return false;
      if (ShowQuantityBanner != other.ShowQuantityBanner) return false;
      if (QuantityOverride != other.QuantityOverride) return false;
      if (PrefabPath != other.PrefabPath) return false;
      if (MarketingText != other.MarketingText) return false;
      if (DescriptionText != other.DescriptionText) return false;
      if (ShowBadge != other.ShowBadge) return false;
      if (BonusValue != other.BonusValue) return false;
      if (RarityId != other.RarityId) return false;
      if (PackSize != other.PackSize) return false;
      if (ShowInHud != other.ShowInHud) return false;
      if (HudPriority != other.HudPriority) return false;
      if (HudIconPath != other.HudIconPath) return false;
      if (Icon2Path != other.Icon2Path) return false;
      if (PopupImageOverride != other.PopupImageOverride) return false;
      if (HidePackOnSoldOut != other.HidePackOnSoldOut) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (SubcategoryId.Length != 0) hash ^= SubcategoryId.GetHashCode();
      if (IconPath.Length != 0) hash ^= IconPath.GetHashCode();
      if (ShowQuantityBanner != false) hash ^= ShowQuantityBanner.GetHashCode();
      if (QuantityOverride.Length != 0) hash ^= QuantityOverride.GetHashCode();
      if (PrefabPath.Length != 0) hash ^= PrefabPath.GetHashCode();
      if (MarketingText.Length != 0) hash ^= MarketingText.GetHashCode();
      if (DescriptionText.Length != 0) hash ^= DescriptionText.GetHashCode();
      if (ShowBadge != false) hash ^= ShowBadge.GetHashCode();
      if (BonusValue != 0) hash ^= BonusValue.GetHashCode();
      if (RarityId.Length != 0) hash ^= RarityId.GetHashCode();
      if (PackSize != 0) hash ^= PackSize.GetHashCode();
      if (ShowInHud != false) hash ^= ShowInHud.GetHashCode();
      if (HudPriority != 0) hash ^= HudPriority.GetHashCode();
      if (HudIconPath.Length != 0) hash ^= HudIconPath.GetHashCode();
      if (Icon2Path.Length != 0) hash ^= Icon2Path.GetHashCode();
      if (PopupImageOverride.Length != 0) hash ^= PopupImageOverride.GetHashCode();
      if (HidePackOnSoldOut != false) hash ^= HidePackOnSoldOut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Priority != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Priority);
      }
      if (SubcategoryId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubcategoryId);
      }
      if (IconPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconPath);
      }
      if (ShowQuantityBanner != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShowQuantityBanner);
      }
      if (QuantityOverride.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(QuantityOverride);
      }
      if (PrefabPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PrefabPath);
      }
      if (MarketingText.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MarketingText);
      }
      if (DescriptionText.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DescriptionText);
      }
      if (ShowBadge != false) {
        output.WriteRawTag(72);
        output.WriteBool(ShowBadge);
      }
      if (BonusValue != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BonusValue);
      }
      if (RarityId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RarityId);
      }
      if (PackSize != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) PackSize);
      }
      if (ShowInHud != false) {
        output.WriteRawTag(104);
        output.WriteBool(ShowInHud);
      }
      if (HudPriority != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(HudPriority);
      }
      if (HudIconPath.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(HudIconPath);
      }
      if (Icon2Path.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Icon2Path);
      }
      if (PopupImageOverride.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(PopupImageOverride);
      }
      if (HidePackOnSoldOut != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(HidePackOnSoldOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (SubcategoryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubcategoryId);
      }
      if (IconPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconPath);
      }
      if (ShowQuantityBanner != false) {
        size += 1 + 1;
      }
      if (QuantityOverride.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuantityOverride);
      }
      if (PrefabPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrefabPath);
      }
      if (MarketingText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketingText);
      }
      if (DescriptionText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionText);
      }
      if (ShowBadge != false) {
        size += 1 + 1;
      }
      if (BonusValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BonusValue);
      }
      if (RarityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RarityId);
      }
      if (PackSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PackSize);
      }
      if (ShowInHud != false) {
        size += 1 + 1;
      }
      if (HudPriority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HudPriority);
      }
      if (HudIconPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HudIconPath);
      }
      if (Icon2Path.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Icon2Path);
      }
      if (PopupImageOverride.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PopupImageOverride);
      }
      if (HidePackOnSoldOut != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorePackConfig other) {
      if (other == null) {
        return;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.SubcategoryId.Length != 0) {
        SubcategoryId = other.SubcategoryId;
      }
      if (other.IconPath.Length != 0) {
        IconPath = other.IconPath;
      }
      if (other.ShowQuantityBanner != false) {
        ShowQuantityBanner = other.ShowQuantityBanner;
      }
      if (other.QuantityOverride.Length != 0) {
        QuantityOverride = other.QuantityOverride;
      }
      if (other.PrefabPath.Length != 0) {
        PrefabPath = other.PrefabPath;
      }
      if (other.MarketingText.Length != 0) {
        MarketingText = other.MarketingText;
      }
      if (other.DescriptionText.Length != 0) {
        DescriptionText = other.DescriptionText;
      }
      if (other.ShowBadge != false) {
        ShowBadge = other.ShowBadge;
      }
      if (other.BonusValue != 0) {
        BonusValue = other.BonusValue;
      }
      if (other.RarityId.Length != 0) {
        RarityId = other.RarityId;
      }
      if (other.PackSize != 0) {
        PackSize = other.PackSize;
      }
      if (other.ShowInHud != false) {
        ShowInHud = other.ShowInHud;
      }
      if (other.HudPriority != 0) {
        HudPriority = other.HudPriority;
      }
      if (other.HudIconPath.Length != 0) {
        HudIconPath = other.HudIconPath;
      }
      if (other.Icon2Path.Length != 0) {
        Icon2Path = other.Icon2Path;
      }
      if (other.PopupImageOverride.Length != 0) {
        PopupImageOverride = other.PopupImageOverride;
      }
      if (other.HidePackOnSoldOut != false) {
        HidePackOnSoldOut = other.HidePackOnSoldOut;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Priority = input.ReadInt32();
            break;
          }
          case 18: {
            SubcategoryId = input.ReadString();
            break;
          }
          case 26: {
            IconPath = input.ReadString();
            break;
          }
          case 32: {
            ShowQuantityBanner = input.ReadBool();
            break;
          }
          case 42: {
            QuantityOverride = input.ReadString();
            break;
          }
          case 50: {
            PrefabPath = input.ReadString();
            break;
          }
          case 58: {
            MarketingText = input.ReadString();
            break;
          }
          case 66: {
            DescriptionText = input.ReadString();
            break;
          }
          case 72: {
            ShowBadge = input.ReadBool();
            break;
          }
          case 80: {
            BonusValue = input.ReadInt32();
            break;
          }
          case 90: {
            RarityId = input.ReadString();
            break;
          }
          case 96: {
            PackSize = (global::WUProtos.Enums.StorePackConfigSize) input.ReadEnum();
            break;
          }
          case 104: {
            ShowInHud = input.ReadBool();
            break;
          }
          case 112: {
            HudPriority = input.ReadInt32();
            break;
          }
          case 122: {
            HudIconPath = input.ReadString();
            break;
          }
          case 130: {
            Icon2Path = input.ReadString();
            break;
          }
          case 138: {
            PopupImageOverride = input.ReadString();
            break;
          }
          case 144: {
            HidePackOnSoldOut = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
