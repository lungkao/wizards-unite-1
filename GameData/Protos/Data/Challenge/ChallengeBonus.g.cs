// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Challenge/ChallengeBonus.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Challenge {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Challenge/ChallengeBonus.proto</summary>
  public static partial class ChallengeBonusReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Challenge/ChallengeBonus.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChallengeBonusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixXVVByb3Rvcy9EYXRhL0NoYWxsZW5nZS9DaGFsbGVuZ2VCb251cy5wcm90",
            "bxIXV1VQcm90b3MuRGF0YS5DaGFsbGVuZ2UaIldVUHJvdG9zL0VudW1zL0Jv",
            "bnVzUmVjZWl2ZXIucHJvdG8aJldVUHJvdG9zL0VudW1zL0JvbnVzVGFyZ2V0",
            "UmV3YXJkLnByb3RvGjRXVVByb3Rvcy9EYXRhL1BsYXllci9QbGF5ZXJDb3Vu",
            "dENoYWxsZW5nZUJvbnVzLnByb3RvGjBXVVByb3Rvcy9EYXRhL0Zhc3RDb21w",
            "bGV0aW9uQ2hhbGxlbmdlQm9udXMucHJvdG8aK1dVUHJvdG9zL0RhdGEvUnVu",
            "ZUxldmVsQ2hhbGxlbmdlQm9udXMucHJvdG8aMldVUHJvdG9zL0RhdGEvRGVm",
            "ZWF0ZWRNb2JDb3VudENoYWxsZW5nZUJvbnVzLnByb3RvGjRXVVByb3Rvcy9E",
            "YXRhL1BsYXllci9QbGF5ZXJSYXRpb0NoYWxsZW5nZUJvbnVzLnByb3RvIosE",
            "Cg5DaGFsbGVuZ2VCb251cxIKCgJpZBgBIAEoCRIvCghyZWNlaXZlchgCIAEo",
            "DjIdLldVUHJvdG9zLkVudW1zLkJvbnVzUmVjZWl2ZXISOAoNdGFyZ2V0X3Jl",
            "d2FyZBgDIAEoDjIhLldVUHJvdG9zLkVudW1zLkJvbnVzVGFyZ2V0UmV3YXJk",
            "EhAKCG1vZGlmaWVyGAQgASgCEkcKDHBsYXllcl9jb3VudBgUIAEoCzIvLldV",
            "UHJvdG9zLkRhdGEuUGxheWVyLlBsYXllckNvdW50Q2hhbGxlbmdlQm9udXNI",
            "ABJGCg9mYXN0X2NvbXBsZXRpb24YFSABKAsyKy5XVVByb3Rvcy5EYXRhLkZh",
            "c3RDb21wbGV0aW9uQ2hhbGxlbmdlQm9udXNIABI8CgpydW5lX2xldmVsGBYg",
            "ASgLMiYuV1VQcm90b3MuRGF0YS5SdW5lTGV2ZWxDaGFsbGVuZ2VCb251c0gA",
            "EksKEmRlZmVhdGVkX21vYl9jb3VudBgXIAEoCzItLldVUHJvdG9zLkRhdGEu",
            "RGVmZWF0ZWRNb2JDb3VudENoYWxsZW5nZUJvbnVzSAASRwoMcGxheWVyX3Jh",
            "dGlvGBggASgLMi8uV1VQcm90b3MuRGF0YS5QbGF5ZXIuUGxheWVyUmF0aW9D",
            "aGFsbGVuZ2VCb251c0gAQgsKCUJvbnVzS2luZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Enums.BonusReceiverReflection.Descriptor, global::WUProtos.Enums.BonusTargetRewardReflection.Descriptor, global::WUProtos.Data.Player.PlayerCountChallengeBonusReflection.Descriptor, global::WUProtos.Data.FastCompletionChallengeBonusReflection.Descriptor, global::WUProtos.Data.RuneLevelChallengeBonusReflection.Descriptor, global::WUProtos.Data.DefeatedMobCountChallengeBonusReflection.Descriptor, global::WUProtos.Data.Player.PlayerRatioChallengeBonusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Challenge.ChallengeBonus), global::WUProtos.Data.Challenge.ChallengeBonus.Parser, new[]{ "Id", "Receiver", "TargetReward", "Modifier", "PlayerCount", "FastCompletion", "RuneLevel", "DefeatedMobCount", "PlayerRatio" }, new[]{ "BonusKind" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ChallengeBonus : pb::IMessage<ChallengeBonus> {
    private static readonly pb::MessageParser<ChallengeBonus> _parser = new pb::MessageParser<ChallengeBonus>(() => new ChallengeBonus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChallengeBonus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Challenge.ChallengeBonusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeBonus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeBonus(ChallengeBonus other) : this() {
      id_ = other.id_;
      receiver_ = other.receiver_;
      targetReward_ = other.targetReward_;
      modifier_ = other.modifier_;
      switch (other.BonusKindCase) {
        case BonusKindOneofCase.PlayerCount:
          PlayerCount = other.PlayerCount.Clone();
          break;
        case BonusKindOneofCase.FastCompletion:
          FastCompletion = other.FastCompletion.Clone();
          break;
        case BonusKindOneofCase.RuneLevel:
          RuneLevel = other.RuneLevel.Clone();
          break;
        case BonusKindOneofCase.DefeatedMobCount:
          DefeatedMobCount = other.DefeatedMobCount.Clone();
          break;
        case BonusKindOneofCase.PlayerRatio:
          PlayerRatio = other.PlayerRatio.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeBonus Clone() {
      return new ChallengeBonus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiver" field.</summary>
    public const int ReceiverFieldNumber = 2;
    private global::WUProtos.Enums.BonusReceiver receiver_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.BonusReceiver Receiver {
      get { return receiver_; }
      set {
        receiver_ = value;
      }
    }

    /// <summary>Field number for the "target_reward" field.</summary>
    public const int TargetRewardFieldNumber = 3;
    private global::WUProtos.Enums.BonusTargetReward targetReward_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.BonusTargetReward TargetReward {
      get { return targetReward_; }
      set {
        targetReward_ = value;
      }
    }

    /// <summary>Field number for the "modifier" field.</summary>
    public const int ModifierFieldNumber = 4;
    private float modifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Modifier {
      get { return modifier_; }
      set {
        modifier_ = value;
      }
    }

    /// <summary>Field number for the "player_count" field.</summary>
    public const int PlayerCountFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Player.PlayerCountChallengeBonus PlayerCount {
      get { return bonusKindCase_ == BonusKindOneofCase.PlayerCount ? (global::WUProtos.Data.Player.PlayerCountChallengeBonus) bonusKind_ : null; }
      set {
        bonusKind_ = value;
        bonusKindCase_ = value == null ? BonusKindOneofCase.None : BonusKindOneofCase.PlayerCount;
      }
    }

    /// <summary>Field number for the "fast_completion" field.</summary>
    public const int FastCompletionFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.FastCompletionChallengeBonus FastCompletion {
      get { return bonusKindCase_ == BonusKindOneofCase.FastCompletion ? (global::WUProtos.Data.FastCompletionChallengeBonus) bonusKind_ : null; }
      set {
        bonusKind_ = value;
        bonusKindCase_ = value == null ? BonusKindOneofCase.None : BonusKindOneofCase.FastCompletion;
      }
    }

    /// <summary>Field number for the "rune_level" field.</summary>
    public const int RuneLevelFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.RuneLevelChallengeBonus RuneLevel {
      get { return bonusKindCase_ == BonusKindOneofCase.RuneLevel ? (global::WUProtos.Data.RuneLevelChallengeBonus) bonusKind_ : null; }
      set {
        bonusKind_ = value;
        bonusKindCase_ = value == null ? BonusKindOneofCase.None : BonusKindOneofCase.RuneLevel;
      }
    }

    /// <summary>Field number for the "defeated_mob_count" field.</summary>
    public const int DefeatedMobCountFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.DefeatedMobCountChallengeBonus DefeatedMobCount {
      get { return bonusKindCase_ == BonusKindOneofCase.DefeatedMobCount ? (global::WUProtos.Data.DefeatedMobCountChallengeBonus) bonusKind_ : null; }
      set {
        bonusKind_ = value;
        bonusKindCase_ = value == null ? BonusKindOneofCase.None : BonusKindOneofCase.DefeatedMobCount;
      }
    }

    /// <summary>Field number for the "player_ratio" field.</summary>
    public const int PlayerRatioFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Player.PlayerRatioChallengeBonus PlayerRatio {
      get { return bonusKindCase_ == BonusKindOneofCase.PlayerRatio ? (global::WUProtos.Data.Player.PlayerRatioChallengeBonus) bonusKind_ : null; }
      set {
        bonusKind_ = value;
        bonusKindCase_ = value == null ? BonusKindOneofCase.None : BonusKindOneofCase.PlayerRatio;
      }
    }

    private object bonusKind_;
    /// <summary>Enum of possible cases for the "BonusKind" oneof.</summary>
    public enum BonusKindOneofCase {
      None = 0,
      PlayerCount = 20,
      FastCompletion = 21,
      RuneLevel = 22,
      DefeatedMobCount = 23,
      PlayerRatio = 24,
    }
    private BonusKindOneofCase bonusKindCase_ = BonusKindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BonusKindOneofCase BonusKindCase {
      get { return bonusKindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBonusKind() {
      bonusKindCase_ = BonusKindOneofCase.None;
      bonusKind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChallengeBonus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChallengeBonus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Receiver != other.Receiver) return false;
      if (TargetReward != other.TargetReward) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Modifier, other.Modifier)) return false;
      if (!object.Equals(PlayerCount, other.PlayerCount)) return false;
      if (!object.Equals(FastCompletion, other.FastCompletion)) return false;
      if (!object.Equals(RuneLevel, other.RuneLevel)) return false;
      if (!object.Equals(DefeatedMobCount, other.DefeatedMobCount)) return false;
      if (!object.Equals(PlayerRatio, other.PlayerRatio)) return false;
      if (BonusKindCase != other.BonusKindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Receiver != 0) hash ^= Receiver.GetHashCode();
      if (TargetReward != 0) hash ^= TargetReward.GetHashCode();
      if (Modifier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Modifier);
      if (bonusKindCase_ == BonusKindOneofCase.PlayerCount) hash ^= PlayerCount.GetHashCode();
      if (bonusKindCase_ == BonusKindOneofCase.FastCompletion) hash ^= FastCompletion.GetHashCode();
      if (bonusKindCase_ == BonusKindOneofCase.RuneLevel) hash ^= RuneLevel.GetHashCode();
      if (bonusKindCase_ == BonusKindOneofCase.DefeatedMobCount) hash ^= DefeatedMobCount.GetHashCode();
      if (bonusKindCase_ == BonusKindOneofCase.PlayerRatio) hash ^= PlayerRatio.GetHashCode();
      hash ^= (int) bonusKindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Receiver != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Receiver);
      }
      if (TargetReward != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TargetReward);
      }
      if (Modifier != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Modifier);
      }
      if (bonusKindCase_ == BonusKindOneofCase.PlayerCount) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(PlayerCount);
      }
      if (bonusKindCase_ == BonusKindOneofCase.FastCompletion) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(FastCompletion);
      }
      if (bonusKindCase_ == BonusKindOneofCase.RuneLevel) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(RuneLevel);
      }
      if (bonusKindCase_ == BonusKindOneofCase.DefeatedMobCount) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(DefeatedMobCount);
      }
      if (bonusKindCase_ == BonusKindOneofCase.PlayerRatio) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(PlayerRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Receiver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Receiver);
      }
      if (TargetReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TargetReward);
      }
      if (Modifier != 0F) {
        size += 1 + 4;
      }
      if (bonusKindCase_ == BonusKindOneofCase.PlayerCount) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerCount);
      }
      if (bonusKindCase_ == BonusKindOneofCase.FastCompletion) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FastCompletion);
      }
      if (bonusKindCase_ == BonusKindOneofCase.RuneLevel) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RuneLevel);
      }
      if (bonusKindCase_ == BonusKindOneofCase.DefeatedMobCount) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefeatedMobCount);
      }
      if (bonusKindCase_ == BonusKindOneofCase.PlayerRatio) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerRatio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChallengeBonus other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Receiver != 0) {
        Receiver = other.Receiver;
      }
      if (other.TargetReward != 0) {
        TargetReward = other.TargetReward;
      }
      if (other.Modifier != 0F) {
        Modifier = other.Modifier;
      }
      switch (other.BonusKindCase) {
        case BonusKindOneofCase.PlayerCount:
          if (PlayerCount == null) {
            PlayerCount = new global::WUProtos.Data.Player.PlayerCountChallengeBonus();
          }
          PlayerCount.MergeFrom(other.PlayerCount);
          break;
        case BonusKindOneofCase.FastCompletion:
          if (FastCompletion == null) {
            FastCompletion = new global::WUProtos.Data.FastCompletionChallengeBonus();
          }
          FastCompletion.MergeFrom(other.FastCompletion);
          break;
        case BonusKindOneofCase.RuneLevel:
          if (RuneLevel == null) {
            RuneLevel = new global::WUProtos.Data.RuneLevelChallengeBonus();
          }
          RuneLevel.MergeFrom(other.RuneLevel);
          break;
        case BonusKindOneofCase.DefeatedMobCount:
          if (DefeatedMobCount == null) {
            DefeatedMobCount = new global::WUProtos.Data.DefeatedMobCountChallengeBonus();
          }
          DefeatedMobCount.MergeFrom(other.DefeatedMobCount);
          break;
        case BonusKindOneofCase.PlayerRatio:
          if (PlayerRatio == null) {
            PlayerRatio = new global::WUProtos.Data.Player.PlayerRatioChallengeBonus();
          }
          PlayerRatio.MergeFrom(other.PlayerRatio);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Receiver = (global::WUProtos.Enums.BonusReceiver) input.ReadEnum();
            break;
          }
          case 24: {
            TargetReward = (global::WUProtos.Enums.BonusTargetReward) input.ReadEnum();
            break;
          }
          case 37: {
            Modifier = input.ReadFloat();
            break;
          }
          case 162: {
            global::WUProtos.Data.Player.PlayerCountChallengeBonus subBuilder = new global::WUProtos.Data.Player.PlayerCountChallengeBonus();
            if (bonusKindCase_ == BonusKindOneofCase.PlayerCount) {
              subBuilder.MergeFrom(PlayerCount);
            }
            input.ReadMessage(subBuilder);
            PlayerCount = subBuilder;
            break;
          }
          case 170: {
            global::WUProtos.Data.FastCompletionChallengeBonus subBuilder = new global::WUProtos.Data.FastCompletionChallengeBonus();
            if (bonusKindCase_ == BonusKindOneofCase.FastCompletion) {
              subBuilder.MergeFrom(FastCompletion);
            }
            input.ReadMessage(subBuilder);
            FastCompletion = subBuilder;
            break;
          }
          case 178: {
            global::WUProtos.Data.RuneLevelChallengeBonus subBuilder = new global::WUProtos.Data.RuneLevelChallengeBonus();
            if (bonusKindCase_ == BonusKindOneofCase.RuneLevel) {
              subBuilder.MergeFrom(RuneLevel);
            }
            input.ReadMessage(subBuilder);
            RuneLevel = subBuilder;
            break;
          }
          case 186: {
            global::WUProtos.Data.DefeatedMobCountChallengeBonus subBuilder = new global::WUProtos.Data.DefeatedMobCountChallengeBonus();
            if (bonusKindCase_ == BonusKindOneofCase.DefeatedMobCount) {
              subBuilder.MergeFrom(DefeatedMobCount);
            }
            input.ReadMessage(subBuilder);
            DefeatedMobCount = subBuilder;
            break;
          }
          case 194: {
            global::WUProtos.Data.Player.PlayerRatioChallengeBonus subBuilder = new global::WUProtos.Data.Player.PlayerRatioChallengeBonus();
            if (bonusKindCase_ == BonusKindOneofCase.PlayerRatio) {
              subBuilder.MergeFrom(PlayerRatio);
            }
            input.ReadMessage(subBuilder);
            PlayerRatio = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
