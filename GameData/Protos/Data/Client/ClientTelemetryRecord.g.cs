// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientTelemetryRecord.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientTelemetryRecord.proto</summary>
  public static partial class ClientTelemetryRecordReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientTelemetryRecord.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientTelemetryRecordReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRUZWxlbWV0cnlSZWNvcmQu",
            "cHJvdG8SFFdVUHJvdG9zLkRhdGEuQ2xpZW50InMKFUNsaWVudFRlbGVtZXRy",
            "eVJlY29yZBIRCglyZWNvcmRfaWQYASABKAkSFwoPZW5jb2RlZF9tZXNzYWdl",
            "GAIgASgMEhsKE2NsaWVudF90aW1lc3RhbXBfbXMYAyABKAMSEQoJbWV0cmlj",
            "X2lkGAQgASgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientTelemetryRecord), global::WUProtos.Data.Client.ClientTelemetryRecord.Parser, new[]{ "RecordId", "EncodedMessage", "ClientTimestampMs", "MetricId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientTelemetryRecord : pb::IMessage<ClientTelemetryRecord> {
    private static readonly pb::MessageParser<ClientTelemetryRecord> _parser = new pb::MessageParser<ClientTelemetryRecord>(() => new ClientTelemetryRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientTelemetryRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientTelemetryRecordReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryRecord(ClientTelemetryRecord other) : this() {
      recordId_ = other.recordId_;
      encodedMessage_ = other.encodedMessage_;
      clientTimestampMs_ = other.clientTimestampMs_;
      metricId_ = other.metricId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryRecord Clone() {
      return new ClientTelemetryRecord(this);
    }

    /// <summary>Field number for the "record_id" field.</summary>
    public const int RecordIdFieldNumber = 1;
    private string recordId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecordId {
      get { return recordId_; }
      set {
        recordId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encoded_message" field.</summary>
    public const int EncodedMessageFieldNumber = 2;
    private pb::ByteString encodedMessage_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EncodedMessage {
      get { return encodedMessage_; }
      set {
        encodedMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_timestamp_ms" field.</summary>
    public const int ClientTimestampMsFieldNumber = 3;
    private long clientTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTimestampMs {
      get { return clientTimestampMs_; }
      set {
        clientTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "metric_id" field.</summary>
    public const int MetricIdFieldNumber = 4;
    private long metricId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MetricId {
      get { return metricId_; }
      set {
        metricId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientTelemetryRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientTelemetryRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordId != other.RecordId) return false;
      if (EncodedMessage != other.EncodedMessage) return false;
      if (ClientTimestampMs != other.ClientTimestampMs) return false;
      if (MetricId != other.MetricId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RecordId.Length != 0) hash ^= RecordId.GetHashCode();
      if (EncodedMessage.Length != 0) hash ^= EncodedMessage.GetHashCode();
      if (ClientTimestampMs != 0L) hash ^= ClientTimestampMs.GetHashCode();
      if (MetricId != 0L) hash ^= MetricId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RecordId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RecordId);
      }
      if (EncodedMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(EncodedMessage);
      }
      if (ClientTimestampMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ClientTimestampMs);
      }
      if (MetricId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MetricId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RecordId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecordId);
      }
      if (EncodedMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncodedMessage);
      }
      if (ClientTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTimestampMs);
      }
      if (MetricId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MetricId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientTelemetryRecord other) {
      if (other == null) {
        return;
      }
      if (other.RecordId.Length != 0) {
        RecordId = other.RecordId;
      }
      if (other.EncodedMessage.Length != 0) {
        EncodedMessage = other.EncodedMessage;
      }
      if (other.ClientTimestampMs != 0L) {
        ClientTimestampMs = other.ClientTimestampMs;
      }
      if (other.MetricId != 0L) {
        MetricId = other.MetricId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RecordId = input.ReadString();
            break;
          }
          case 18: {
            EncodedMessage = input.ReadBytes();
            break;
          }
          case 24: {
            ClientTimestampMs = input.ReadInt64();
            break;
          }
          case 32: {
            MetricId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
