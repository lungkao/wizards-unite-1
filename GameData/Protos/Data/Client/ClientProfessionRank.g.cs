// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientProfessionRank.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientProfessionRank.proto</summary>
  public static partial class ClientProfessionRankReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientProfessionRank.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientProfessionRankReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9XVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRQcm9mZXNzaW9uUmFuay5w",
            "cm90bxIUV1VQcm90b3MuRGF0YS5DbGllbnQaL1dVUHJvdG9zL0RhdGEvQ2xp",
            "ZW50L0NsaWVudFByb2Zlc3Npb25Ob2RlLnByb3RvIu4BChRDbGllbnRQcm9m",
            "ZXNzaW9uUmFuaxIMCgRuYW1lGAIgASgJEkQKEHByb2Zlc3Npb25fbm9kZXMY",
            "AyADKAsyKi5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRQcm9mZXNzaW9u",
            "Tm9kZRIWCg5pbWFnZV91bmxvY2tlZBgEIAEoCRIbChNpbWFnZV91bmxvY2tl",
            "ZF9vcGVuGAUgASgJEhQKDGltYWdlX2xvY2tlZBgGIAEoCRIZChFpbWFnZV9s",
            "b2NrZWRfb3BlbhgHIAEoCRIcChRwcm9mZXNzaW5fcmFua19vcmRlchgIIAEo",
            "BWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Client.ClientProfessionNodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientProfessionRank), global::WUProtos.Data.Client.ClientProfessionRank.Parser, new[]{ "Name", "ProfessionNodes", "ImageUnlocked", "ImageUnlockedOpen", "ImageLocked", "ImageLockedOpen", "ProfessinRankOrder" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientProfessionRank : pb::IMessage<ClientProfessionRank> {
    private static readonly pb::MessageParser<ClientProfessionRank> _parser = new pb::MessageParser<ClientProfessionRank>(() => new ClientProfessionRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientProfessionRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientProfessionRankReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientProfessionRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientProfessionRank(ClientProfessionRank other) : this() {
      name_ = other.name_;
      professionNodes_ = other.professionNodes_.Clone();
      imageUnlocked_ = other.imageUnlocked_;
      imageUnlockedOpen_ = other.imageUnlockedOpen_;
      imageLocked_ = other.imageLocked_;
      imageLockedOpen_ = other.imageLockedOpen_;
      professinRankOrder_ = other.professinRankOrder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientProfessionRank Clone() {
      return new ClientProfessionRank(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profession_nodes" field.</summary>
    public const int ProfessionNodesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientProfessionNode> _repeated_professionNodes_codec
        = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.Client.ClientProfessionNode.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientProfessionNode> professionNodes_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientProfessionNode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientProfessionNode> ProfessionNodes {
      get { return professionNodes_; }
    }

    /// <summary>Field number for the "image_unlocked" field.</summary>
    public const int ImageUnlockedFieldNumber = 4;
    private string imageUnlocked_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUnlocked {
      get { return imageUnlocked_; }
      set {
        imageUnlocked_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_unlocked_open" field.</summary>
    public const int ImageUnlockedOpenFieldNumber = 5;
    private string imageUnlockedOpen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUnlockedOpen {
      get { return imageUnlockedOpen_; }
      set {
        imageUnlockedOpen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_locked" field.</summary>
    public const int ImageLockedFieldNumber = 6;
    private string imageLocked_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageLocked {
      get { return imageLocked_; }
      set {
        imageLocked_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_locked_open" field.</summary>
    public const int ImageLockedOpenFieldNumber = 7;
    private string imageLockedOpen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageLockedOpen {
      get { return imageLockedOpen_; }
      set {
        imageLockedOpen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "professin_rank_order" field.</summary>
    public const int ProfessinRankOrderFieldNumber = 8;
    private int professinRankOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProfessinRankOrder {
      get { return professinRankOrder_; }
      set {
        professinRankOrder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientProfessionRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientProfessionRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!professionNodes_.Equals(other.professionNodes_)) return false;
      if (ImageUnlocked != other.ImageUnlocked) return false;
      if (ImageUnlockedOpen != other.ImageUnlockedOpen) return false;
      if (ImageLocked != other.ImageLocked) return false;
      if (ImageLockedOpen != other.ImageLockedOpen) return false;
      if (ProfessinRankOrder != other.ProfessinRankOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= professionNodes_.GetHashCode();
      if (ImageUnlocked.Length != 0) hash ^= ImageUnlocked.GetHashCode();
      if (ImageUnlockedOpen.Length != 0) hash ^= ImageUnlockedOpen.GetHashCode();
      if (ImageLocked.Length != 0) hash ^= ImageLocked.GetHashCode();
      if (ImageLockedOpen.Length != 0) hash ^= ImageLockedOpen.GetHashCode();
      if (ProfessinRankOrder != 0) hash ^= ProfessinRankOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      professionNodes_.WriteTo(output, _repeated_professionNodes_codec);
      if (ImageUnlocked.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImageUnlocked);
      }
      if (ImageUnlockedOpen.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ImageUnlockedOpen);
      }
      if (ImageLocked.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImageLocked);
      }
      if (ImageLockedOpen.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImageLockedOpen);
      }
      if (ProfessinRankOrder != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ProfessinRankOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += professionNodes_.CalculateSize(_repeated_professionNodes_codec);
      if (ImageUnlocked.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUnlocked);
      }
      if (ImageUnlockedOpen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUnlockedOpen);
      }
      if (ImageLocked.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageLocked);
      }
      if (ImageLockedOpen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageLockedOpen);
      }
      if (ProfessinRankOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfessinRankOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientProfessionRank other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      professionNodes_.Add(other.professionNodes_);
      if (other.ImageUnlocked.Length != 0) {
        ImageUnlocked = other.ImageUnlocked;
      }
      if (other.ImageUnlockedOpen.Length != 0) {
        ImageUnlockedOpen = other.ImageUnlockedOpen;
      }
      if (other.ImageLocked.Length != 0) {
        ImageLocked = other.ImageLocked;
      }
      if (other.ImageLockedOpen.Length != 0) {
        ImageLockedOpen = other.ImageLockedOpen;
      }
      if (other.ProfessinRankOrder != 0) {
        ProfessinRankOrder = other.ProfessinRankOrder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            professionNodes_.AddEntriesFrom(input, _repeated_professionNodes_codec);
            break;
          }
          case 34: {
            ImageUnlocked = input.ReadString();
            break;
          }
          case 42: {
            ImageUnlockedOpen = input.ReadString();
            break;
          }
          case 50: {
            ImageLocked = input.ReadString();
            break;
          }
          case 58: {
            ImageLockedOpen = input.ReadString();
            break;
          }
          case 64: {
            ProfessinRankOrder = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
