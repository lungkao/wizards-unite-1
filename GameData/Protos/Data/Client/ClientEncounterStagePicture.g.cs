// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientEncounterStagePicture.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientEncounterStagePicture.proto</summary>
  public static partial class ClientEncounterStagePictureReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientEncounterStagePicture.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientEncounterStagePictureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRFbmNvdW50ZXJTdGFnZVBp",
            "Y3R1cmUucHJvdG8SFFdVUHJvdG9zLkRhdGEuQ2xpZW50GhtXVVByb3Rvcy9E",
            "YXRhL1ZlY3RvcjMucHJvdG8imgEKG0NsaWVudEVuY291bnRlclN0YWdlUGlj",
            "dHVyZRIKCgJpZBgBIAEoCRITCgtzcGF3bl9zY2FsZRgCIAEoAhIRCgltaW5f",
            "c2NhbGUYAyABKAISEQoJbWF4X3NjYWxlGAQgASgCEjQKFHNpbXBsZV9hcl9w",
            "b3Nfb2Zmc2V0GAUgASgLMhYuV1VQcm90b3MuRGF0YS5WZWN0b3IzYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Vector3Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientEncounterStagePicture), global::WUProtos.Data.Client.ClientEncounterStagePicture.Parser, new[]{ "Id", "SpawnScale", "MinScale", "MaxScale", "SimpleArPosOffset" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientEncounterStagePicture : pb::IMessage<ClientEncounterStagePicture> {
    private static readonly pb::MessageParser<ClientEncounterStagePicture> _parser = new pb::MessageParser<ClientEncounterStagePicture>(() => new ClientEncounterStagePicture());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientEncounterStagePicture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientEncounterStagePictureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounterStagePicture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounterStagePicture(ClientEncounterStagePicture other) : this() {
      id_ = other.id_;
      spawnScale_ = other.spawnScale_;
      minScale_ = other.minScale_;
      maxScale_ = other.maxScale_;
      simpleArPosOffset_ = other.simpleArPosOffset_ != null ? other.simpleArPosOffset_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounterStagePicture Clone() {
      return new ClientEncounterStagePicture(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spawn_scale" field.</summary>
    public const int SpawnScaleFieldNumber = 2;
    private float spawnScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SpawnScale {
      get { return spawnScale_; }
      set {
        spawnScale_ = value;
      }
    }

    /// <summary>Field number for the "min_scale" field.</summary>
    public const int MinScaleFieldNumber = 3;
    private float minScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinScale {
      get { return minScale_; }
      set {
        minScale_ = value;
      }
    }

    /// <summary>Field number for the "max_scale" field.</summary>
    public const int MaxScaleFieldNumber = 4;
    private float maxScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxScale {
      get { return maxScale_; }
      set {
        maxScale_ = value;
      }
    }

    /// <summary>Field number for the "simple_ar_pos_offset" field.</summary>
    public const int SimpleArPosOffsetFieldNumber = 5;
    private global::WUProtos.Data.Vector3 simpleArPosOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Vector3 SimpleArPosOffset {
      get { return simpleArPosOffset_; }
      set {
        simpleArPosOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientEncounterStagePicture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientEncounterStagePicture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpawnScale, other.SpawnScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinScale, other.MinScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxScale, other.MaxScale)) return false;
      if (!object.Equals(SimpleArPosOffset, other.SimpleArPosOffset)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (SpawnScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpawnScale);
      if (MinScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinScale);
      if (MaxScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxScale);
      if (simpleArPosOffset_ != null) hash ^= SimpleArPosOffset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (SpawnScale != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(SpawnScale);
      }
      if (MinScale != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MinScale);
      }
      if (MaxScale != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxScale);
      }
      if (simpleArPosOffset_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SimpleArPosOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (SpawnScale != 0F) {
        size += 1 + 4;
      }
      if (MinScale != 0F) {
        size += 1 + 4;
      }
      if (MaxScale != 0F) {
        size += 1 + 4;
      }
      if (simpleArPosOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimpleArPosOffset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientEncounterStagePicture other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.SpawnScale != 0F) {
        SpawnScale = other.SpawnScale;
      }
      if (other.MinScale != 0F) {
        MinScale = other.MinScale;
      }
      if (other.MaxScale != 0F) {
        MaxScale = other.MaxScale;
      }
      if (other.simpleArPosOffset_ != null) {
        if (simpleArPosOffset_ == null) {
          SimpleArPosOffset = new global::WUProtos.Data.Vector3();
        }
        SimpleArPosOffset.MergeFrom(other.SimpleArPosOffset);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 21: {
            SpawnScale = input.ReadFloat();
            break;
          }
          case 29: {
            MinScale = input.ReadFloat();
            break;
          }
          case 37: {
            MaxScale = input.ReadFloat();
            break;
          }
          case 42: {
            if (simpleArPosOffset_ == null) {
              SimpleArPosOffset = new global::WUProtos.Data.Vector3();
            }
            input.ReadMessage(SimpleArPosOffset);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
