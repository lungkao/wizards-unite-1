// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientEncounter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientEncounter.proto</summary>
  public static partial class ClientEncounterReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientEncounter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientEncounterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRFbmNvdW50ZXIucHJvdG8S",
            "FFdVUHJvdG9zLkRhdGEuQ2xpZW50Gi9XVVByb3Rvcy9EYXRhL0NsaWVudC9D",
            "bGllbnRFbmNvdW50ZXJTdGFnZS5wcm90bxoiV1VQcm90b3MvRGF0YS9BdWRp",
            "b1BhcmFtZXRlci5wcm90bxoZV1VQcm90b3MvRGF0YS9Db2xvci5wcm90byK2",
            "BAoPQ2xpZW50RW5jb3VudGVyEgoKAmlkGAEgASgJEiQKHGVuY291bnRlcl9z",
            "ZWFyY2hpbmdfdGltZWxpbmUYAiABKAkSKgoiZW5jb3VudGVyX3NlYXJjaGlu",
            "Z19pZGxlX3RpbWVsaW5lcxgDIAMoCRIfChdlbmNvdW50ZXJfZmxlZV90aW1l",
            "bGluZRgEIAEoCRIYChBlbmNvdW50ZXJfdGFyZ2V0GAUgASgJEjoKBnN0YWdl",
            "cxgGIAMoCzIqLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEVuY291bnRl",
            "clN0YWdlEh8KF2VuY291bnRlcl90YXJnZXRfbGF5b3V0GAcgASgJEhwKFHNl",
            "YXJjaF90YXJnZXRfbGF5b3V0GAggASgJEhgKEGVuY291bnRlcl9hc3NldHMY",
            "CSADKAkSHAoUZW5jb3VudGVyX21hcF9zcHJpdGUYCiABKAkSPQoWZW5jb3Vu",
            "dGVyX211c2ljX3BhcmFtcxgLIAMoCzIdLldVUHJvdG9zLkRhdGEuQXVkaW9Q",
            "YXJhbWV0ZXISDAoEbmFtZRgMIAEoCRIiChplbmNvdW50ZXJfbWFwX3Nwcml0",
            "ZV9mcmFtZRgNIAEoCRIyChRtYXBfaGVhbHRoX2Jhcl9jb2xvchgOIAEoCzIU",
            "LldVUHJvdG9zLkRhdGEuQ29sb3ISMgoUaHVkX2hlYWx0aF9iYXJfY29sb3IY",
            "DyABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Client.ClientEncounterStageReflection.Descriptor, global::WUProtos.Data.AudioParameterReflection.Descriptor, global::WUProtos.Data.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientEncounter), global::WUProtos.Data.Client.ClientEncounter.Parser, new[]{ "Id", "EncounterSearchingTimeline", "EncounterSearchingIdleTimelines", "EncounterFleeTimeline", "EncounterTarget", "Stages", "EncounterTargetLayout", "SearchTargetLayout", "EncounterAssets", "EncounterMapSprite", "EncounterMusicParams", "Name", "EncounterMapSpriteFrame", "MapHealthBarColor", "HudHealthBarColor" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientEncounter : pb::IMessage<ClientEncounter> {
    private static readonly pb::MessageParser<ClientEncounter> _parser = new pb::MessageParser<ClientEncounter>(() => new ClientEncounter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientEncounter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientEncounterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounter(ClientEncounter other) : this() {
      id_ = other.id_;
      encounterSearchingTimeline_ = other.encounterSearchingTimeline_;
      encounterSearchingIdleTimelines_ = other.encounterSearchingIdleTimelines_.Clone();
      encounterFleeTimeline_ = other.encounterFleeTimeline_;
      encounterTarget_ = other.encounterTarget_;
      stages_ = other.stages_.Clone();
      encounterTargetLayout_ = other.encounterTargetLayout_;
      searchTargetLayout_ = other.searchTargetLayout_;
      encounterAssets_ = other.encounterAssets_.Clone();
      encounterMapSprite_ = other.encounterMapSprite_;
      encounterMusicParams_ = other.encounterMusicParams_.Clone();
      name_ = other.name_;
      encounterMapSpriteFrame_ = other.encounterMapSpriteFrame_;
      mapHealthBarColor_ = other.mapHealthBarColor_ != null ? other.mapHealthBarColor_.Clone() : null;
      hudHealthBarColor_ = other.hudHealthBarColor_ != null ? other.hudHealthBarColor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounter Clone() {
      return new ClientEncounter(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_searching_timeline" field.</summary>
    public const int EncounterSearchingTimelineFieldNumber = 2;
    private string encounterSearchingTimeline_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncounterSearchingTimeline {
      get { return encounterSearchingTimeline_; }
      set {
        encounterSearchingTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_searching_idle_timelines" field.</summary>
    public const int EncounterSearchingIdleTimelinesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_encounterSearchingIdleTimelines_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> encounterSearchingIdleTimelines_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> EncounterSearchingIdleTimelines {
      get { return encounterSearchingIdleTimelines_; }
    }

    /// <summary>Field number for the "encounter_flee_timeline" field.</summary>
    public const int EncounterFleeTimelineFieldNumber = 4;
    private string encounterFleeTimeline_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncounterFleeTimeline {
      get { return encounterFleeTimeline_; }
      set {
        encounterFleeTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_target" field.</summary>
    public const int EncounterTargetFieldNumber = 5;
    private string encounterTarget_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncounterTarget {
      get { return encounterTarget_; }
      set {
        encounterTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stages" field.</summary>
    public const int StagesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientEncounterStage> _repeated_stages_codec
        = pb::FieldCodec.ForMessage(50, global::WUProtos.Data.Client.ClientEncounterStage.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientEncounterStage> stages_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientEncounterStage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientEncounterStage> Stages {
      get { return stages_; }
    }

    /// <summary>Field number for the "encounter_target_layout" field.</summary>
    public const int EncounterTargetLayoutFieldNumber = 7;
    private string encounterTargetLayout_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncounterTargetLayout {
      get { return encounterTargetLayout_; }
      set {
        encounterTargetLayout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "search_target_layout" field.</summary>
    public const int SearchTargetLayoutFieldNumber = 8;
    private string searchTargetLayout_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchTargetLayout {
      get { return searchTargetLayout_; }
      set {
        searchTargetLayout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_assets" field.</summary>
    public const int EncounterAssetsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_encounterAssets_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> encounterAssets_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> EncounterAssets {
      get { return encounterAssets_; }
    }

    /// <summary>Field number for the "encounter_map_sprite" field.</summary>
    public const int EncounterMapSpriteFieldNumber = 10;
    private string encounterMapSprite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncounterMapSprite {
      get { return encounterMapSprite_; }
      set {
        encounterMapSprite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_music_params" field.</summary>
    public const int EncounterMusicParamsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_encounterMusicParams_codec
        = pb::FieldCodec.ForMessage(90, global::WUProtos.Data.AudioParameter.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> encounterMusicParams_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> EncounterMusicParams {
      get { return encounterMusicParams_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 12;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_map_sprite_frame" field.</summary>
    public const int EncounterMapSpriteFrameFieldNumber = 13;
    private string encounterMapSpriteFrame_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncounterMapSpriteFrame {
      get { return encounterMapSpriteFrame_; }
      set {
        encounterMapSpriteFrame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "map_health_bar_color" field.</summary>
    public const int MapHealthBarColorFieldNumber = 14;
    private global::WUProtos.Data.Color mapHealthBarColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Color MapHealthBarColor {
      get { return mapHealthBarColor_; }
      set {
        mapHealthBarColor_ = value;
      }
    }

    /// <summary>Field number for the "hud_health_bar_color" field.</summary>
    public const int HudHealthBarColorFieldNumber = 15;
    private global::WUProtos.Data.Color hudHealthBarColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Color HudHealthBarColor {
      get { return hudHealthBarColor_; }
      set {
        hudHealthBarColor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientEncounter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientEncounter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EncounterSearchingTimeline != other.EncounterSearchingTimeline) return false;
      if(!encounterSearchingIdleTimelines_.Equals(other.encounterSearchingIdleTimelines_)) return false;
      if (EncounterFleeTimeline != other.EncounterFleeTimeline) return false;
      if (EncounterTarget != other.EncounterTarget) return false;
      if(!stages_.Equals(other.stages_)) return false;
      if (EncounterTargetLayout != other.EncounterTargetLayout) return false;
      if (SearchTargetLayout != other.SearchTargetLayout) return false;
      if(!encounterAssets_.Equals(other.encounterAssets_)) return false;
      if (EncounterMapSprite != other.EncounterMapSprite) return false;
      if(!encounterMusicParams_.Equals(other.encounterMusicParams_)) return false;
      if (Name != other.Name) return false;
      if (EncounterMapSpriteFrame != other.EncounterMapSpriteFrame) return false;
      if (!object.Equals(MapHealthBarColor, other.MapHealthBarColor)) return false;
      if (!object.Equals(HudHealthBarColor, other.HudHealthBarColor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (EncounterSearchingTimeline.Length != 0) hash ^= EncounterSearchingTimeline.GetHashCode();
      hash ^= encounterSearchingIdleTimelines_.GetHashCode();
      if (EncounterFleeTimeline.Length != 0) hash ^= EncounterFleeTimeline.GetHashCode();
      if (EncounterTarget.Length != 0) hash ^= EncounterTarget.GetHashCode();
      hash ^= stages_.GetHashCode();
      if (EncounterTargetLayout.Length != 0) hash ^= EncounterTargetLayout.GetHashCode();
      if (SearchTargetLayout.Length != 0) hash ^= SearchTargetLayout.GetHashCode();
      hash ^= encounterAssets_.GetHashCode();
      if (EncounterMapSprite.Length != 0) hash ^= EncounterMapSprite.GetHashCode();
      hash ^= encounterMusicParams_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (EncounterMapSpriteFrame.Length != 0) hash ^= EncounterMapSpriteFrame.GetHashCode();
      if (mapHealthBarColor_ != null) hash ^= MapHealthBarColor.GetHashCode();
      if (hudHealthBarColor_ != null) hash ^= HudHealthBarColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (EncounterSearchingTimeline.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EncounterSearchingTimeline);
      }
      encounterSearchingIdleTimelines_.WriteTo(output, _repeated_encounterSearchingIdleTimelines_codec);
      if (EncounterFleeTimeline.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EncounterFleeTimeline);
      }
      if (EncounterTarget.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EncounterTarget);
      }
      stages_.WriteTo(output, _repeated_stages_codec);
      if (EncounterTargetLayout.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(EncounterTargetLayout);
      }
      if (SearchTargetLayout.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SearchTargetLayout);
      }
      encounterAssets_.WriteTo(output, _repeated_encounterAssets_codec);
      if (EncounterMapSprite.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(EncounterMapSprite);
      }
      encounterMusicParams_.WriteTo(output, _repeated_encounterMusicParams_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      if (EncounterMapSpriteFrame.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EncounterMapSpriteFrame);
      }
      if (mapHealthBarColor_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(MapHealthBarColor);
      }
      if (hudHealthBarColor_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(HudHealthBarColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (EncounterSearchingTimeline.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterSearchingTimeline);
      }
      size += encounterSearchingIdleTimelines_.CalculateSize(_repeated_encounterSearchingIdleTimelines_codec);
      if (EncounterFleeTimeline.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterFleeTimeline);
      }
      if (EncounterTarget.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterTarget);
      }
      size += stages_.CalculateSize(_repeated_stages_codec);
      if (EncounterTargetLayout.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterTargetLayout);
      }
      if (SearchTargetLayout.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchTargetLayout);
      }
      size += encounterAssets_.CalculateSize(_repeated_encounterAssets_codec);
      if (EncounterMapSprite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterMapSprite);
      }
      size += encounterMusicParams_.CalculateSize(_repeated_encounterMusicParams_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (EncounterMapSpriteFrame.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterMapSpriteFrame);
      }
      if (mapHealthBarColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapHealthBarColor);
      }
      if (hudHealthBarColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HudHealthBarColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientEncounter other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.EncounterSearchingTimeline.Length != 0) {
        EncounterSearchingTimeline = other.EncounterSearchingTimeline;
      }
      encounterSearchingIdleTimelines_.Add(other.encounterSearchingIdleTimelines_);
      if (other.EncounterFleeTimeline.Length != 0) {
        EncounterFleeTimeline = other.EncounterFleeTimeline;
      }
      if (other.EncounterTarget.Length != 0) {
        EncounterTarget = other.EncounterTarget;
      }
      stages_.Add(other.stages_);
      if (other.EncounterTargetLayout.Length != 0) {
        EncounterTargetLayout = other.EncounterTargetLayout;
      }
      if (other.SearchTargetLayout.Length != 0) {
        SearchTargetLayout = other.SearchTargetLayout;
      }
      encounterAssets_.Add(other.encounterAssets_);
      if (other.EncounterMapSprite.Length != 0) {
        EncounterMapSprite = other.EncounterMapSprite;
      }
      encounterMusicParams_.Add(other.encounterMusicParams_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.EncounterMapSpriteFrame.Length != 0) {
        EncounterMapSpriteFrame = other.EncounterMapSpriteFrame;
      }
      if (other.mapHealthBarColor_ != null) {
        if (mapHealthBarColor_ == null) {
          MapHealthBarColor = new global::WUProtos.Data.Color();
        }
        MapHealthBarColor.MergeFrom(other.MapHealthBarColor);
      }
      if (other.hudHealthBarColor_ != null) {
        if (hudHealthBarColor_ == null) {
          HudHealthBarColor = new global::WUProtos.Data.Color();
        }
        HudHealthBarColor.MergeFrom(other.HudHealthBarColor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            EncounterSearchingTimeline = input.ReadString();
            break;
          }
          case 26: {
            encounterSearchingIdleTimelines_.AddEntriesFrom(input, _repeated_encounterSearchingIdleTimelines_codec);
            break;
          }
          case 34: {
            EncounterFleeTimeline = input.ReadString();
            break;
          }
          case 42: {
            EncounterTarget = input.ReadString();
            break;
          }
          case 50: {
            stages_.AddEntriesFrom(input, _repeated_stages_codec);
            break;
          }
          case 58: {
            EncounterTargetLayout = input.ReadString();
            break;
          }
          case 66: {
            SearchTargetLayout = input.ReadString();
            break;
          }
          case 74: {
            encounterAssets_.AddEntriesFrom(input, _repeated_encounterAssets_codec);
            break;
          }
          case 82: {
            EncounterMapSprite = input.ReadString();
            break;
          }
          case 90: {
            encounterMusicParams_.AddEntriesFrom(input, _repeated_encounterMusicParams_codec);
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 106: {
            EncounterMapSpriteFrame = input.ReadString();
            break;
          }
          case 114: {
            if (mapHealthBarColor_ == null) {
              MapHealthBarColor = new global::WUProtos.Data.Color();
            }
            input.ReadMessage(MapHealthBarColor);
            break;
          }
          case 122: {
            if (hudHealthBarColor_ == null) {
              HudHealthBarColor = new global::WUProtos.Data.Color();
            }
            input.ReadMessage(HudHealthBarColor);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
