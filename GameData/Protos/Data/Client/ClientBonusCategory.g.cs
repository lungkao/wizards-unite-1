// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientBonusCategory.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientBonusCategory.proto</summary>
  public static partial class ClientBonusCategoryReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientBonusCategory.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientBonusCategoryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5XVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRCb251c0NhdGVnb3J5LnBy",
            "b3RvEhRXVVByb3Rvcy5EYXRhLkNsaWVudBoZV1VQcm90b3MvRGF0YS9Db2xv",
            "ci5wcm90byJ2ChNDbGllbnRCb251c0NhdGVnb3J5EgoKAmlkGAEgASgJEiMK",
            "BWNvbG9yGAIgASgLMhQuV1VQcm90b3MuRGF0YS5Db2xvchIUCgxuYW1lX2xv",
            "Y19rZXkYAyABKAkSGAoQYmFja2dyb3VuZF9pbWFnZRgEIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientBonusCategory), global::WUProtos.Data.Client.ClientBonusCategory.Parser, new[]{ "Id", "Color", "NameLocKey", "BackgroundImage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientBonusCategory : pb::IMessage<ClientBonusCategory> {
    private static readonly pb::MessageParser<ClientBonusCategory> _parser = new pb::MessageParser<ClientBonusCategory>(() => new ClientBonusCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientBonusCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientBonusCategoryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientBonusCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientBonusCategory(ClientBonusCategory other) : this() {
      id_ = other.id_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      nameLocKey_ = other.nameLocKey_;
      backgroundImage_ = other.backgroundImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientBonusCategory Clone() {
      return new ClientBonusCategory(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 2;
    private global::WUProtos.Data.Color color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "name_loc_key" field.</summary>
    public const int NameLocKeyFieldNumber = 3;
    private string nameLocKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameLocKey {
      get { return nameLocKey_; }
      set {
        nameLocKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "background_image" field.</summary>
    public const int BackgroundImageFieldNumber = 4;
    private string backgroundImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackgroundImage {
      get { return backgroundImage_; }
      set {
        backgroundImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientBonusCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientBonusCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (NameLocKey != other.NameLocKey) return false;
      if (BackgroundImage != other.BackgroundImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (NameLocKey.Length != 0) hash ^= NameLocKey.GetHashCode();
      if (BackgroundImage.Length != 0) hash ^= BackgroundImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (color_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Color);
      }
      if (NameLocKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLocKey);
      }
      if (BackgroundImage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BackgroundImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (NameLocKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLocKey);
      }
      if (BackgroundImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackgroundImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientBonusCategory other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::WUProtos.Data.Color();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.NameLocKey.Length != 0) {
        NameLocKey = other.NameLocKey;
      }
      if (other.BackgroundImage.Length != 0) {
        BackgroundImage = other.BackgroundImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (color_ == null) {
              Color = new global::WUProtos.Data.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 26: {
            NameLocKey = input.ReadString();
            break;
          }
          case 34: {
            BackgroundImage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
