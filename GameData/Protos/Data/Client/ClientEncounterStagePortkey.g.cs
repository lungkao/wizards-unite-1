// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientEncounterStagePortkey.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientEncounterStagePortkey.proto</summary>
  public static partial class ClientEncounterStagePortkeyReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientEncounterStagePortkey.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientEncounterStagePortkeyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRFbmNvdW50ZXJTdGFnZVBv",
            "cnRrZXkucHJvdG8SFFdVUHJvdG9zLkRhdGEuQ2xpZW50IpMBChtDbGllbnRF",
            "bmNvdW50ZXJTdGFnZVBvcnRrZXkSEAoIc2NlbmVfaWQYASABKAkSEQoJcG9y",
            "dGFsX2lkGAIgASgJEhsKE29iamVjdF9wbGFjZW1lbnRfaWQYAyABKAkSGwoT",
            "cG9ydGFsX3BsYWNlbWVudF9pZBgEIAEoCRIVCg1wb3J0a2V5X2Fzc2V0GAUg",
            "ASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientEncounterStagePortkey), global::WUProtos.Data.Client.ClientEncounterStagePortkey.Parser, new[]{ "SceneId", "PortalId", "ObjectPlacementId", "PortalPlacementId", "PortkeyAsset" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientEncounterStagePortkey : pb::IMessage<ClientEncounterStagePortkey> {
    private static readonly pb::MessageParser<ClientEncounterStagePortkey> _parser = new pb::MessageParser<ClientEncounterStagePortkey>(() => new ClientEncounterStagePortkey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientEncounterStagePortkey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientEncounterStagePortkeyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounterStagePortkey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounterStagePortkey(ClientEncounterStagePortkey other) : this() {
      sceneId_ = other.sceneId_;
      portalId_ = other.portalId_;
      objectPlacementId_ = other.objectPlacementId_;
      portalPlacementId_ = other.portalPlacementId_;
      portkeyAsset_ = other.portkeyAsset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEncounterStagePortkey Clone() {
      return new ClientEncounterStagePortkey(this);
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private string sceneId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portal_id" field.</summary>
    public const int PortalIdFieldNumber = 2;
    private string portalId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortalId {
      get { return portalId_; }
      set {
        portalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object_placement_id" field.</summary>
    public const int ObjectPlacementIdFieldNumber = 3;
    private string objectPlacementId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObjectPlacementId {
      get { return objectPlacementId_; }
      set {
        objectPlacementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portal_placement_id" field.</summary>
    public const int PortalPlacementIdFieldNumber = 4;
    private string portalPlacementId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortalPlacementId {
      get { return portalPlacementId_; }
      set {
        portalPlacementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portkey_asset" field.</summary>
    public const int PortkeyAssetFieldNumber = 5;
    private string portkeyAsset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortkeyAsset {
      get { return portkeyAsset_; }
      set {
        portkeyAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientEncounterStagePortkey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientEncounterStagePortkey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (PortalId != other.PortalId) return false;
      if (ObjectPlacementId != other.ObjectPlacementId) return false;
      if (PortalPlacementId != other.PortalPlacementId) return false;
      if (PortkeyAsset != other.PortkeyAsset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
      if (PortalId.Length != 0) hash ^= PortalId.GetHashCode();
      if (ObjectPlacementId.Length != 0) hash ^= ObjectPlacementId.GetHashCode();
      if (PortalPlacementId.Length != 0) hash ^= PortalPlacementId.GetHashCode();
      if (PortkeyAsset.Length != 0) hash ^= PortkeyAsset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SceneId);
      }
      if (PortalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PortalId);
      }
      if (ObjectPlacementId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ObjectPlacementId);
      }
      if (PortalPlacementId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PortalPlacementId);
      }
      if (PortkeyAsset.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PortkeyAsset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
      }
      if (PortalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortalId);
      }
      if (ObjectPlacementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectPlacementId);
      }
      if (PortalPlacementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortalPlacementId);
      }
      if (PortkeyAsset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortkeyAsset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientEncounterStagePortkey other) {
      if (other == null) {
        return;
      }
      if (other.SceneId.Length != 0) {
        SceneId = other.SceneId;
      }
      if (other.PortalId.Length != 0) {
        PortalId = other.PortalId;
      }
      if (other.ObjectPlacementId.Length != 0) {
        ObjectPlacementId = other.ObjectPlacementId;
      }
      if (other.PortalPlacementId.Length != 0) {
        PortalPlacementId = other.PortalPlacementId;
      }
      if (other.PortkeyAsset.Length != 0) {
        PortkeyAsset = other.PortkeyAsset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SceneId = input.ReadString();
            break;
          }
          case 18: {
            PortalId = input.ReadString();
            break;
          }
          case 26: {
            ObjectPlacementId = input.ReadString();
            break;
          }
          case 34: {
            PortalPlacementId = input.ReadString();
            break;
          }
          case 42: {
            PortkeyAsset = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
