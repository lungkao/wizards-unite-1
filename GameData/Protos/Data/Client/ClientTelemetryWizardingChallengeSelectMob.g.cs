// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientTelemetryWizardingChallengeSelectMob.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientTelemetryWizardingChallengeSelectMob.proto</summary>
  public static partial class ClientTelemetryWizardingChallengeSelectMobReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientTelemetryWizardingChallengeSelectMob.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientTelemetryWizardingChallengeSelectMobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkVXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRUZWxlbWV0cnlXaXphcmRp",
            "bmdDaGFsbGVuZ2VTZWxlY3RNb2IucHJvdG8SFFdVUHJvdG9zLkRhdGEuQ2xp",
            "ZW50GiVXVVByb3Rvcy9FbnVtcy9BY3RpdmVFbmdhZ2VtZW50LnByb3RvIpEC",
            "CipDbGllbnRUZWxlbWV0cnlXaXphcmRpbmdDaGFsbGVuZ2VTZWxlY3RNb2IS",
            "EQoJbW9iX2xldmVsGAEgASgFEhQKDG1vYl9hZmZpbml0eRgCIAEoCRISCgpt",
            "b2JfZ210X2lkGAMgASgJEh4KFnBsYXllcl9wcm9mZXNzaW9uX3JhbmsYBCAB",
            "KAUSIAoYcGxheWVyX3Byb2Zlc3Npb25fZ210X2lkGAUgASgJEkAKFmlzX21v",
            "Yl9hbHJlYWR5X2VuZ2FnZWQYBiABKA4yIC5XVVByb3Rvcy5FbnVtcy5BY3Rp",
            "dmVFbmdhZ2VtZW50EiIKGnBsYXllcl9lbmdhZ2VtZW50X3dpdGhfbW9iGAcg",
            "ASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Enums.ActiveEngagementReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientTelemetryWizardingChallengeSelectMob), global::WUProtos.Data.Client.ClientTelemetryWizardingChallengeSelectMob.Parser, new[]{ "MobLevel", "MobAffinity", "MobGmtId", "PlayerProfessionRank", "PlayerProfessionGmtId", "IsMobAlreadyEngaged", "PlayerEngagementWithMob" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientTelemetryWizardingChallengeSelectMob : pb::IMessage<ClientTelemetryWizardingChallengeSelectMob> {
    private static readonly pb::MessageParser<ClientTelemetryWizardingChallengeSelectMob> _parser = new pb::MessageParser<ClientTelemetryWizardingChallengeSelectMob>(() => new ClientTelemetryWizardingChallengeSelectMob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientTelemetryWizardingChallengeSelectMob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientTelemetryWizardingChallengeSelectMobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryWizardingChallengeSelectMob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryWizardingChallengeSelectMob(ClientTelemetryWizardingChallengeSelectMob other) : this() {
      mobLevel_ = other.mobLevel_;
      mobAffinity_ = other.mobAffinity_;
      mobGmtId_ = other.mobGmtId_;
      playerProfessionRank_ = other.playerProfessionRank_;
      playerProfessionGmtId_ = other.playerProfessionGmtId_;
      isMobAlreadyEngaged_ = other.isMobAlreadyEngaged_;
      playerEngagementWithMob_ = other.playerEngagementWithMob_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryWizardingChallengeSelectMob Clone() {
      return new ClientTelemetryWizardingChallengeSelectMob(this);
    }

    /// <summary>Field number for the "mob_level" field.</summary>
    public const int MobLevelFieldNumber = 1;
    private int mobLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MobLevel {
      get { return mobLevel_; }
      set {
        mobLevel_ = value;
      }
    }

    /// <summary>Field number for the "mob_affinity" field.</summary>
    public const int MobAffinityFieldNumber = 2;
    private string mobAffinity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobAffinity {
      get { return mobAffinity_; }
      set {
        mobAffinity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mob_gmt_id" field.</summary>
    public const int MobGmtIdFieldNumber = 3;
    private string mobGmtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobGmtId {
      get { return mobGmtId_; }
      set {
        mobGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_profession_rank" field.</summary>
    public const int PlayerProfessionRankFieldNumber = 4;
    private int playerProfessionRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerProfessionRank {
      get { return playerProfessionRank_; }
      set {
        playerProfessionRank_ = value;
      }
    }

    /// <summary>Field number for the "player_profession_gmt_id" field.</summary>
    public const int PlayerProfessionGmtIdFieldNumber = 5;
    private string playerProfessionGmtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerProfessionGmtId {
      get { return playerProfessionGmtId_; }
      set {
        playerProfessionGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_mob_already_engaged" field.</summary>
    public const int IsMobAlreadyEngagedFieldNumber = 6;
    private global::WUProtos.Enums.ActiveEngagement isMobAlreadyEngaged_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.ActiveEngagement IsMobAlreadyEngaged {
      get { return isMobAlreadyEngaged_; }
      set {
        isMobAlreadyEngaged_ = value;
      }
    }

    /// <summary>Field number for the "player_engagement_with_mob" field.</summary>
    public const int PlayerEngagementWithMobFieldNumber = 7;
    private string playerEngagementWithMob_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerEngagementWithMob {
      get { return playerEngagementWithMob_; }
      set {
        playerEngagementWithMob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientTelemetryWizardingChallengeSelectMob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientTelemetryWizardingChallengeSelectMob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MobLevel != other.MobLevel) return false;
      if (MobAffinity != other.MobAffinity) return false;
      if (MobGmtId != other.MobGmtId) return false;
      if (PlayerProfessionRank != other.PlayerProfessionRank) return false;
      if (PlayerProfessionGmtId != other.PlayerProfessionGmtId) return false;
      if (IsMobAlreadyEngaged != other.IsMobAlreadyEngaged) return false;
      if (PlayerEngagementWithMob != other.PlayerEngagementWithMob) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MobLevel != 0) hash ^= MobLevel.GetHashCode();
      if (MobAffinity.Length != 0) hash ^= MobAffinity.GetHashCode();
      if (MobGmtId.Length != 0) hash ^= MobGmtId.GetHashCode();
      if (PlayerProfessionRank != 0) hash ^= PlayerProfessionRank.GetHashCode();
      if (PlayerProfessionGmtId.Length != 0) hash ^= PlayerProfessionGmtId.GetHashCode();
      if (IsMobAlreadyEngaged != 0) hash ^= IsMobAlreadyEngaged.GetHashCode();
      if (PlayerEngagementWithMob.Length != 0) hash ^= PlayerEngagementWithMob.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MobLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MobLevel);
      }
      if (MobAffinity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MobAffinity);
      }
      if (MobGmtId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MobGmtId);
      }
      if (PlayerProfessionRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerProfessionRank);
      }
      if (PlayerProfessionGmtId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PlayerProfessionGmtId);
      }
      if (IsMobAlreadyEngaged != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) IsMobAlreadyEngaged);
      }
      if (PlayerEngagementWithMob.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PlayerEngagementWithMob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MobLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MobLevel);
      }
      if (MobAffinity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MobAffinity);
      }
      if (MobGmtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MobGmtId);
      }
      if (PlayerProfessionRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerProfessionRank);
      }
      if (PlayerProfessionGmtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerProfessionGmtId);
      }
      if (IsMobAlreadyEngaged != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IsMobAlreadyEngaged);
      }
      if (PlayerEngagementWithMob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerEngagementWithMob);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientTelemetryWizardingChallengeSelectMob other) {
      if (other == null) {
        return;
      }
      if (other.MobLevel != 0) {
        MobLevel = other.MobLevel;
      }
      if (other.MobAffinity.Length != 0) {
        MobAffinity = other.MobAffinity;
      }
      if (other.MobGmtId.Length != 0) {
        MobGmtId = other.MobGmtId;
      }
      if (other.PlayerProfessionRank != 0) {
        PlayerProfessionRank = other.PlayerProfessionRank;
      }
      if (other.PlayerProfessionGmtId.Length != 0) {
        PlayerProfessionGmtId = other.PlayerProfessionGmtId;
      }
      if (other.IsMobAlreadyEngaged != 0) {
        IsMobAlreadyEngaged = other.IsMobAlreadyEngaged;
      }
      if (other.PlayerEngagementWithMob.Length != 0) {
        PlayerEngagementWithMob = other.PlayerEngagementWithMob;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MobLevel = input.ReadInt32();
            break;
          }
          case 18: {
            MobAffinity = input.ReadString();
            break;
          }
          case 26: {
            MobGmtId = input.ReadString();
            break;
          }
          case 32: {
            PlayerProfessionRank = input.ReadInt32();
            break;
          }
          case 42: {
            PlayerProfessionGmtId = input.ReadString();
            break;
          }
          case 48: {
            IsMobAlreadyEngaged = (global::WUProtos.Enums.ActiveEngagement) input.ReadEnum();
            break;
          }
          case 58: {
            PlayerEngagementWithMob = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
