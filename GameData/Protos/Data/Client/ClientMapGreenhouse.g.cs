// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientMapGreenhouse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientMapGreenhouse.proto</summary>
  public static partial class ClientMapGreenhouseReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientMapGreenhouse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientMapGreenhouseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5XVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRNYXBHcmVlbmhvdXNlLnBy",
            "b3RvEhRXVVByb3Rvcy5EYXRhLkNsaWVudCJRChNDbGllbnRNYXBHcmVlbmhv",
            "dXNlEhYKDm5leHRfbG9vdF90aW1lGAEgASgDEiIKGmdyZWVuaG91c2VfdGVt",
            "cGxhdGVfZ210X2lkGAIgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapGreenhouse), global::WUProtos.Data.Client.ClientMapGreenhouse.Parser, new[]{ "NextLootTime", "GreenhouseTemplateGmtId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientMapGreenhouse : pb::IMessage<ClientMapGreenhouse> {
    private static readonly pb::MessageParser<ClientMapGreenhouse> _parser = new pb::MessageParser<ClientMapGreenhouse>(() => new ClientMapGreenhouse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientMapGreenhouse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientMapGreenhouseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapGreenhouse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapGreenhouse(ClientMapGreenhouse other) : this() {
      nextLootTime_ = other.nextLootTime_;
      greenhouseTemplateGmtId_ = other.greenhouseTemplateGmtId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapGreenhouse Clone() {
      return new ClientMapGreenhouse(this);
    }

    /// <summary>Field number for the "next_loot_time" field.</summary>
    public const int NextLootTimeFieldNumber = 1;
    private long nextLootTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextLootTime {
      get { return nextLootTime_; }
      set {
        nextLootTime_ = value;
      }
    }

    /// <summary>Field number for the "greenhouse_template_gmt_id" field.</summary>
    public const int GreenhouseTemplateGmtIdFieldNumber = 2;
    private string greenhouseTemplateGmtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GreenhouseTemplateGmtId {
      get { return greenhouseTemplateGmtId_; }
      set {
        greenhouseTemplateGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientMapGreenhouse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientMapGreenhouse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NextLootTime != other.NextLootTime) return false;
      if (GreenhouseTemplateGmtId != other.GreenhouseTemplateGmtId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NextLootTime != 0L) hash ^= NextLootTime.GetHashCode();
      if (GreenhouseTemplateGmtId.Length != 0) hash ^= GreenhouseTemplateGmtId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NextLootTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(NextLootTime);
      }
      if (GreenhouseTemplateGmtId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GreenhouseTemplateGmtId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NextLootTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextLootTime);
      }
      if (GreenhouseTemplateGmtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GreenhouseTemplateGmtId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientMapGreenhouse other) {
      if (other == null) {
        return;
      }
      if (other.NextLootTime != 0L) {
        NextLootTime = other.NextLootTime;
      }
      if (other.GreenhouseTemplateGmtId.Length != 0) {
        GreenhouseTemplateGmtId = other.GreenhouseTemplateGmtId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NextLootTime = input.ReadInt64();
            break;
          }
          case 18: {
            GreenhouseTemplateGmtId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
