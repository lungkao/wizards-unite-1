// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientTelemetryAssetLoad.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientTelemetryAssetLoad.proto</summary>
  public static partial class ClientTelemetryAssetLoadReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientTelemetryAssetLoad.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientTelemetryAssetLoadReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRUZWxlbWV0cnlBc3NldExv",
            "YWQucHJvdG8SFFdVUHJvdG9zLkRhdGEuQ2xpZW50IlwKGENsaWVudFRlbGVt",
            "ZXRyeUFzc2V0TG9hZBISCgphc3NldF9uYW1lGAEgASgJEhcKD3RvdGFsX2xv",
            "YWRfdGltZRgCIAEoARITCgtidW5kbGVfbmFtZRgDIAMoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientTelemetryAssetLoad), global::WUProtos.Data.Client.ClientTelemetryAssetLoad.Parser, new[]{ "AssetName", "TotalLoadTime", "BundleName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientTelemetryAssetLoad : pb::IMessage<ClientTelemetryAssetLoad> {
    private static readonly pb::MessageParser<ClientTelemetryAssetLoad> _parser = new pb::MessageParser<ClientTelemetryAssetLoad>(() => new ClientTelemetryAssetLoad());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientTelemetryAssetLoad> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientTelemetryAssetLoadReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryAssetLoad() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryAssetLoad(ClientTelemetryAssetLoad other) : this() {
      assetName_ = other.assetName_;
      totalLoadTime_ = other.totalLoadTime_;
      bundleName_ = other.bundleName_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryAssetLoad Clone() {
      return new ClientTelemetryAssetLoad(this);
    }

    /// <summary>Field number for the "asset_name" field.</summary>
    public const int AssetNameFieldNumber = 1;
    private string assetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetName {
      get { return assetName_; }
      set {
        assetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_load_time" field.</summary>
    public const int TotalLoadTimeFieldNumber = 2;
    private double totalLoadTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalLoadTime {
      get { return totalLoadTime_; }
      set {
        totalLoadTime_ = value;
      }
    }

    /// <summary>Field number for the "bundle_name" field.</summary>
    public const int BundleNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_bundleName_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> bundleName_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BundleName {
      get { return bundleName_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientTelemetryAssetLoad);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientTelemetryAssetLoad other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssetName != other.AssetName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalLoadTime, other.TotalLoadTime)) return false;
      if(!bundleName_.Equals(other.bundleName_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssetName.Length != 0) hash ^= AssetName.GetHashCode();
      if (TotalLoadTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalLoadTime);
      hash ^= bundleName_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssetName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AssetName);
      }
      if (TotalLoadTime != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TotalLoadTime);
      }
      bundleName_.WriteTo(output, _repeated_bundleName_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetName);
      }
      if (TotalLoadTime != 0D) {
        size += 1 + 8;
      }
      size += bundleName_.CalculateSize(_repeated_bundleName_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientTelemetryAssetLoad other) {
      if (other == null) {
        return;
      }
      if (other.AssetName.Length != 0) {
        AssetName = other.AssetName;
      }
      if (other.TotalLoadTime != 0D) {
        TotalLoadTime = other.TotalLoadTime;
      }
      bundleName_.Add(other.bundleName_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AssetName = input.ReadString();
            break;
          }
          case 17: {
            TotalLoadTime = input.ReadDouble();
            break;
          }
          case 26: {
            bundleName_.AddEntriesFrom(input, _repeated_bundleName_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
