// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientMapFortress.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientMapFortress.proto</summary>
  public static partial class ClientMapFortressReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientMapFortress.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientMapFortressReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRNYXBGb3J0cmVzcy5wcm90",
            "bxIUV1VQcm90b3MuRGF0YS5DbGllbnQiqAEKEUNsaWVudE1hcEZvcnRyZXNz",
            "EiAKGGZvcnRyZXNzX3RlbXBsYXRlX2dtdF9pZBgBIAEoCRIWCg5vd25pbmdf",
            "dGVhbV9pZBgCIAEoCRIXCg9lbGVjdG9yYWxfdm90ZXMYAyABKAMSEQoJc2Vh",
            "c29uX2lkGAQgASgJEhEKCXJlZ2lvbl9pZBgFIAEoCRIaChJ3Y19hY3RpdmVf",
            "dW50aWxfbXMYBiABKANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapFortress), global::WUProtos.Data.Client.ClientMapFortress.Parser, new[]{ "FortressTemplateGmtId", "OwningTeamId", "ElectoralVotes", "SeasonId", "RegionId", "WcActiveUntilMs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientMapFortress : pb::IMessage<ClientMapFortress> {
    private static readonly pb::MessageParser<ClientMapFortress> _parser = new pb::MessageParser<ClientMapFortress>(() => new ClientMapFortress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientMapFortress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientMapFortressReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapFortress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapFortress(ClientMapFortress other) : this() {
      fortressTemplateGmtId_ = other.fortressTemplateGmtId_;
      owningTeamId_ = other.owningTeamId_;
      electoralVotes_ = other.electoralVotes_;
      seasonId_ = other.seasonId_;
      regionId_ = other.regionId_;
      wcActiveUntilMs_ = other.wcActiveUntilMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapFortress Clone() {
      return new ClientMapFortress(this);
    }

    /// <summary>Field number for the "fortress_template_gmt_id" field.</summary>
    public const int FortressTemplateGmtIdFieldNumber = 1;
    private string fortressTemplateGmtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FortressTemplateGmtId {
      get { return fortressTemplateGmtId_; }
      set {
        fortressTemplateGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owning_team_id" field.</summary>
    public const int OwningTeamIdFieldNumber = 2;
    private string owningTeamId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwningTeamId {
      get { return owningTeamId_; }
      set {
        owningTeamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "electoral_votes" field.</summary>
    public const int ElectoralVotesFieldNumber = 3;
    private long electoralVotes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ElectoralVotes {
      get { return electoralVotes_; }
      set {
        electoralVotes_ = value;
      }
    }

    /// <summary>Field number for the "season_id" field.</summary>
    public const int SeasonIdFieldNumber = 4;
    private string seasonId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeasonId {
      get { return seasonId_; }
      set {
        seasonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_id" field.</summary>
    public const int RegionIdFieldNumber = 5;
    private string regionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionId {
      get { return regionId_; }
      set {
        regionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wc_active_until_ms" field.</summary>
    public const int WcActiveUntilMsFieldNumber = 6;
    private long wcActiveUntilMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WcActiveUntilMs {
      get { return wcActiveUntilMs_; }
      set {
        wcActiveUntilMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientMapFortress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientMapFortress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FortressTemplateGmtId != other.FortressTemplateGmtId) return false;
      if (OwningTeamId != other.OwningTeamId) return false;
      if (ElectoralVotes != other.ElectoralVotes) return false;
      if (SeasonId != other.SeasonId) return false;
      if (RegionId != other.RegionId) return false;
      if (WcActiveUntilMs != other.WcActiveUntilMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FortressTemplateGmtId.Length != 0) hash ^= FortressTemplateGmtId.GetHashCode();
      if (OwningTeamId.Length != 0) hash ^= OwningTeamId.GetHashCode();
      if (ElectoralVotes != 0L) hash ^= ElectoralVotes.GetHashCode();
      if (SeasonId.Length != 0) hash ^= SeasonId.GetHashCode();
      if (RegionId.Length != 0) hash ^= RegionId.GetHashCode();
      if (WcActiveUntilMs != 0L) hash ^= WcActiveUntilMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FortressTemplateGmtId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FortressTemplateGmtId);
      }
      if (OwningTeamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OwningTeamId);
      }
      if (ElectoralVotes != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ElectoralVotes);
      }
      if (SeasonId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SeasonId);
      }
      if (RegionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RegionId);
      }
      if (WcActiveUntilMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(WcActiveUntilMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FortressTemplateGmtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FortressTemplateGmtId);
      }
      if (OwningTeamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwningTeamId);
      }
      if (ElectoralVotes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElectoralVotes);
      }
      if (SeasonId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeasonId);
      }
      if (RegionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionId);
      }
      if (WcActiveUntilMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WcActiveUntilMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientMapFortress other) {
      if (other == null) {
        return;
      }
      if (other.FortressTemplateGmtId.Length != 0) {
        FortressTemplateGmtId = other.FortressTemplateGmtId;
      }
      if (other.OwningTeamId.Length != 0) {
        OwningTeamId = other.OwningTeamId;
      }
      if (other.ElectoralVotes != 0L) {
        ElectoralVotes = other.ElectoralVotes;
      }
      if (other.SeasonId.Length != 0) {
        SeasonId = other.SeasonId;
      }
      if (other.RegionId.Length != 0) {
        RegionId = other.RegionId;
      }
      if (other.WcActiveUntilMs != 0L) {
        WcActiveUntilMs = other.WcActiveUntilMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FortressTemplateGmtId = input.ReadString();
            break;
          }
          case 18: {
            OwningTeamId = input.ReadString();
            break;
          }
          case 24: {
            ElectoralVotes = input.ReadInt64();
            break;
          }
          case 34: {
            SeasonId = input.ReadString();
            break;
          }
          case 42: {
            RegionId = input.ReadString();
            break;
          }
          case 48: {
            WcActiveUntilMs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
