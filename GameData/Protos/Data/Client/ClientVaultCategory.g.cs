// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientVaultCategory.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientVaultCategory.proto</summary>
  public static partial class ClientVaultCategoryReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientVaultCategory.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientVaultCategoryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5XVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRWYXVsdENhdGVnb3J5LnBy",
            "b3RvEhRXVVByb3Rvcy5EYXRhLkNsaWVudCK1AgoTQ2xpZW50VmF1bHRDYXRl",
            "Z29yeRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9u",
            "GAMgASgJEgwKBGljb24YBCABKAkSFQoNc2hvd19pbl92YXVsdBgFIAEoCBIZ",
            "ChF3YXJuaW5nX3RocmVzaG9sZBgGIAEoAhIeChZjYXRlZ29yeV9kaXNwbGF5",
            "X29yZGVyGAcgASgFEi0KJWluY3JlYXNlX2NhcGFjaXR5X3N0b3JlX3BhY2tf",
            "cHJvdG9faWQYCCABKAkSLgomaW5jcmVhc2VfY2FwYWNpdHlfc3RvcmVfcGFj",
            "a19wcm90b19pZHMYCSADKAkSFwoPc3RvcmVfaXRlbV9uYW1lGAogASgJEhcK",
            "D3N0b3JlX2l0ZW1faWNvbhgLIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientVaultCategory), global::WUProtos.Data.Client.ClientVaultCategory.Parser, new[]{ "Id", "Name", "Description", "Icon", "ShowInVault", "WarningThreshold", "CategoryDisplayOrder", "IncreaseCapacityStorePackProtoId", "IncreaseCapacityStorePackProtoIds", "StoreItemName", "StoreItemIcon" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientVaultCategory : pb::IMessage<ClientVaultCategory> {
    private static readonly pb::MessageParser<ClientVaultCategory> _parser = new pb::MessageParser<ClientVaultCategory>(() => new ClientVaultCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientVaultCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientVaultCategoryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientVaultCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientVaultCategory(ClientVaultCategory other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      icon_ = other.icon_;
      showInVault_ = other.showInVault_;
      warningThreshold_ = other.warningThreshold_;
      categoryDisplayOrder_ = other.categoryDisplayOrder_;
      increaseCapacityStorePackProtoId_ = other.increaseCapacityStorePackProtoId_;
      increaseCapacityStorePackProtoIds_ = other.increaseCapacityStorePackProtoIds_.Clone();
      storeItemName_ = other.storeItemName_;
      storeItemIcon_ = other.storeItemIcon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientVaultCategory Clone() {
      return new ClientVaultCategory(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "show_in_vault" field.</summary>
    public const int ShowInVaultFieldNumber = 5;
    private bool showInVault_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowInVault {
      get { return showInVault_; }
      set {
        showInVault_ = value;
      }
    }

    /// <summary>Field number for the "warning_threshold" field.</summary>
    public const int WarningThresholdFieldNumber = 6;
    private float warningThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WarningThreshold {
      get { return warningThreshold_; }
      set {
        warningThreshold_ = value;
      }
    }

    /// <summary>Field number for the "category_display_order" field.</summary>
    public const int CategoryDisplayOrderFieldNumber = 7;
    private int categoryDisplayOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryDisplayOrder {
      get { return categoryDisplayOrder_; }
      set {
        categoryDisplayOrder_ = value;
      }
    }

    /// <summary>Field number for the "increase_capacity_store_pack_proto_id" field.</summary>
    public const int IncreaseCapacityStorePackProtoIdFieldNumber = 8;
    private string increaseCapacityStorePackProtoId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IncreaseCapacityStorePackProtoId {
      get { return increaseCapacityStorePackProtoId_; }
      set {
        increaseCapacityStorePackProtoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "increase_capacity_store_pack_proto_ids" field.</summary>
    public const int IncreaseCapacityStorePackProtoIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_increaseCapacityStorePackProtoIds_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> increaseCapacityStorePackProtoIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IncreaseCapacityStorePackProtoIds {
      get { return increaseCapacityStorePackProtoIds_; }
    }

    /// <summary>Field number for the "store_item_name" field.</summary>
    public const int StoreItemNameFieldNumber = 10;
    private string storeItemName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StoreItemName {
      get { return storeItemName_; }
      set {
        storeItemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "store_item_icon" field.</summary>
    public const int StoreItemIconFieldNumber = 11;
    private string storeItemIcon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StoreItemIcon {
      get { return storeItemIcon_; }
      set {
        storeItemIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientVaultCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientVaultCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Icon != other.Icon) return false;
      if (ShowInVault != other.ShowInVault) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WarningThreshold, other.WarningThreshold)) return false;
      if (CategoryDisplayOrder != other.CategoryDisplayOrder) return false;
      if (IncreaseCapacityStorePackProtoId != other.IncreaseCapacityStorePackProtoId) return false;
      if(!increaseCapacityStorePackProtoIds_.Equals(other.increaseCapacityStorePackProtoIds_)) return false;
      if (StoreItemName != other.StoreItemName) return false;
      if (StoreItemIcon != other.StoreItemIcon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (ShowInVault != false) hash ^= ShowInVault.GetHashCode();
      if (WarningThreshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WarningThreshold);
      if (CategoryDisplayOrder != 0) hash ^= CategoryDisplayOrder.GetHashCode();
      if (IncreaseCapacityStorePackProtoId.Length != 0) hash ^= IncreaseCapacityStorePackProtoId.GetHashCode();
      hash ^= increaseCapacityStorePackProtoIds_.GetHashCode();
      if (StoreItemName.Length != 0) hash ^= StoreItemName.GetHashCode();
      if (StoreItemIcon.Length != 0) hash ^= StoreItemIcon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (ShowInVault != false) {
        output.WriteRawTag(40);
        output.WriteBool(ShowInVault);
      }
      if (WarningThreshold != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(WarningThreshold);
      }
      if (CategoryDisplayOrder != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CategoryDisplayOrder);
      }
      if (IncreaseCapacityStorePackProtoId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IncreaseCapacityStorePackProtoId);
      }
      increaseCapacityStorePackProtoIds_.WriteTo(output, _repeated_increaseCapacityStorePackProtoIds_codec);
      if (StoreItemName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(StoreItemName);
      }
      if (StoreItemIcon.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StoreItemIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (ShowInVault != false) {
        size += 1 + 1;
      }
      if (WarningThreshold != 0F) {
        size += 1 + 4;
      }
      if (CategoryDisplayOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryDisplayOrder);
      }
      if (IncreaseCapacityStorePackProtoId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IncreaseCapacityStorePackProtoId);
      }
      size += increaseCapacityStorePackProtoIds_.CalculateSize(_repeated_increaseCapacityStorePackProtoIds_codec);
      if (StoreItemName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoreItemName);
      }
      if (StoreItemIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoreItemIcon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientVaultCategory other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.ShowInVault != false) {
        ShowInVault = other.ShowInVault;
      }
      if (other.WarningThreshold != 0F) {
        WarningThreshold = other.WarningThreshold;
      }
      if (other.CategoryDisplayOrder != 0) {
        CategoryDisplayOrder = other.CategoryDisplayOrder;
      }
      if (other.IncreaseCapacityStorePackProtoId.Length != 0) {
        IncreaseCapacityStorePackProtoId = other.IncreaseCapacityStorePackProtoId;
      }
      increaseCapacityStorePackProtoIds_.Add(other.increaseCapacityStorePackProtoIds_);
      if (other.StoreItemName.Length != 0) {
        StoreItemName = other.StoreItemName;
      }
      if (other.StoreItemIcon.Length != 0) {
        StoreItemIcon = other.StoreItemIcon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            ShowInVault = input.ReadBool();
            break;
          }
          case 53: {
            WarningThreshold = input.ReadFloat();
            break;
          }
          case 56: {
            CategoryDisplayOrder = input.ReadInt32();
            break;
          }
          case 66: {
            IncreaseCapacityStorePackProtoId = input.ReadString();
            break;
          }
          case 74: {
            increaseCapacityStorePackProtoIds_.AddEntriesFrom(input, _repeated_increaseCapacityStorePackProtoIds_codec);
            break;
          }
          case 82: {
            StoreItemName = input.ReadString();
            break;
          }
          case 90: {
            StoreItemIcon = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
