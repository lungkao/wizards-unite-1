// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientTelemetryProfilePortraitAction.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientTelemetryProfilePortraitAction.proto</summary>
  public static partial class ClientTelemetryProfilePortraitActionReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientTelemetryProfilePortraitAction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientTelemetryProfilePortraitActionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9XVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRUZWxlbWV0cnlQcm9maWxl",
            "UG9ydHJhaXRBY3Rpb24ucHJvdG8SFFdVUHJvdG9zLkRhdGEuQ2xpZW50GiVX",
            "VVByb3Rvcy9FbnVtcy9Qcm9maWxlVGFiU291cmNlLnByb3RvGiFXVVByb3Rv",
            "cy9FbnVtcy9Qb3J0cmFpdFR5cGUucHJvdG8aI1dVUHJvdG9zL0VudW1zL1Bv",
            "cnRyYWl0QWN0aW9uLnByb3RvGipXVVByb3Rvcy9FbnVtcy9DYXRlZ29yeVNo",
            "YXJlTG9jYXRpb24ucHJvdG8aIVdVUHJvdG9zL0VudW1zL0Rvd25sb2FkVHlw",
            "ZS5wcm90byKMBQokQ2xpZW50VGVsZW1ldHJ5UHJvZmlsZVBvcnRyYWl0QWN0",
            "aW9uEjYKDGJhc2VsaW5lX3NyYxgBIAEoDjIgLldVUHJvdG9zLkVudW1zLlBy",
            "b2ZpbGVUYWJTb3VyY2USNQoPcG9ydHJhaXRfZm9ybWF0GAIgASgOMhwuV1VQ",
            "cm90b3MuRW51bXMuUG9ydHJhaXRUeXBlEjcKD3BvcnRyYWl0X2FjdGlvbhgD",
            "IAEoDjIeLldVUHJvdG9zLkVudW1zLlBvcnRyYWl0QWN0aW9uEhkKEXBvcnRy",
            "YWl0X2xlbnNfdG9wGAQgASgJEhkKEXBvcnRyYWl0X2xlbnNfbWlkGAUgASgJ",
            "EhwKFHBvcnRyYWl0X2xlbnNfYm90dG9tGAYgASgJEhYKDnBvcnRyYWl0X2Zy",
            "YW1lGAcgASgJEhcKD3BvcnRyYWl0X2ZpbHRlchgIIAEoCRIcChRwb3J0cmFp",
            "dF9zdGlja2VyX2lkcxgJIAMoCRIeChZwb3J0cmFpdF9zdGlja2VyX2NvdW50",
            "GAogASgFEjsKDHNoYXJlX3NvdXJjZRgLIAEoDjIlLldVUHJvdG9zLkVudW1z",
            "LkNhdGVnb3J5U2hhcmVMb2NhdGlvbhIwCgpzaGFyZV90eXBlGAwgASgOMhwu",
            "V1VQcm90b3MuRW51bXMuRG93bmxvYWRUeXBlEhUKDXNoYXJlX25ldHdvcmsY",
            "DSABKAkSPgoPZG93bmxvYWRfc291cmNlGA4gASgOMiUuV1VQcm90b3MuRW51",
            "bXMuQ2F0ZWdvcnlTaGFyZUxvY2F0aW9uEjMKDWRvd25sb2FkX3R5cGUYDyAB",
            "KA4yHC5XVVByb3Rvcy5FbnVtcy5Eb3dubG9hZFR5cGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Enums.ProfileTabSourceReflection.Descriptor, global::WUProtos.Enums.PortraitTypeReflection.Descriptor, global::WUProtos.Enums.PortraitActionReflection.Descriptor, global::WUProtos.Enums.CategoryShareLocationReflection.Descriptor, global::WUProtos.Enums.DownloadTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientTelemetryProfilePortraitAction), global::WUProtos.Data.Client.ClientTelemetryProfilePortraitAction.Parser, new[]{ "BaselineSrc", "PortraitFormat", "PortraitAction", "PortraitLensTop", "PortraitLensMid", "PortraitLensBottom", "PortraitFrame", "PortraitFilter", "PortraitStickerIds", "PortraitStickerCount", "ShareSource", "ShareType", "ShareNetwork", "DownloadSource", "DownloadType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientTelemetryProfilePortraitAction : pb::IMessage<ClientTelemetryProfilePortraitAction> {
    private static readonly pb::MessageParser<ClientTelemetryProfilePortraitAction> _parser = new pb::MessageParser<ClientTelemetryProfilePortraitAction>(() => new ClientTelemetryProfilePortraitAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientTelemetryProfilePortraitAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientTelemetryProfilePortraitActionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryProfilePortraitAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryProfilePortraitAction(ClientTelemetryProfilePortraitAction other) : this() {
      baselineSrc_ = other.baselineSrc_;
      portraitFormat_ = other.portraitFormat_;
      portraitAction_ = other.portraitAction_;
      portraitLensTop_ = other.portraitLensTop_;
      portraitLensMid_ = other.portraitLensMid_;
      portraitLensBottom_ = other.portraitLensBottom_;
      portraitFrame_ = other.portraitFrame_;
      portraitFilter_ = other.portraitFilter_;
      portraitStickerIds_ = other.portraitStickerIds_.Clone();
      portraitStickerCount_ = other.portraitStickerCount_;
      shareSource_ = other.shareSource_;
      shareType_ = other.shareType_;
      shareNetwork_ = other.shareNetwork_;
      downloadSource_ = other.downloadSource_;
      downloadType_ = other.downloadType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryProfilePortraitAction Clone() {
      return new ClientTelemetryProfilePortraitAction(this);
    }

    /// <summary>Field number for the "baseline_src" field.</summary>
    public const int BaselineSrcFieldNumber = 1;
    private global::WUProtos.Enums.ProfileTabSource baselineSrc_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.ProfileTabSource BaselineSrc {
      get { return baselineSrc_; }
      set {
        baselineSrc_ = value;
      }
    }

    /// <summary>Field number for the "portrait_format" field.</summary>
    public const int PortraitFormatFieldNumber = 2;
    private global::WUProtos.Enums.PortraitType portraitFormat_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.PortraitType PortraitFormat {
      get { return portraitFormat_; }
      set {
        portraitFormat_ = value;
      }
    }

    /// <summary>Field number for the "portrait_action" field.</summary>
    public const int PortraitActionFieldNumber = 3;
    private global::WUProtos.Enums.PortraitAction portraitAction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.PortraitAction PortraitAction {
      get { return portraitAction_; }
      set {
        portraitAction_ = value;
      }
    }

    /// <summary>Field number for the "portrait_lens_top" field.</summary>
    public const int PortraitLensTopFieldNumber = 4;
    private string portraitLensTop_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortraitLensTop {
      get { return portraitLensTop_; }
      set {
        portraitLensTop_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait_lens_mid" field.</summary>
    public const int PortraitLensMidFieldNumber = 5;
    private string portraitLensMid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortraitLensMid {
      get { return portraitLensMid_; }
      set {
        portraitLensMid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait_lens_bottom" field.</summary>
    public const int PortraitLensBottomFieldNumber = 6;
    private string portraitLensBottom_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortraitLensBottom {
      get { return portraitLensBottom_; }
      set {
        portraitLensBottom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait_frame" field.</summary>
    public const int PortraitFrameFieldNumber = 7;
    private string portraitFrame_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortraitFrame {
      get { return portraitFrame_; }
      set {
        portraitFrame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait_filter" field.</summary>
    public const int PortraitFilterFieldNumber = 8;
    private string portraitFilter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortraitFilter {
      get { return portraitFilter_; }
      set {
        portraitFilter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait_sticker_ids" field.</summary>
    public const int PortraitStickerIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_portraitStickerIds_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> portraitStickerIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PortraitStickerIds {
      get { return portraitStickerIds_; }
    }

    /// <summary>Field number for the "portrait_sticker_count" field.</summary>
    public const int PortraitStickerCountFieldNumber = 10;
    private int portraitStickerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PortraitStickerCount {
      get { return portraitStickerCount_; }
      set {
        portraitStickerCount_ = value;
      }
    }

    /// <summary>Field number for the "share_source" field.</summary>
    public const int ShareSourceFieldNumber = 11;
    private global::WUProtos.Enums.CategoryShareLocation shareSource_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.CategoryShareLocation ShareSource {
      get { return shareSource_; }
      set {
        shareSource_ = value;
      }
    }

    /// <summary>Field number for the "share_type" field.</summary>
    public const int ShareTypeFieldNumber = 12;
    private global::WUProtos.Enums.DownloadType shareType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.DownloadType ShareType {
      get { return shareType_; }
      set {
        shareType_ = value;
      }
    }

    /// <summary>Field number for the "share_network" field.</summary>
    public const int ShareNetworkFieldNumber = 13;
    private string shareNetwork_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShareNetwork {
      get { return shareNetwork_; }
      set {
        shareNetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "download_source" field.</summary>
    public const int DownloadSourceFieldNumber = 14;
    private global::WUProtos.Enums.CategoryShareLocation downloadSource_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.CategoryShareLocation DownloadSource {
      get { return downloadSource_; }
      set {
        downloadSource_ = value;
      }
    }

    /// <summary>Field number for the "download_type" field.</summary>
    public const int DownloadTypeFieldNumber = 15;
    private global::WUProtos.Enums.DownloadType downloadType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.DownloadType DownloadType {
      get { return downloadType_; }
      set {
        downloadType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientTelemetryProfilePortraitAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientTelemetryProfilePortraitAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaselineSrc != other.BaselineSrc) return false;
      if (PortraitFormat != other.PortraitFormat) return false;
      if (PortraitAction != other.PortraitAction) return false;
      if (PortraitLensTop != other.PortraitLensTop) return false;
      if (PortraitLensMid != other.PortraitLensMid) return false;
      if (PortraitLensBottom != other.PortraitLensBottom) return false;
      if (PortraitFrame != other.PortraitFrame) return false;
      if (PortraitFilter != other.PortraitFilter) return false;
      if(!portraitStickerIds_.Equals(other.portraitStickerIds_)) return false;
      if (PortraitStickerCount != other.PortraitStickerCount) return false;
      if (ShareSource != other.ShareSource) return false;
      if (ShareType != other.ShareType) return false;
      if (ShareNetwork != other.ShareNetwork) return false;
      if (DownloadSource != other.DownloadSource) return false;
      if (DownloadType != other.DownloadType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BaselineSrc != 0) hash ^= BaselineSrc.GetHashCode();
      if (PortraitFormat != 0) hash ^= PortraitFormat.GetHashCode();
      if (PortraitAction != 0) hash ^= PortraitAction.GetHashCode();
      if (PortraitLensTop.Length != 0) hash ^= PortraitLensTop.GetHashCode();
      if (PortraitLensMid.Length != 0) hash ^= PortraitLensMid.GetHashCode();
      if (PortraitLensBottom.Length != 0) hash ^= PortraitLensBottom.GetHashCode();
      if (PortraitFrame.Length != 0) hash ^= PortraitFrame.GetHashCode();
      if (PortraitFilter.Length != 0) hash ^= PortraitFilter.GetHashCode();
      hash ^= portraitStickerIds_.GetHashCode();
      if (PortraitStickerCount != 0) hash ^= PortraitStickerCount.GetHashCode();
      if (ShareSource != 0) hash ^= ShareSource.GetHashCode();
      if (ShareType != 0) hash ^= ShareType.GetHashCode();
      if (ShareNetwork.Length != 0) hash ^= ShareNetwork.GetHashCode();
      if (DownloadSource != 0) hash ^= DownloadSource.GetHashCode();
      if (DownloadType != 0) hash ^= DownloadType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BaselineSrc != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BaselineSrc);
      }
      if (PortraitFormat != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PortraitFormat);
      }
      if (PortraitAction != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PortraitAction);
      }
      if (PortraitLensTop.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PortraitLensTop);
      }
      if (PortraitLensMid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PortraitLensMid);
      }
      if (PortraitLensBottom.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PortraitLensBottom);
      }
      if (PortraitFrame.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PortraitFrame);
      }
      if (PortraitFilter.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PortraitFilter);
      }
      portraitStickerIds_.WriteTo(output, _repeated_portraitStickerIds_codec);
      if (PortraitStickerCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(PortraitStickerCount);
      }
      if (ShareSource != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) ShareSource);
      }
      if (ShareType != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) ShareType);
      }
      if (ShareNetwork.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ShareNetwork);
      }
      if (DownloadSource != 0) {
        output.WriteRawTag(112);
        output.WriteEnum((int) DownloadSource);
      }
      if (DownloadType != 0) {
        output.WriteRawTag(120);
        output.WriteEnum((int) DownloadType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BaselineSrc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BaselineSrc);
      }
      if (PortraitFormat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PortraitFormat);
      }
      if (PortraitAction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PortraitAction);
      }
      if (PortraitLensTop.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortraitLensTop);
      }
      if (PortraitLensMid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortraitLensMid);
      }
      if (PortraitLensBottom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortraitLensBottom);
      }
      if (PortraitFrame.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortraitFrame);
      }
      if (PortraitFilter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortraitFilter);
      }
      size += portraitStickerIds_.CalculateSize(_repeated_portraitStickerIds_codec);
      if (PortraitStickerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PortraitStickerCount);
      }
      if (ShareSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShareSource);
      }
      if (ShareType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShareType);
      }
      if (ShareNetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShareNetwork);
      }
      if (DownloadSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DownloadSource);
      }
      if (DownloadType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DownloadType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientTelemetryProfilePortraitAction other) {
      if (other == null) {
        return;
      }
      if (other.BaselineSrc != 0) {
        BaselineSrc = other.BaselineSrc;
      }
      if (other.PortraitFormat != 0) {
        PortraitFormat = other.PortraitFormat;
      }
      if (other.PortraitAction != 0) {
        PortraitAction = other.PortraitAction;
      }
      if (other.PortraitLensTop.Length != 0) {
        PortraitLensTop = other.PortraitLensTop;
      }
      if (other.PortraitLensMid.Length != 0) {
        PortraitLensMid = other.PortraitLensMid;
      }
      if (other.PortraitLensBottom.Length != 0) {
        PortraitLensBottom = other.PortraitLensBottom;
      }
      if (other.PortraitFrame.Length != 0) {
        PortraitFrame = other.PortraitFrame;
      }
      if (other.PortraitFilter.Length != 0) {
        PortraitFilter = other.PortraitFilter;
      }
      portraitStickerIds_.Add(other.portraitStickerIds_);
      if (other.PortraitStickerCount != 0) {
        PortraitStickerCount = other.PortraitStickerCount;
      }
      if (other.ShareSource != 0) {
        ShareSource = other.ShareSource;
      }
      if (other.ShareType != 0) {
        ShareType = other.ShareType;
      }
      if (other.ShareNetwork.Length != 0) {
        ShareNetwork = other.ShareNetwork;
      }
      if (other.DownloadSource != 0) {
        DownloadSource = other.DownloadSource;
      }
      if (other.DownloadType != 0) {
        DownloadType = other.DownloadType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BaselineSrc = (global::WUProtos.Enums.ProfileTabSource) input.ReadEnum();
            break;
          }
          case 16: {
            PortraitFormat = (global::WUProtos.Enums.PortraitType) input.ReadEnum();
            break;
          }
          case 24: {
            PortraitAction = (global::WUProtos.Enums.PortraitAction) input.ReadEnum();
            break;
          }
          case 34: {
            PortraitLensTop = input.ReadString();
            break;
          }
          case 42: {
            PortraitLensMid = input.ReadString();
            break;
          }
          case 50: {
            PortraitLensBottom = input.ReadString();
            break;
          }
          case 58: {
            PortraitFrame = input.ReadString();
            break;
          }
          case 66: {
            PortraitFilter = input.ReadString();
            break;
          }
          case 74: {
            portraitStickerIds_.AddEntriesFrom(input, _repeated_portraitStickerIds_codec);
            break;
          }
          case 80: {
            PortraitStickerCount = input.ReadInt32();
            break;
          }
          case 88: {
            ShareSource = (global::WUProtos.Enums.CategoryShareLocation) input.ReadEnum();
            break;
          }
          case 96: {
            ShareType = (global::WUProtos.Enums.DownloadType) input.ReadEnum();
            break;
          }
          case 106: {
            ShareNetwork = input.ReadString();
            break;
          }
          case 112: {
            DownloadSource = (global::WUProtos.Enums.CategoryShareLocation) input.ReadEnum();
            break;
          }
          case 120: {
            DownloadType = (global::WUProtos.Enums.DownloadType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
