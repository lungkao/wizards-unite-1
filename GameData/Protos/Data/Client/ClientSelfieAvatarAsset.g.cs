// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientSelfieAvatarAsset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientSelfieAvatarAsset.proto</summary>
  public static partial class ClientSelfieAvatarAssetReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientSelfieAvatarAsset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientSelfieAvatarAssetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRTZWxmaWVBdmF0YXJBc3Nl",
            "dC5wcm90bxIUV1VQcm90b3MuRGF0YS5DbGllbnQaIFdVUHJvdG9zL0RhdGEv",
            "UmVxdWlyZW1lbnRzLnByb3RvIpwHChdDbGllbnRTZWxmaWVBdmF0YXJBc3Nl",
            "dBIKCgJpZBgBIAEoCRI2ChF1bmxvY2tfY29uZGl0aW9ucxgCIAMoCzIbLldV",
            "UHJvdG9zLkRhdGEuUmVxdWlyZW1lbnRzEhkKEWFzc2V0X3NjcmlwdF9uYW1l",
            "GAMgASgJEgwKBGljb24YBCABKAkSVwoKYXNzZXRfdHlwZRgFIAEoDjJDLldV",
            "UHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudFNlbGZpZUF2YXRhckFzc2V0LlNl",
            "bGZpZUF2YXRhckFzc2V0VHlwZRJVCglsZW5zX3R5cGUYBiABKA4yQi5XVVBy",
            "b3Rvcy5EYXRhLkNsaWVudC5DbGllbnRTZWxmaWVBdmF0YXJBc3NldC5TZWxm",
            "aWVBdmF0YXJMZW5zVHlwZRIPCgd2aXNpYmxlGAcgASgIEmoKFG1lZGlhX3N1",
            "cHBvcnRlZF90eXBlGAggASgOMkwuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xp",
            "ZW50U2VsZmllQXZhdGFyQXNzZXQuU2VsZmllQXZhdGFyTWVkaWFTdXBwb3J0",
            "ZWRUeXBlEhAKCGFuaW1hdGVkGAkgASgIEhUKDXN0b3JlX3BhY2tfaWQYCiAB",
            "KAkSEAoIb3JkZXJfaWQYCyABKAUSGQoRaXNfZnVsbF9ib2R5X2xlbnMYDCAB",
            "KAgSFgoOaXNfZW1wdHlfYXNzZXQYDSABKAgSEgoKc2hvd19iYWRnZRgOIAEo",
            "CBI6ChV2aXNpYmlsaXR5X2NvbmRpdGlvbnMYDyABKAsyGy5XVVByb3Rvcy5E",
            "YXRhLlJlcXVpcmVtZW50cxIYChBzdG9ja19hc3NldF9uYW1lGBAgASgJImkK",
            "FVNlbGZpZUF2YXRhckFzc2V0VHlwZRIWChJVTktOT1dOX0FTU0VUX1RZUEUQ",
            "ABIJCgVMRU5TRRABEgoKBkZJTFRFUhACEgkKBUZSQU1FEAMSCwoHU1RJQ0tF",
            "UhAEEgkKBVNUT0NLEAUiSwoUU2VsZmllQXZhdGFyTGVuc1R5cGUSFQoRVU5L",
            "Tk9XTl9MRU5TX1RZUEUQABIICgRIRUFEEAESCAoERkFDRRACEggKBE5FQ0sQ",
            "AyJXCh5TZWxmaWVBdmF0YXJNZWRpYVN1cHBvcnRlZFR5cGUSFgoSVU5LTk9X",
            "Tl9NRURJQV9UWVBFEAASBwoDQUxMEAESCQoFVklERU8QAhIJCgVQSE9UTxAD",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.RequirementsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientSelfieAvatarAsset), global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Parser, new[]{ "Id", "UnlockConditions", "AssetScriptName", "Icon", "AssetType", "LensType", "Visible", "MediaSupportedType", "Animated", "StorePackId", "OrderId", "IsFullBodyLens", "IsEmptyAsset", "ShowBadge", "VisibilityConditions", "StockAssetName" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType), typeof(global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType), typeof(global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientSelfieAvatarAsset : pb::IMessage<ClientSelfieAvatarAsset> {
    private static readonly pb::MessageParser<ClientSelfieAvatarAsset> _parser = new pb::MessageParser<ClientSelfieAvatarAsset>(() => new ClientSelfieAvatarAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientSelfieAvatarAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientSelfieAvatarAssetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientSelfieAvatarAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientSelfieAvatarAsset(ClientSelfieAvatarAsset other) : this() {
      id_ = other.id_;
      unlockConditions_ = other.unlockConditions_.Clone();
      assetScriptName_ = other.assetScriptName_;
      icon_ = other.icon_;
      assetType_ = other.assetType_;
      lensType_ = other.lensType_;
      visible_ = other.visible_;
      mediaSupportedType_ = other.mediaSupportedType_;
      animated_ = other.animated_;
      storePackId_ = other.storePackId_;
      orderId_ = other.orderId_;
      isFullBodyLens_ = other.isFullBodyLens_;
      isEmptyAsset_ = other.isEmptyAsset_;
      showBadge_ = other.showBadge_;
      visibilityConditions_ = other.visibilityConditions_ != null ? other.visibilityConditions_.Clone() : null;
      stockAssetName_ = other.stockAssetName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientSelfieAvatarAsset Clone() {
      return new ClientSelfieAvatarAsset(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unlock_conditions" field.</summary>
    public const int UnlockConditionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Requirements> _repeated_unlockConditions_codec
        = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Requirements.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Requirements> unlockConditions_ = new pbc::RepeatedField<global::WUProtos.Data.Requirements>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Requirements> UnlockConditions {
      get { return unlockConditions_; }
    }

    /// <summary>Field number for the "asset_script_name" field.</summary>
    public const int AssetScriptNameFieldNumber = 3;
    private string assetScriptName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetScriptName {
      get { return assetScriptName_; }
      set {
        assetScriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset_type" field.</summary>
    public const int AssetTypeFieldNumber = 5;
    private global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType assetType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType AssetType {
      get { return assetType_; }
      set {
        assetType_ = value;
      }
    }

    /// <summary>Field number for the "lens_type" field.</summary>
    public const int LensTypeFieldNumber = 6;
    private global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType lensType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType LensType {
      get { return lensType_; }
      set {
        lensType_ = value;
      }
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 7;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Visible {
      get { return visible_; }
      set {
        visible_ = value;
      }
    }

    /// <summary>Field number for the "media_supported_type" field.</summary>
    public const int MediaSupportedTypeFieldNumber = 8;
    private global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType mediaSupportedType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType MediaSupportedType {
      get { return mediaSupportedType_; }
      set {
        mediaSupportedType_ = value;
      }
    }

    /// <summary>Field number for the "animated" field.</summary>
    public const int AnimatedFieldNumber = 9;
    private bool animated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Animated {
      get { return animated_; }
      set {
        animated_ = value;
      }
    }

    /// <summary>Field number for the "store_pack_id" field.</summary>
    public const int StorePackIdFieldNumber = 10;
    private string storePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StorePackId {
      get { return storePackId_; }
      set {
        storePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 11;
    private int orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "is_full_body_lens" field.</summary>
    public const int IsFullBodyLensFieldNumber = 12;
    private bool isFullBodyLens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFullBodyLens {
      get { return isFullBodyLens_; }
      set {
        isFullBodyLens_ = value;
      }
    }

    /// <summary>Field number for the "is_empty_asset" field.</summary>
    public const int IsEmptyAssetFieldNumber = 13;
    private bool isEmptyAsset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEmptyAsset {
      get { return isEmptyAsset_; }
      set {
        isEmptyAsset_ = value;
      }
    }

    /// <summary>Field number for the "show_badge" field.</summary>
    public const int ShowBadgeFieldNumber = 14;
    private bool showBadge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowBadge {
      get { return showBadge_; }
      set {
        showBadge_ = value;
      }
    }

    /// <summary>Field number for the "visibility_conditions" field.</summary>
    public const int VisibilityConditionsFieldNumber = 15;
    private global::WUProtos.Data.Requirements visibilityConditions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Requirements VisibilityConditions {
      get { return visibilityConditions_; }
      set {
        visibilityConditions_ = value;
      }
    }

    /// <summary>Field number for the "stock_asset_name" field.</summary>
    public const int StockAssetNameFieldNumber = 16;
    private string stockAssetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StockAssetName {
      get { return stockAssetName_; }
      set {
        stockAssetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientSelfieAvatarAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientSelfieAvatarAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!unlockConditions_.Equals(other.unlockConditions_)) return false;
      if (AssetScriptName != other.AssetScriptName) return false;
      if (Icon != other.Icon) return false;
      if (AssetType != other.AssetType) return false;
      if (LensType != other.LensType) return false;
      if (Visible != other.Visible) return false;
      if (MediaSupportedType != other.MediaSupportedType) return false;
      if (Animated != other.Animated) return false;
      if (StorePackId != other.StorePackId) return false;
      if (OrderId != other.OrderId) return false;
      if (IsFullBodyLens != other.IsFullBodyLens) return false;
      if (IsEmptyAsset != other.IsEmptyAsset) return false;
      if (ShowBadge != other.ShowBadge) return false;
      if (!object.Equals(VisibilityConditions, other.VisibilityConditions)) return false;
      if (StockAssetName != other.StockAssetName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= unlockConditions_.GetHashCode();
      if (AssetScriptName.Length != 0) hash ^= AssetScriptName.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (AssetType != 0) hash ^= AssetType.GetHashCode();
      if (LensType != 0) hash ^= LensType.GetHashCode();
      if (Visible != false) hash ^= Visible.GetHashCode();
      if (MediaSupportedType != 0) hash ^= MediaSupportedType.GetHashCode();
      if (Animated != false) hash ^= Animated.GetHashCode();
      if (StorePackId.Length != 0) hash ^= StorePackId.GetHashCode();
      if (OrderId != 0) hash ^= OrderId.GetHashCode();
      if (IsFullBodyLens != false) hash ^= IsFullBodyLens.GetHashCode();
      if (IsEmptyAsset != false) hash ^= IsEmptyAsset.GetHashCode();
      if (ShowBadge != false) hash ^= ShowBadge.GetHashCode();
      if (visibilityConditions_ != null) hash ^= VisibilityConditions.GetHashCode();
      if (StockAssetName.Length != 0) hash ^= StockAssetName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      unlockConditions_.WriteTo(output, _repeated_unlockConditions_codec);
      if (AssetScriptName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AssetScriptName);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (AssetType != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AssetType);
      }
      if (LensType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) LensType);
      }
      if (Visible != false) {
        output.WriteRawTag(56);
        output.WriteBool(Visible);
      }
      if (MediaSupportedType != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) MediaSupportedType);
      }
      if (Animated != false) {
        output.WriteRawTag(72);
        output.WriteBool(Animated);
      }
      if (StorePackId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(StorePackId);
      }
      if (OrderId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OrderId);
      }
      if (IsFullBodyLens != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsFullBodyLens);
      }
      if (IsEmptyAsset != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsEmptyAsset);
      }
      if (ShowBadge != false) {
        output.WriteRawTag(112);
        output.WriteBool(ShowBadge);
      }
      if (visibilityConditions_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(VisibilityConditions);
      }
      if (StockAssetName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(StockAssetName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += unlockConditions_.CalculateSize(_repeated_unlockConditions_codec);
      if (AssetScriptName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetScriptName);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (AssetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AssetType);
      }
      if (LensType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LensType);
      }
      if (Visible != false) {
        size += 1 + 1;
      }
      if (MediaSupportedType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MediaSupportedType);
      }
      if (Animated != false) {
        size += 1 + 1;
      }
      if (StorePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StorePackId);
      }
      if (OrderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderId);
      }
      if (IsFullBodyLens != false) {
        size += 1 + 1;
      }
      if (IsEmptyAsset != false) {
        size += 1 + 1;
      }
      if (ShowBadge != false) {
        size += 1 + 1;
      }
      if (visibilityConditions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisibilityConditions);
      }
      if (StockAssetName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StockAssetName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientSelfieAvatarAsset other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      unlockConditions_.Add(other.unlockConditions_);
      if (other.AssetScriptName.Length != 0) {
        AssetScriptName = other.AssetScriptName;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.AssetType != 0) {
        AssetType = other.AssetType;
      }
      if (other.LensType != 0) {
        LensType = other.LensType;
      }
      if (other.Visible != false) {
        Visible = other.Visible;
      }
      if (other.MediaSupportedType != 0) {
        MediaSupportedType = other.MediaSupportedType;
      }
      if (other.Animated != false) {
        Animated = other.Animated;
      }
      if (other.StorePackId.Length != 0) {
        StorePackId = other.StorePackId;
      }
      if (other.OrderId != 0) {
        OrderId = other.OrderId;
      }
      if (other.IsFullBodyLens != false) {
        IsFullBodyLens = other.IsFullBodyLens;
      }
      if (other.IsEmptyAsset != false) {
        IsEmptyAsset = other.IsEmptyAsset;
      }
      if (other.ShowBadge != false) {
        ShowBadge = other.ShowBadge;
      }
      if (other.visibilityConditions_ != null) {
        if (visibilityConditions_ == null) {
          VisibilityConditions = new global::WUProtos.Data.Requirements();
        }
        VisibilityConditions.MergeFrom(other.VisibilityConditions);
      }
      if (other.StockAssetName.Length != 0) {
        StockAssetName = other.StockAssetName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            unlockConditions_.AddEntriesFrom(input, _repeated_unlockConditions_codec);
            break;
          }
          case 26: {
            AssetScriptName = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            AssetType = (global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType) input.ReadEnum();
            break;
          }
          case 48: {
            LensType = (global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType) input.ReadEnum();
            break;
          }
          case 56: {
            Visible = input.ReadBool();
            break;
          }
          case 64: {
            MediaSupportedType = (global::WUProtos.Data.Client.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType) input.ReadEnum();
            break;
          }
          case 72: {
            Animated = input.ReadBool();
            break;
          }
          case 82: {
            StorePackId = input.ReadString();
            break;
          }
          case 88: {
            OrderId = input.ReadInt32();
            break;
          }
          case 96: {
            IsFullBodyLens = input.ReadBool();
            break;
          }
          case 104: {
            IsEmptyAsset = input.ReadBool();
            break;
          }
          case 112: {
            ShowBadge = input.ReadBool();
            break;
          }
          case 122: {
            if (visibilityConditions_ == null) {
              VisibilityConditions = new global::WUProtos.Data.Requirements();
            }
            input.ReadMessage(VisibilityConditions);
            break;
          }
          case 130: {
            StockAssetName = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientSelfieAvatarAsset message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SelfieAvatarAssetType {
        [pbr::OriginalName("UNKNOWN_ASSET_TYPE")] UnknownAssetType = 0,
        [pbr::OriginalName("LENSE")] Lense = 1,
        [pbr::OriginalName("FILTER")] Filter = 2,
        [pbr::OriginalName("FRAME")] Frame = 3,
        [pbr::OriginalName("STICKER")] Sticker = 4,
        [pbr::OriginalName("STOCK")] Stock = 5,
      }

      public enum SelfieAvatarLensType {
        [pbr::OriginalName("UNKNOWN_LENS_TYPE")] UnknownLensType = 0,
        [pbr::OriginalName("HEAD")] Head = 1,
        [pbr::OriginalName("FACE")] Face = 2,
        [pbr::OriginalName("NECK")] Neck = 3,
      }

      public enum SelfieAvatarMediaSupportedType {
        [pbr::OriginalName("UNKNOWN_MEDIA_TYPE")] UnknownMediaType = 0,
        [pbr::OriginalName("ALL")] All = 1,
        [pbr::OriginalName("VIDEO")] Video = 2,
        [pbr::OriginalName("PHOTO")] Photo = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
