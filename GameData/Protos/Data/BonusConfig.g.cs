// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/BonusConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/BonusConfig.proto</summary>
  public static partial class BonusConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/BonusConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BonusConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9XVVByb3Rvcy9EYXRhL0JvbnVzQ29uZmlnLnByb3RvEg1XVVByb3Rvcy5E",
            "YXRhGidXVVByb3Rvcy9EYXRhL0xvb3QvTG9vdENvbGxlY3Rpb24ucHJvdG8i",
            "WAoLQm9udXNDb25maWcSFgoOdGllcl90aHJlc2hvbGQYASABKAISMQoFYm9u",
            "dXMYAiABKAsyIi5XVVByb3Rvcy5EYXRhLkxvb3QuTG9vdENvbGxlY3Rpb25i",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Loot.LootCollectionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.BonusConfig), global::WUProtos.Data.BonusConfig.Parser, new[]{ "TierThreshold", "Bonus" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BonusConfig : pb::IMessage<BonusConfig> {
    private static readonly pb::MessageParser<BonusConfig> _parser = new pb::MessageParser<BonusConfig>(() => new BonusConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BonusConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.BonusConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BonusConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BonusConfig(BonusConfig other) : this() {
      tierThreshold_ = other.tierThreshold_;
      bonus_ = other.bonus_ != null ? other.bonus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BonusConfig Clone() {
      return new BonusConfig(this);
    }

    /// <summary>Field number for the "tier_threshold" field.</summary>
    public const int TierThresholdFieldNumber = 1;
    private float tierThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TierThreshold {
      get { return tierThreshold_; }
      set {
        tierThreshold_ = value;
      }
    }

    /// <summary>Field number for the "bonus" field.</summary>
    public const int BonusFieldNumber = 2;
    private global::WUProtos.Data.Loot.LootCollection bonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Loot.LootCollection Bonus {
      get { return bonus_; }
      set {
        bonus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BonusConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BonusConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TierThreshold, other.TierThreshold)) return false;
      if (!object.Equals(Bonus, other.Bonus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TierThreshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TierThreshold);
      if (bonus_ != null) hash ^= Bonus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TierThreshold != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(TierThreshold);
      }
      if (bonus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Bonus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TierThreshold != 0F) {
        size += 1 + 4;
      }
      if (bonus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bonus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BonusConfig other) {
      if (other == null) {
        return;
      }
      if (other.TierThreshold != 0F) {
        TierThreshold = other.TierThreshold;
      }
      if (other.bonus_ != null) {
        if (bonus_ == null) {
          Bonus = new global::WUProtos.Data.Loot.LootCollection();
        }
        Bonus.MergeFrom(other.Bonus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            TierThreshold = input.ReadFloat();
            break;
          }
          case 18: {
            if (bonus_ == null) {
              Bonus = new global::WUProtos.Data.Loot.LootCollection();
            }
            input.ReadMessage(Bonus);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
