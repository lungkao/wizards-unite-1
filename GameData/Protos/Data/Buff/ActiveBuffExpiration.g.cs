// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Buff/ActiveBuffExpiration.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Buff {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Buff/ActiveBuffExpiration.proto</summary>
  public static partial class ActiveBuffExpirationReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Buff/ActiveBuffExpiration.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ActiveBuffExpirationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1XVVByb3Rvcy9EYXRhL0J1ZmYvQWN0aXZlQnVmZkV4cGlyYXRpb24ucHJv",
            "dG8SEldVUHJvdG9zLkRhdGEuQnVmZhosV1VQcm90b3MvRGF0YS9UaW1lQWN0",
            "aXZlQnVmZkV4cGlyYXRpb24ucHJvdG8aL1dVUHJvdG9zL0RhdGEvQ2hhcmdl",
            "c0FjdGl2ZUJ1ZmZFeHBpcmF0aW9uLnByb3RvGjdXVVByb3Rvcy9EYXRhL1By",
            "b2Zlc3Npb24vUHJvZmVzc2lvbkJ1ZmZFeHBpcmF0aW9uLnByb3RvGjBXVVBy",
            "b3Rvcy9EYXRhL0J1ZmYvUGVybWFuZW50QnVmZkV4cGlyYXRpb24ucHJvdG8a",
            "NVdVUHJvdG9zL0RhdGEvQ2hhbGxlbmdlL0NoYWxsZW5nZUJ1ZmZFeHBpcmF0",
            "aW9uLnByb3RvIukCChRBY3RpdmVCdWZmRXhwaXJhdGlvbhI3CgR0aW1lGAEg",
            "ASgLMicuV1VQcm90b3MuRGF0YS5UaW1lQWN0aXZlQnVmZkV4cGlyYXRpb25I",
            "ABI9CgdjaGFyZ2VzGAIgASgLMiouV1VQcm90b3MuRGF0YS5DaGFyZ2VzQWN0",
            "aXZlQnVmZkV4cGlyYXRpb25IABJICgpwcm9mZXNzaW9uGAMgASgLMjIuV1VQ",
            "cm90b3MuRGF0YS5Qcm9mZXNzaW9uLlByb2Zlc3Npb25CdWZmRXhwaXJhdGlv",
            "bkgAEkAKCXBlcm1hbmVudBgEIAEoCzIrLldVUHJvdG9zLkRhdGEuQnVmZi5Q",
            "ZXJtYW5lbnRCdWZmRXhwaXJhdGlvbkgAEkUKCWNoYWxsZW5nZRgGIAEoCzIw",
            "LldVUHJvdG9zLkRhdGEuQ2hhbGxlbmdlLkNoYWxsZW5nZUJ1ZmZFeHBpcmF0",
            "aW9uSABCBgoEVHlwZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.TimeActiveBuffExpirationReflection.Descriptor, global::WUProtos.Data.ChargesActiveBuffExpirationReflection.Descriptor, global::WUProtos.Data.Profession.ProfessionBuffExpirationReflection.Descriptor, global::WUProtos.Data.Buff.PermanentBuffExpirationReflection.Descriptor, global::WUProtos.Data.Challenge.ChallengeBuffExpirationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Buff.ActiveBuffExpiration), global::WUProtos.Data.Buff.ActiveBuffExpiration.Parser, new[]{ "Time", "Charges", "Profession", "Permanent", "Challenge" }, new[]{ "Type" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ActiveBuffExpiration : pb::IMessage<ActiveBuffExpiration> {
    private static readonly pb::MessageParser<ActiveBuffExpiration> _parser = new pb::MessageParser<ActiveBuffExpiration>(() => new ActiveBuffExpiration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActiveBuffExpiration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Buff.ActiveBuffExpirationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActiveBuffExpiration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActiveBuffExpiration(ActiveBuffExpiration other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Time:
          Time = other.Time.Clone();
          break;
        case TypeOneofCase.Charges:
          Charges = other.Charges.Clone();
          break;
        case TypeOneofCase.Profession:
          Profession = other.Profession.Clone();
          break;
        case TypeOneofCase.Permanent:
          Permanent = other.Permanent.Clone();
          break;
        case TypeOneofCase.Challenge:
          Challenge = other.Challenge.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActiveBuffExpiration Clone() {
      return new ActiveBuffExpiration(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.TimeActiveBuffExpiration Time {
      get { return typeCase_ == TypeOneofCase.Time ? (global::WUProtos.Data.TimeActiveBuffExpiration) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Time;
      }
    }

    /// <summary>Field number for the "charges" field.</summary>
    public const int ChargesFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.ChargesActiveBuffExpiration Charges {
      get { return typeCase_ == TypeOneofCase.Charges ? (global::WUProtos.Data.ChargesActiveBuffExpiration) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Charges;
      }
    }

    /// <summary>Field number for the "profession" field.</summary>
    public const int ProfessionFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Profession.ProfessionBuffExpiration Profession {
      get { return typeCase_ == TypeOneofCase.Profession ? (global::WUProtos.Data.Profession.ProfessionBuffExpiration) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Profession;
      }
    }

    /// <summary>Field number for the "permanent" field.</summary>
    public const int PermanentFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Buff.PermanentBuffExpiration Permanent {
      get { return typeCase_ == TypeOneofCase.Permanent ? (global::WUProtos.Data.Buff.PermanentBuffExpiration) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Permanent;
      }
    }

    /// <summary>Field number for the "challenge" field.</summary>
    public const int ChallengeFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Challenge.ChallengeBuffExpiration Challenge {
      get { return typeCase_ == TypeOneofCase.Challenge ? (global::WUProtos.Data.Challenge.ChallengeBuffExpiration) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Challenge;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Time = 1,
      Charges = 2,
      Profession = 3,
      Permanent = 4,
      Challenge = 6,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActiveBuffExpiration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActiveBuffExpiration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(Charges, other.Charges)) return false;
      if (!object.Equals(Profession, other.Profession)) return false;
      if (!object.Equals(Permanent, other.Permanent)) return false;
      if (!object.Equals(Challenge, other.Challenge)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Time) hash ^= Time.GetHashCode();
      if (typeCase_ == TypeOneofCase.Charges) hash ^= Charges.GetHashCode();
      if (typeCase_ == TypeOneofCase.Profession) hash ^= Profession.GetHashCode();
      if (typeCase_ == TypeOneofCase.Permanent) hash ^= Permanent.GetHashCode();
      if (typeCase_ == TypeOneofCase.Challenge) hash ^= Challenge.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Time) {
        output.WriteRawTag(10);
        output.WriteMessage(Time);
      }
      if (typeCase_ == TypeOneofCase.Charges) {
        output.WriteRawTag(18);
        output.WriteMessage(Charges);
      }
      if (typeCase_ == TypeOneofCase.Profession) {
        output.WriteRawTag(26);
        output.WriteMessage(Profession);
      }
      if (typeCase_ == TypeOneofCase.Permanent) {
        output.WriteRawTag(34);
        output.WriteMessage(Permanent);
      }
      if (typeCase_ == TypeOneofCase.Challenge) {
        output.WriteRawTag(50);
        output.WriteMessage(Challenge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Time) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (typeCase_ == TypeOneofCase.Charges) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Charges);
      }
      if (typeCase_ == TypeOneofCase.Profession) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profession);
      }
      if (typeCase_ == TypeOneofCase.Permanent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Permanent);
      }
      if (typeCase_ == TypeOneofCase.Challenge) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Challenge);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActiveBuffExpiration other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Time:
          if (Time == null) {
            Time = new global::WUProtos.Data.TimeActiveBuffExpiration();
          }
          Time.MergeFrom(other.Time);
          break;
        case TypeOneofCase.Charges:
          if (Charges == null) {
            Charges = new global::WUProtos.Data.ChargesActiveBuffExpiration();
          }
          Charges.MergeFrom(other.Charges);
          break;
        case TypeOneofCase.Profession:
          if (Profession == null) {
            Profession = new global::WUProtos.Data.Profession.ProfessionBuffExpiration();
          }
          Profession.MergeFrom(other.Profession);
          break;
        case TypeOneofCase.Permanent:
          if (Permanent == null) {
            Permanent = new global::WUProtos.Data.Buff.PermanentBuffExpiration();
          }
          Permanent.MergeFrom(other.Permanent);
          break;
        case TypeOneofCase.Challenge:
          if (Challenge == null) {
            Challenge = new global::WUProtos.Data.Challenge.ChallengeBuffExpiration();
          }
          Challenge.MergeFrom(other.Challenge);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.TimeActiveBuffExpiration subBuilder = new global::WUProtos.Data.TimeActiveBuffExpiration();
            if (typeCase_ == TypeOneofCase.Time) {
              subBuilder.MergeFrom(Time);
            }
            input.ReadMessage(subBuilder);
            Time = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.ChargesActiveBuffExpiration subBuilder = new global::WUProtos.Data.ChargesActiveBuffExpiration();
            if (typeCase_ == TypeOneofCase.Charges) {
              subBuilder.MergeFrom(Charges);
            }
            input.ReadMessage(subBuilder);
            Charges = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Profession.ProfessionBuffExpiration subBuilder = new global::WUProtos.Data.Profession.ProfessionBuffExpiration();
            if (typeCase_ == TypeOneofCase.Profession) {
              subBuilder.MergeFrom(Profession);
            }
            input.ReadMessage(subBuilder);
            Profession = subBuilder;
            break;
          }
          case 34: {
            global::WUProtos.Data.Buff.PermanentBuffExpiration subBuilder = new global::WUProtos.Data.Buff.PermanentBuffExpiration();
            if (typeCase_ == TypeOneofCase.Permanent) {
              subBuilder.MergeFrom(Permanent);
            }
            input.ReadMessage(subBuilder);
            Permanent = subBuilder;
            break;
          }
          case 50: {
            global::WUProtos.Data.Challenge.ChallengeBuffExpiration subBuilder = new global::WUProtos.Data.Challenge.ChallengeBuffExpiration();
            if (typeCase_ == TypeOneofCase.Challenge) {
              subBuilder.MergeFrom(Challenge);
            }
            input.ReadMessage(subBuilder);
            Challenge = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
