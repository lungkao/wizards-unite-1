// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/AudioConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/AudioConfig.proto</summary>
  public static partial class AudioConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/AudioConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AudioConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9XVVByb3Rvcy9EYXRhL0F1ZGlvQ29uZmlnLnByb3RvEg1XVVByb3Rvcy5E",
            "YXRhGh9XVVByb3Rvcy9EYXRhL011c2ljQ29uZmlnLnByb3RvIlQKC0F1ZGlv",
            "Q29uZmlnEhMKC211c2ljX2V2ZW50GAEgASgJEjAKDG11c2ljX2NvbmZpZxgC",
            "IAMoCzIaLldVUHJvdG9zLkRhdGEuTXVzaWNDb25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.MusicConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.AudioConfig), global::WUProtos.Data.AudioConfig.Parser, new[]{ "MusicEvent", "MusicConfig" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AudioConfig : pb::IMessage<AudioConfig> {
    private static readonly pb::MessageParser<AudioConfig> _parser = new pb::MessageParser<AudioConfig>(() => new AudioConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AudioConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.AudioConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig(AudioConfig other) : this() {
      musicEvent_ = other.musicEvent_;
      musicConfig_ = other.musicConfig_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig Clone() {
      return new AudioConfig(this);
    }

    /// <summary>Field number for the "music_event" field.</summary>
    public const int MusicEventFieldNumber = 1;
    private string musicEvent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MusicEvent {
      get { return musicEvent_; }
      set {
        musicEvent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "music_config" field.</summary>
    public const int MusicConfigFieldNumber = 2;
    private static readonly pb::FieldCodec<global::WUProtos.Data.MusicConfig> _repeated_musicConfig_codec
        = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.MusicConfig.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.MusicConfig> musicConfig_ = new pbc::RepeatedField<global::WUProtos.Data.MusicConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.MusicConfig> MusicConfig {
      get { return musicConfig_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AudioConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AudioConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MusicEvent != other.MusicEvent) return false;
      if(!musicConfig_.Equals(other.musicConfig_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MusicEvent.Length != 0) hash ^= MusicEvent.GetHashCode();
      hash ^= musicConfig_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MusicEvent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MusicEvent);
      }
      musicConfig_.WriteTo(output, _repeated_musicConfig_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MusicEvent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MusicEvent);
      }
      size += musicConfig_.CalculateSize(_repeated_musicConfig_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AudioConfig other) {
      if (other == null) {
        return;
      }
      if (other.MusicEvent.Length != 0) {
        MusicEvent = other.MusicEvent;
      }
      musicConfig_.Add(other.musicConfig_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MusicEvent = input.ReadString();
            break;
          }
          case 18: {
            musicConfig_.AddEntriesFrom(input, _repeated_musicConfig_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
