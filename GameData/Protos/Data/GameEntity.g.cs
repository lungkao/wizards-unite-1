// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/GameEntity.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/GameEntity.proto</summary>
  public static partial class GameEntityReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/GameEntity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameEntityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5XVVByb3Rvcy9EYXRhL0dhbWVFbnRpdHkucHJvdG8SDVdVUHJvdG9zLkRh",
            "dGEaJ1dVUHJvdG9zL0RhdGEvQ2xpZW50L0NsaWVudE1hcFBvaS5wcm90bxop",
            "V1VQcm90b3MvRGF0YS9DbGllbnQvQ2xpZW50TWFwVHJhY2UucHJvdG8aLFdV",
            "UHJvdG9zL0RhdGEvQ2xpZW50L0NsaWVudE1hcExhbmRtYXJrLnByb3RvGjRX",
            "VVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRNYXBQb3Rpb25JbmdyZWRpZW50",
            "LnByb3RvGihXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRXZWF0aGVyLnBy",
            "b3RvGjBXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRFbnZpcm9ubWVudFRh",
            "Z3MucHJvdG8iigMKCkdhbWVFbnRpdHkSMQoDcG9pGAEgASgLMiIuV1VQcm90",
            "b3MuRGF0YS5DbGllbnQuQ2xpZW50TWFwUG9pSAASNQoFdHJhY2UYAiABKAsy",
            "JC5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRNYXBUcmFjZUgAEjsKCGxh",
            "bmRtYXJrGAMgASgLMicuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50TWFw",
            "TGFuZG1hcmtIABJMChFwb3Rpb25faW5ncmVkaWVudBgEIAEoCzIvLldVUHJv",
            "dG9zLkRhdGEuQ2xpZW50LkNsaWVudE1hcFBvdGlvbkluZ3JlZGllbnRIABI2",
            "Cgd3ZWF0aGVyGAUgASgLMiMuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50",
            "V2VhdGhlckgAEkcKEGVudmlyb25tZW50X3RhZ3MYBiABKAsyKy5XVVByb3Rv",
            "cy5EYXRhLkNsaWVudC5DbGllbnRFbnZpcm9ubWVudFRhZ3NIAEIGCgRUeXBl",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Client.ClientMapPoiReflection.Descriptor, global::WUProtos.Data.Client.ClientMapTraceReflection.Descriptor, global::WUProtos.Data.Client.ClientMapLandmarkReflection.Descriptor, global::WUProtos.Data.Client.ClientMapPotionIngredientReflection.Descriptor, global::WUProtos.Data.Client.ClientWeatherReflection.Descriptor, global::WUProtos.Data.Client.ClientEnvironmentTagsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameEntity), global::WUProtos.Data.GameEntity.Parser, new[]{ "Poi", "Trace", "Landmark", "PotionIngredient", "Weather", "EnvironmentTags" }, new[]{ "Type" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameEntity : pb::IMessage<GameEntity> {
    private static readonly pb::MessageParser<GameEntity> _parser = new pb::MessageParser<GameEntity>(() => new GameEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.GameEntityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEntity(GameEntity other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Poi:
          Poi = other.Poi.Clone();
          break;
        case TypeOneofCase.Trace:
          Trace = other.Trace.Clone();
          break;
        case TypeOneofCase.Landmark:
          Landmark = other.Landmark.Clone();
          break;
        case TypeOneofCase.PotionIngredient:
          PotionIngredient = other.PotionIngredient.Clone();
          break;
        case TypeOneofCase.Weather:
          Weather = other.Weather.Clone();
          break;
        case TypeOneofCase.EnvironmentTags:
          EnvironmentTags = other.EnvironmentTags.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEntity Clone() {
      return new GameEntity(this);
    }

    /// <summary>Field number for the "poi" field.</summary>
    public const int PoiFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapPoi Poi {
      get { return typeCase_ == TypeOneofCase.Poi ? (global::WUProtos.Data.Client.ClientMapPoi) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Poi;
      }
    }

    /// <summary>Field number for the "trace" field.</summary>
    public const int TraceFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapTrace Trace {
      get { return typeCase_ == TypeOneofCase.Trace ? (global::WUProtos.Data.Client.ClientMapTrace) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Trace;
      }
    }

    /// <summary>Field number for the "landmark" field.</summary>
    public const int LandmarkFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapLandmark Landmark {
      get { return typeCase_ == TypeOneofCase.Landmark ? (global::WUProtos.Data.Client.ClientMapLandmark) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Landmark;
      }
    }

    /// <summary>Field number for the "potion_ingredient" field.</summary>
    public const int PotionIngredientFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapPotionIngredient PotionIngredient {
      get { return typeCase_ == TypeOneofCase.PotionIngredient ? (global::WUProtos.Data.Client.ClientMapPotionIngredient) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.PotionIngredient;
      }
    }

    /// <summary>Field number for the "weather" field.</summary>
    public const int WeatherFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientWeather Weather {
      get { return typeCase_ == TypeOneofCase.Weather ? (global::WUProtos.Data.Client.ClientWeather) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Weather;
      }
    }

    /// <summary>Field number for the "environment_tags" field.</summary>
    public const int EnvironmentTagsFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientEnvironmentTags EnvironmentTags {
      get { return typeCase_ == TypeOneofCase.EnvironmentTags ? (global::WUProtos.Data.Client.ClientEnvironmentTags) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.EnvironmentTags;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Poi = 1,
      Trace = 2,
      Landmark = 3,
      PotionIngredient = 4,
      Weather = 5,
      EnvironmentTags = 6,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Poi, other.Poi)) return false;
      if (!object.Equals(Trace, other.Trace)) return false;
      if (!object.Equals(Landmark, other.Landmark)) return false;
      if (!object.Equals(PotionIngredient, other.PotionIngredient)) return false;
      if (!object.Equals(Weather, other.Weather)) return false;
      if (!object.Equals(EnvironmentTags, other.EnvironmentTags)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Poi) hash ^= Poi.GetHashCode();
      if (typeCase_ == TypeOneofCase.Trace) hash ^= Trace.GetHashCode();
      if (typeCase_ == TypeOneofCase.Landmark) hash ^= Landmark.GetHashCode();
      if (typeCase_ == TypeOneofCase.PotionIngredient) hash ^= PotionIngredient.GetHashCode();
      if (typeCase_ == TypeOneofCase.Weather) hash ^= Weather.GetHashCode();
      if (typeCase_ == TypeOneofCase.EnvironmentTags) hash ^= EnvironmentTags.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Poi) {
        output.WriteRawTag(10);
        output.WriteMessage(Poi);
      }
      if (typeCase_ == TypeOneofCase.Trace) {
        output.WriteRawTag(18);
        output.WriteMessage(Trace);
      }
      if (typeCase_ == TypeOneofCase.Landmark) {
        output.WriteRawTag(26);
        output.WriteMessage(Landmark);
      }
      if (typeCase_ == TypeOneofCase.PotionIngredient) {
        output.WriteRawTag(34);
        output.WriteMessage(PotionIngredient);
      }
      if (typeCase_ == TypeOneofCase.Weather) {
        output.WriteRawTag(42);
        output.WriteMessage(Weather);
      }
      if (typeCase_ == TypeOneofCase.EnvironmentTags) {
        output.WriteRawTag(50);
        output.WriteMessage(EnvironmentTags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Poi) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Poi);
      }
      if (typeCase_ == TypeOneofCase.Trace) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trace);
      }
      if (typeCase_ == TypeOneofCase.Landmark) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Landmark);
      }
      if (typeCase_ == TypeOneofCase.PotionIngredient) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PotionIngredient);
      }
      if (typeCase_ == TypeOneofCase.Weather) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weather);
      }
      if (typeCase_ == TypeOneofCase.EnvironmentTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvironmentTags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameEntity other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Poi:
          if (Poi == null) {
            Poi = new global::WUProtos.Data.Client.ClientMapPoi();
          }
          Poi.MergeFrom(other.Poi);
          break;
        case TypeOneofCase.Trace:
          if (Trace == null) {
            Trace = new global::WUProtos.Data.Client.ClientMapTrace();
          }
          Trace.MergeFrom(other.Trace);
          break;
        case TypeOneofCase.Landmark:
          if (Landmark == null) {
            Landmark = new global::WUProtos.Data.Client.ClientMapLandmark();
          }
          Landmark.MergeFrom(other.Landmark);
          break;
        case TypeOneofCase.PotionIngredient:
          if (PotionIngredient == null) {
            PotionIngredient = new global::WUProtos.Data.Client.ClientMapPotionIngredient();
          }
          PotionIngredient.MergeFrom(other.PotionIngredient);
          break;
        case TypeOneofCase.Weather:
          if (Weather == null) {
            Weather = new global::WUProtos.Data.Client.ClientWeather();
          }
          Weather.MergeFrom(other.Weather);
          break;
        case TypeOneofCase.EnvironmentTags:
          if (EnvironmentTags == null) {
            EnvironmentTags = new global::WUProtos.Data.Client.ClientEnvironmentTags();
          }
          EnvironmentTags.MergeFrom(other.EnvironmentTags);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.Client.ClientMapPoi subBuilder = new global::WUProtos.Data.Client.ClientMapPoi();
            if (typeCase_ == TypeOneofCase.Poi) {
              subBuilder.MergeFrom(Poi);
            }
            input.ReadMessage(subBuilder);
            Poi = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.Client.ClientMapTrace subBuilder = new global::WUProtos.Data.Client.ClientMapTrace();
            if (typeCase_ == TypeOneofCase.Trace) {
              subBuilder.MergeFrom(Trace);
            }
            input.ReadMessage(subBuilder);
            Trace = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Client.ClientMapLandmark subBuilder = new global::WUProtos.Data.Client.ClientMapLandmark();
            if (typeCase_ == TypeOneofCase.Landmark) {
              subBuilder.MergeFrom(Landmark);
            }
            input.ReadMessage(subBuilder);
            Landmark = subBuilder;
            break;
          }
          case 34: {
            global::WUProtos.Data.Client.ClientMapPotionIngredient subBuilder = new global::WUProtos.Data.Client.ClientMapPotionIngredient();
            if (typeCase_ == TypeOneofCase.PotionIngredient) {
              subBuilder.MergeFrom(PotionIngredient);
            }
            input.ReadMessage(subBuilder);
            PotionIngredient = subBuilder;
            break;
          }
          case 42: {
            global::WUProtos.Data.Client.ClientWeather subBuilder = new global::WUProtos.Data.Client.ClientWeather();
            if (typeCase_ == TypeOneofCase.Weather) {
              subBuilder.MergeFrom(Weather);
            }
            input.ReadMessage(subBuilder);
            Weather = subBuilder;
            break;
          }
          case 50: {
            global::WUProtos.Data.Client.ClientEnvironmentTags subBuilder = new global::WUProtos.Data.Client.ClientEnvironmentTags();
            if (typeCase_ == TypeOneofCase.EnvironmentTags) {
              subBuilder.MergeFrom(EnvironmentTags);
            }
            input.ReadMessage(subBuilder);
            EnvironmentTags = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
