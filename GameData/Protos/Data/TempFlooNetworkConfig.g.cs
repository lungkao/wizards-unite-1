// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/TempFlooNetworkConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/TempFlooNetworkConfig.proto</summary>
  public static partial class TempFlooNetworkConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/TempFlooNetworkConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TempFlooNetworkConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilXVVByb3Rvcy9EYXRhL1RlbXBGbG9vTmV0d29ya0NvbmZpZy5wcm90bxIN",
            "V1VQcm90b3MuRGF0YSJaChVUZW1wRmxvb05ldHdvcmtDb25maWcSHwoXcG9p",
            "bnRzX3Blcl9idXR0b25fcHJlc3MYASABKAUSIAoYYnV0dG9uX3ByZXNzX2Nv",
            "b2xkb3duX21zGAIgASgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.TempFlooNetworkConfig), global::WUProtos.Data.TempFlooNetworkConfig.Parser, new[]{ "PointsPerButtonPress", "ButtonPressCooldownMs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TempFlooNetworkConfig : pb::IMessage<TempFlooNetworkConfig> {
    private static readonly pb::MessageParser<TempFlooNetworkConfig> _parser = new pb::MessageParser<TempFlooNetworkConfig>(() => new TempFlooNetworkConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TempFlooNetworkConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.TempFlooNetworkConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TempFlooNetworkConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TempFlooNetworkConfig(TempFlooNetworkConfig other) : this() {
      pointsPerButtonPress_ = other.pointsPerButtonPress_;
      buttonPressCooldownMs_ = other.buttonPressCooldownMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TempFlooNetworkConfig Clone() {
      return new TempFlooNetworkConfig(this);
    }

    /// <summary>Field number for the "points_per_button_press" field.</summary>
    public const int PointsPerButtonPressFieldNumber = 1;
    private int pointsPerButtonPress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PointsPerButtonPress {
      get { return pointsPerButtonPress_; }
      set {
        pointsPerButtonPress_ = value;
      }
    }

    /// <summary>Field number for the "button_press_cooldown_ms" field.</summary>
    public const int ButtonPressCooldownMsFieldNumber = 2;
    private long buttonPressCooldownMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ButtonPressCooldownMs {
      get { return buttonPressCooldownMs_; }
      set {
        buttonPressCooldownMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TempFlooNetworkConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TempFlooNetworkConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PointsPerButtonPress != other.PointsPerButtonPress) return false;
      if (ButtonPressCooldownMs != other.ButtonPressCooldownMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PointsPerButtonPress != 0) hash ^= PointsPerButtonPress.GetHashCode();
      if (ButtonPressCooldownMs != 0L) hash ^= ButtonPressCooldownMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PointsPerButtonPress != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PointsPerButtonPress);
      }
      if (ButtonPressCooldownMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ButtonPressCooldownMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PointsPerButtonPress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PointsPerButtonPress);
      }
      if (ButtonPressCooldownMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ButtonPressCooldownMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TempFlooNetworkConfig other) {
      if (other == null) {
        return;
      }
      if (other.PointsPerButtonPress != 0) {
        PointsPerButtonPress = other.PointsPerButtonPress;
      }
      if (other.ButtonPressCooldownMs != 0L) {
        ButtonPressCooldownMs = other.ButtonPressCooldownMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PointsPerButtonPress = input.ReadInt32();
            break;
          }
          case 16: {
            ButtonPressCooldownMs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
