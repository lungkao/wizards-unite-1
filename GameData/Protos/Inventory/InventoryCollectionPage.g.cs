// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Inventory/InventoryCollectionPage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Inventory {

  /// <summary>Holder for reflection information generated from WUProtos/Inventory/InventoryCollectionPage.proto</summary>
  public static partial class InventoryCollectionPageReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Inventory/InventoryCollectionPage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InventoryCollectionPageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBXVVByb3Rvcy9JbnZlbnRvcnkvSW52ZW50b3J5Q29sbGVjdGlvblBhZ2Uu",
            "cHJvdG8SEldVUHJvdG9zLkludmVudG9yeSKwAQoXSW52ZW50b3J5Q29sbGVj",
            "dGlvblBhZ2USCgoCaWQYASABKAkSHAoUZmlyc3Rfc3RpY2tlcl9nbXRfaWQY",
            "AiABKAkSHwoXZmlyc3Rfc3RpY2tlcl90aW1lc3RhbXAYAyABKAMSGwoTbGFz",
            "dF9zdGlja2VyX2dtdF9pZBgEIAEoCRIeChZsYXN0X3N0aWNrZXJfdGltZXN0",
            "YW1wGAUgASgDEg0KBWxldmVsGAYgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Inventory.InventoryCollectionPage), global::WUProtos.Inventory.InventoryCollectionPage.Parser, new[]{ "Id", "FirstStickerGmtId", "FirstStickerTimestamp", "LastStickerGmtId", "LastStickerTimestamp", "Level" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InventoryCollectionPage : pb::IMessage<InventoryCollectionPage> {
    private static readonly pb::MessageParser<InventoryCollectionPage> _parser = new pb::MessageParser<InventoryCollectionPage>(() => new InventoryCollectionPage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryCollectionPage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Inventory.InventoryCollectionPageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryCollectionPage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryCollectionPage(InventoryCollectionPage other) : this() {
      id_ = other.id_;
      firstStickerGmtId_ = other.firstStickerGmtId_;
      firstStickerTimestamp_ = other.firstStickerTimestamp_;
      lastStickerGmtId_ = other.lastStickerGmtId_;
      lastStickerTimestamp_ = other.lastStickerTimestamp_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryCollectionPage Clone() {
      return new InventoryCollectionPage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_sticker_gmt_id" field.</summary>
    public const int FirstStickerGmtIdFieldNumber = 2;
    private string firstStickerGmtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstStickerGmtId {
      get { return firstStickerGmtId_; }
      set {
        firstStickerGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_sticker_timestamp" field.</summary>
    public const int FirstStickerTimestampFieldNumber = 3;
    private long firstStickerTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FirstStickerTimestamp {
      get { return firstStickerTimestamp_; }
      set {
        firstStickerTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "last_sticker_gmt_id" field.</summary>
    public const int LastStickerGmtIdFieldNumber = 4;
    private string lastStickerGmtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastStickerGmtId {
      get { return lastStickerGmtId_; }
      set {
        lastStickerGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_sticker_timestamp" field.</summary>
    public const int LastStickerTimestampFieldNumber = 5;
    private long lastStickerTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastStickerTimestamp {
      get { return lastStickerTimestamp_; }
      set {
        lastStickerTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 6;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryCollectionPage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryCollectionPage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstStickerGmtId != other.FirstStickerGmtId) return false;
      if (FirstStickerTimestamp != other.FirstStickerTimestamp) return false;
      if (LastStickerGmtId != other.LastStickerGmtId) return false;
      if (LastStickerTimestamp != other.LastStickerTimestamp) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FirstStickerGmtId.Length != 0) hash ^= FirstStickerGmtId.GetHashCode();
      if (FirstStickerTimestamp != 0L) hash ^= FirstStickerTimestamp.GetHashCode();
      if (LastStickerGmtId.Length != 0) hash ^= LastStickerGmtId.GetHashCode();
      if (LastStickerTimestamp != 0L) hash ^= LastStickerTimestamp.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FirstStickerGmtId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstStickerGmtId);
      }
      if (FirstStickerTimestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FirstStickerTimestamp);
      }
      if (LastStickerGmtId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LastStickerGmtId);
      }
      if (LastStickerTimestamp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LastStickerTimestamp);
      }
      if (Level != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FirstStickerGmtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstStickerGmtId);
      }
      if (FirstStickerTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FirstStickerTimestamp);
      }
      if (LastStickerGmtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastStickerGmtId);
      }
      if (LastStickerTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastStickerTimestamp);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryCollectionPage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FirstStickerGmtId.Length != 0) {
        FirstStickerGmtId = other.FirstStickerGmtId;
      }
      if (other.FirstStickerTimestamp != 0L) {
        FirstStickerTimestamp = other.FirstStickerTimestamp;
      }
      if (other.LastStickerGmtId.Length != 0) {
        LastStickerGmtId = other.LastStickerGmtId;
      }
      if (other.LastStickerTimestamp != 0L) {
        LastStickerTimestamp = other.LastStickerTimestamp;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FirstStickerGmtId = input.ReadString();
            break;
          }
          case 24: {
            FirstStickerTimestamp = input.ReadInt64();
            break;
          }
          case 34: {
            LastStickerGmtId = input.ReadString();
            break;
          }
          case 40: {
            LastStickerTimestamp = input.ReadInt64();
            break;
          }
          case 48: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
