// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Inventory/InventoryCollectionFamily.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Inventory {

  /// <summary>Holder for reflection information generated from WUProtos/Inventory/InventoryCollectionFamily.proto</summary>
  public static partial class InventoryCollectionFamilyReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Inventory/InventoryCollectionFamily.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InventoryCollectionFamilyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJXVVByb3Rvcy9JbnZlbnRvcnkvSW52ZW50b3J5Q29sbGVjdGlvbkZhbWls",
            "eS5wcm90bxISV1VQcm90b3MuSW52ZW50b3J5IpABChlJbnZlbnRvcnlDb2xs",
            "ZWN0aW9uRmFtaWx5EgoKAmlkGAEgASgJEhEKCWZhbWlseV94cBgCIAEoBRIU",
            "CgxmYW1pbHlfbGV2ZWwYAyABKAUSHwoXcmV3YXJkc19jb2xsZWN0ZWRfbGV2",
            "ZWwYBCABKAUSHQoVY3VycmVudF9jaGVzdHNfb3BlbmVkGAUgASgFYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Inventory.InventoryCollectionFamily), global::WUProtos.Inventory.InventoryCollectionFamily.Parser, new[]{ "Id", "FamilyXp", "FamilyLevel", "RewardsCollectedLevel", "CurrentChestsOpened" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InventoryCollectionFamily : pb::IMessage<InventoryCollectionFamily> {
    private static readonly pb::MessageParser<InventoryCollectionFamily> _parser = new pb::MessageParser<InventoryCollectionFamily>(() => new InventoryCollectionFamily());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryCollectionFamily> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Inventory.InventoryCollectionFamilyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryCollectionFamily() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryCollectionFamily(InventoryCollectionFamily other) : this() {
      id_ = other.id_;
      familyXp_ = other.familyXp_;
      familyLevel_ = other.familyLevel_;
      rewardsCollectedLevel_ = other.rewardsCollectedLevel_;
      currentChestsOpened_ = other.currentChestsOpened_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryCollectionFamily Clone() {
      return new InventoryCollectionFamily(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_xp" field.</summary>
    public const int FamilyXpFieldNumber = 2;
    private int familyXp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FamilyXp {
      get { return familyXp_; }
      set {
        familyXp_ = value;
      }
    }

    /// <summary>Field number for the "family_level" field.</summary>
    public const int FamilyLevelFieldNumber = 3;
    private int familyLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FamilyLevel {
      get { return familyLevel_; }
      set {
        familyLevel_ = value;
      }
    }

    /// <summary>Field number for the "rewards_collected_level" field.</summary>
    public const int RewardsCollectedLevelFieldNumber = 4;
    private int rewardsCollectedLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardsCollectedLevel {
      get { return rewardsCollectedLevel_; }
      set {
        rewardsCollectedLevel_ = value;
      }
    }

    /// <summary>Field number for the "current_chests_opened" field.</summary>
    public const int CurrentChestsOpenedFieldNumber = 5;
    private int currentChestsOpened_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentChestsOpened {
      get { return currentChestsOpened_; }
      set {
        currentChestsOpened_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryCollectionFamily);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryCollectionFamily other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FamilyXp != other.FamilyXp) return false;
      if (FamilyLevel != other.FamilyLevel) return false;
      if (RewardsCollectedLevel != other.RewardsCollectedLevel) return false;
      if (CurrentChestsOpened != other.CurrentChestsOpened) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FamilyXp != 0) hash ^= FamilyXp.GetHashCode();
      if (FamilyLevel != 0) hash ^= FamilyLevel.GetHashCode();
      if (RewardsCollectedLevel != 0) hash ^= RewardsCollectedLevel.GetHashCode();
      if (CurrentChestsOpened != 0) hash ^= CurrentChestsOpened.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FamilyXp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FamilyXp);
      }
      if (FamilyLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FamilyLevel);
      }
      if (RewardsCollectedLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardsCollectedLevel);
      }
      if (CurrentChestsOpened != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentChestsOpened);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FamilyXp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FamilyXp);
      }
      if (FamilyLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FamilyLevel);
      }
      if (RewardsCollectedLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardsCollectedLevel);
      }
      if (CurrentChestsOpened != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentChestsOpened);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryCollectionFamily other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FamilyXp != 0) {
        FamilyXp = other.FamilyXp;
      }
      if (other.FamilyLevel != 0) {
        FamilyLevel = other.FamilyLevel;
      }
      if (other.RewardsCollectedLevel != 0) {
        RewardsCollectedLevel = other.RewardsCollectedLevel;
      }
      if (other.CurrentChestsOpened != 0) {
        CurrentChestsOpened = other.CurrentChestsOpened;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            FamilyXp = input.ReadInt32();
            break;
          }
          case 24: {
            FamilyLevel = input.ReadInt32();
            break;
          }
          case 32: {
            RewardsCollectedLevel = input.ReadInt32();
            break;
          }
          case 40: {
            CurrentChestsOpened = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
