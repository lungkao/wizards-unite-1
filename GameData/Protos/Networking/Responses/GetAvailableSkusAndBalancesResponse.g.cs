// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Responses/GetAvailableSkusAndBalancesResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Responses {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Responses/GetAvailableSkusAndBalancesResponse.proto</summary>
  public static partial class GetAvailableSkusAndBalancesResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Responses/GetAvailableSkusAndBalancesResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetAvailableSkusAndBalancesResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkdXVVByb3Rvcy9OZXR3b3JraW5nL1Jlc3BvbnNlcy9HZXRBdmFpbGFibGVT",
            "a3VzQW5kQmFsYW5jZXNSZXNwb25zZS5wcm90bxIdV1VQcm90b3MuTmV0d29y",
            "a2luZy5SZXNwb25zZXMaIFdVUHJvdG9zL0RhdGEvQXZhaWxhYmxlU2t1LnBy",
            "b3RvGiRXVVByb3Rvcy9EYXRhL0N1cnJlbmN5UXVhbnRpdHkucHJvdG8i0AEK",
            "I0dldEF2YWlsYWJsZVNrdXNBbmRCYWxhbmNlc1Jlc3BvbnNlEjIKDWF2YWls",
            "YWJsZV9za3UYASADKAsyGy5XVVByb3Rvcy5EYXRhLkF2YWlsYWJsZVNrdRIw",
            "CgdiYWxhbmNlGAIgAygLMh8uV1VQcm90b3MuRGF0YS5DdXJyZW5jeVF1YW50",
            "aXR5EhQKDHBsYXllcl90b2tlbhgDIAEoCSItCgZTdGF0dXMSCQoFVU5TRVQQ",
            "ABILCgdTVUNDRVNTEAESCwoHRkFJTFVSRRACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.AvailableSkuReflection.Descriptor, global::WUProtos.Data.CurrencyQuantityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse), global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Parser, new[]{ "AvailableSku", "Balance", "PlayerToken" }, null, new[]{ typeof(global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.Status) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetAvailableSkusAndBalancesResponse : pb::IMessage<GetAvailableSkusAndBalancesResponse> {
    private static readonly pb::MessageParser<GetAvailableSkusAndBalancesResponse> _parser = new pb::MessageParser<GetAvailableSkusAndBalancesResponse>(() => new GetAvailableSkusAndBalancesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableSkusAndBalancesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSkusAndBalancesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSkusAndBalancesResponse(GetAvailableSkusAndBalancesResponse other) : this() {
      availableSku_ = other.availableSku_.Clone();
      balance_ = other.balance_.Clone();
      playerToken_ = other.playerToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSkusAndBalancesResponse Clone() {
      return new GetAvailableSkusAndBalancesResponse(this);
    }

    /// <summary>Field number for the "available_sku" field.</summary>
    public const int AvailableSkuFieldNumber = 1;
    private static readonly pb::FieldCodec<global::WUProtos.Data.AvailableSku> _repeated_availableSku_codec
        = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.AvailableSku.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.AvailableSku> availableSku_ = new pbc::RepeatedField<global::WUProtos.Data.AvailableSku>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.AvailableSku> AvailableSku {
      get { return availableSku_; }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private static readonly pb::FieldCodec<global::WUProtos.Data.CurrencyQuantity> _repeated_balance_codec
        = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.CurrencyQuantity.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> balance_ = new pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> Balance {
      get { return balance_; }
    }

    /// <summary>Field number for the "player_token" field.</summary>
    public const int PlayerTokenFieldNumber = 3;
    private string playerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerToken {
      get { return playerToken_; }
      set {
        playerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableSkusAndBalancesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableSkusAndBalancesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availableSku_.Equals(other.availableSku_)) return false;
      if(!balance_.Equals(other.balance_)) return false;
      if (PlayerToken != other.PlayerToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availableSku_.GetHashCode();
      hash ^= balance_.GetHashCode();
      if (PlayerToken.Length != 0) hash ^= PlayerToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      availableSku_.WriteTo(output, _repeated_availableSku_codec);
      balance_.WriteTo(output, _repeated_balance_codec);
      if (PlayerToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availableSku_.CalculateSize(_repeated_availableSku_codec);
      size += balance_.CalculateSize(_repeated_balance_codec);
      if (PlayerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableSkusAndBalancesResponse other) {
      if (other == null) {
        return;
      }
      availableSku_.Add(other.availableSku_);
      balance_.Add(other.balance_);
      if (other.PlayerToken.Length != 0) {
        PlayerToken = other.PlayerToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            availableSku_.AddEntriesFrom(input, _repeated_availableSku_codec);
            break;
          }
          case 18: {
            balance_.AddEntriesFrom(input, _repeated_balance_codec);
            break;
          }
          case 26: {
            PlayerToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetAvailableSkusAndBalancesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILURE")] Failure = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
